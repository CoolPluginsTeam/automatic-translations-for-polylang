{"version":3,"file":"index.js","mappings":"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","sources":["webpack://automatic-translations-for-polylang/./src/AllowedMetafileds.js","webpack://automatic-translations-for-polylang/./src/component/FilterNestedAttr/index.js","webpack://automatic-translations-for-polylang/./src/component/FilterTargetContent/index.js","webpack://automatic-translations-for-polylang/./src/component/TranslateProvider/index.js","webpack://automatic-translations-for-polylang/./src/component/TranslateProvider/local-ai-translator/index.js","webpack://automatic-translations-for-polylang/./src/component/TranslateProvider/local-ai-translator/local-ai-translator.js","webpack://automatic-translations-for-polylang/./src/component/TranslateProvider/yandex/index.js","webpack://automatic-translations-for-polylang/./src/component/TranslateProvider/yandex/yandex-language.js","webpack://automatic-translations-for-polylang/./src/component/createTranslatedPost/SeoMetaFields/RankMathSeo.js","webpack://automatic-translations-for-polylang/./src/component/createTranslatedPost/SeoMetaFields/YoastSeoFields.js","webpack://automatic-translations-for-polylang/./src/component/createTranslatedPost/createBlock.js","webpack://automatic-translations-for-polylang/./src/component/createTranslatedPost/index.js","webpack://automatic-translations-for-polylang/./src/component/storeSourceString/index.js","webpack://automatic-translations-for-polylang/./src/component/storeTranslatedString/index.js","webpack://automatic-translations-for-polylang/./src/component/stringModalScroll/index.js","webpack://automatic-translations-for-polylang/./src/global-store/actions.js","webpack://automatic-translations-for-polylang/./src/global-store/index.js","webpack://automatic-translations-for-polylang/./src/global-store/reducer.js","webpack://automatic-translations-for-polylang/./src/global-store/selectors.js","webpack://automatic-translations-for-polylang/./src/global-store/types.js","webpack://automatic-translations-for-polylang/./src/popmodel.js","webpack://automatic-translations-for-polylang/./src/popupStringModal/body.js","webpack://automatic-translations-for-polylang/./src/popupStringModal/fetch-post.js","webpack://automatic-translations-for-polylang/./src/popupStringModal/footer.js","webpack://automatic-translations-for-polylang/./src/popupStringModal/header.js","webpack://automatic-translations-for-polylang/./src/popupStringModal/index.js","webpack://automatic-translations-for-polylang/./src/popupStringModal/notice.js","webpack://automatic-translations-for-polylang/external window \"React\"","webpack://automatic-translations-for-polylang/external window \"ReactDOM\"","webpack://automatic-translations-for-polylang/external window [\"wp\",\"data\"]","webpack://automatic-translations-for-polylang/external window [\"wp\",\"element\"]","webpack://automatic-translations-for-polylang/external window [\"wp\",\"i18n\"]","webpack://automatic-translations-for-polylang/webpack/bootstrap","webpack://automatic-translations-for-polylang/webpack/runtime/compat get default export","webpack://automatic-translations-for-polylang/webpack/runtime/define property getters","webpack://automatic-translations-for-polylang/webpack/runtime/hasOwnProperty shorthand","webpack://automatic-translations-for-polylang/webpack/runtime/make namespace object","webpack://automatic-translations-for-polylang/./src/index.js"],"sourcesContent":["const AllowedMetaFields={\r\n    '_yoast_wpseo_title': {type: 'string'},\r\n    '_yoast_wpseo_focuskw': {type: 'string'},\r\n    '_yoast_wpseo_metadesc': {type: 'string'},\r\n    '_yoast_wpseo_bctitle': {type: 'string'},\r\n    '_yoast_wpseo_opengraph-title': {type: 'string'},\r\n    '_yoast_wpseo_opengraph-description': {type: 'string'},\r\n    '_yoast_wpseo_twitter-title': {type: 'string'},\r\n    '_yoast_wpseo_twitter-description': {type: 'string'},\r\n    'rank_math_title': {type: 'string'},\r\n    'rank_math_description': {type: 'string'},\r\n    'rank_math_focus_keyword': {type: 'string'},\r\n    'rank_math_facebook_title': {type: 'string'},\r\n    'rank_math_facebook_description': {type: 'string'},\r\n    'rank_math_twitter_title': {type: 'string'},\r\n    'rank_math_twitter_description': {type: 'string'},\r\n    'rank_math_breadcrumb_title': {type: 'string'},\r\n};\r\n\r\nexport default AllowedMetaFields;","const FilterBlockNestedAttr = (idsArr, attrObj, blockAttr, callBack) => {\r\n    /**\r\n     * Iterates over the keys of the filter object and calls saveTranslatedAttr for each key.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Object} filterObj - The filter object to iterate over.\r\n     */\r\n    const childAttr = (idArr, filterObj) => {\r\n        Object.keys(filterObj).map(key => {\r\n            let filterObjType = filterObj;\r\n            filterObjType = filterObjType[key];\r\n            const newIdArr = new Array(...idArr, key);\r\n\r\n            callBack(newIdArr, filterObjType);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the attributes that are arrays and objects by recursively calling saveTranslatedAttr.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Array} attrFilter - The filter attribute array.\r\n     */\r\n    const childAttrArray = (idArr, attrFilter) => {\r\n\r\n        const newIdArr = new Array(...idArr);\r\n        let dynamicBlockAttr = blockAttr;\r\n\r\n        newIdArr.forEach(key => {\r\n            dynamicBlockAttr = dynamicBlockAttr[key];\r\n        });\r\n\r\n        if (Object.getPrototypeOf(dynamicBlockAttr) === Object.prototype) {\r\n            childAttr(idArr, attrFilter[0]);\r\n            return;\r\n        }\r\n        \r\n        if (Object.getPrototypeOf(dynamicBlockAttr) === Array.prototype) {\r\n            dynamicBlockAttr.forEach((_, index) => {\r\n                const nestedId = new Array();\r\n                newIdArr.forEach(key => {\r\n                    nestedId.push(key);\r\n                });\r\n                \r\n                nestedId.push(index);\r\n                callBack(nestedId, attrFilter[0]);\r\n            });\r\n        }\r\n\r\n        if (typeof dynamicBlockAttr === 'object') {\r\n            childAttr(idArr, attrFilter[0]);\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    const typeCheck = () => {\r\n        if (Object.getPrototypeOf(attrObj) === Array.prototype) {\r\n            childAttrArray(idsArr, attrObj);\r\n        } else if (Object.getPrototypeOf(attrObj) === Object.prototype) {\r\n            childAttr(idsArr, attrObj);\r\n        }\r\n    }\r\n\r\n    typeCheck();\r\n}\r\n\r\nexport default FilterBlockNestedAttr;","const FilterTargetContent = (props) => {\r\n\r\n    /**\r\n     * Wraps the first element and its matching closing tag with translation spans.\r\n     * If no elements are found, returns the original HTML.\r\n     * @param {string} html - The HTML string to process.\r\n     * @returns {string} The modified HTML string with wrapped translation spans.\r\n     */\r\n    const wrapFirstAndMatchingClosingTag = (html) => {\r\n        // Create a temporary element to parse the HTML string\r\n        const tempElement = document.createElement('div');\r\n        tempElement.innerHTML = html;\r\n\r\n        // Get the first element\r\n        const firstElement = tempElement.firstElementChild;\r\n\r\n        if (!firstElement) {\r\n            return html; // If no elements, return the original HTML\r\n        }\r\n\r\n        let childElements = firstElement.children;\r\n        const length = childElements.length;\r\n        if (length > 0) {\r\n            for (let i = 0; i < length; i++) {\r\n                let element = childElements[i];\r\n                let filterContent = wrapFirstAndMatchingClosingTag(element.outerHTML);\r\n                element.outerHTML = filterContent;\r\n            }\r\n        }\r\n\r\n        // Get the opening tag of the first element\r\n        // const firstElementOpeningTag = firstElement.outerHTML.match(/^<[^>]+>/)[0];\r\n        const firstElementOpeningTag = firstElement.outerHTML.match(/^<[^>]+>/)[0];\r\n\r\n        // Check if the first element has a corresponding closing tag\r\n        const openTagName = firstElement.tagName.toLowerCase();\r\n        const closingTagName = new RegExp(`<\\/${openTagName}>`, 'i');\r\n\r\n        // Check if the inner HTML contains the corresponding closing tag\r\n        const closingTagMatch = firstElement.outerHTML.match(closingTagName);\r\n\r\n        // Wrap the style element\r\n        if (firstElementOpeningTag === '<style>') {\r\n            let wrappedFirstTag = `#atfp_open_translate_span#${firstElement.outerHTML}#atfp_close_translate_span#`;\r\n            return wrappedFirstTag;\r\n        }\r\n\r\n        const firstElementHtml = firstElement.innerHTML;\r\n        firstElement.innerHTML = '';\r\n\r\n        let openTag = `#atfp_open_translate_span#${firstElementOpeningTag}#atfp_close_translate_span#`;\r\n        let closeTag = '';\r\n        let filterContent = '';\r\n\r\n        if (closingTagMatch) {\r\n            closeTag = `#atfp_open_translate_span#</${openTagName}>#atfp_close_translate_span#`;\r\n        }\r\n\r\n        if ('' !== firstElementHtml) {\r\n            if ('' !== openTag) {\r\n                filterContent = openTag + firstElementHtml;\r\n            }\r\n            if ('' !== closeTag) {\r\n                filterContent += closeTag;\r\n            }\r\n        } else {\r\n            filterContent = openTag + closeTag;\r\n        }\r\n\r\n        firstElement.outerHTML = filterContent;\r\n\r\n        // Return the modified HTML\r\n        return tempElement.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Splits the content string based on a specific pattern.\r\n     * @param {string} string - The content string to split.\r\n     * @returns {Array} An array of strings after splitting based on the pattern.\r\n     */\r\n    const splitContent = (string) => {\r\n        const pattern = /(#atfp_open_translate_span#.*?#atfp_close_translate_span#)|'/;\r\n        const matches = string.split(pattern).filter(Boolean);\r\n\r\n        // Remove empty strings from the result\r\n        const output = matches.filter(match => match.trim() !== '');\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * Filters the SEO content.\r\n     * @param {string} content - The SEO content to filter.\r\n     * @returns {string} The filtered SEO content.\r\n     */\r\n    const filterSeoContent = (content) => {\r\n        const regex = /(%{1,2}[a-zA-Z0-9_]+%{0,2})/g;\r\n\r\n        // Replace placeholders with wrapped spans\r\n        const output = content.replace(regex, (match) => {\r\n            return `#atfp_open_translate_span#${match}#atfp_close_translate_span#`;\r\n        });\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * Replaces the inner text of HTML elements with span elements for translation.\r\n     * @param {string} string - The HTML content string to process.\r\n     * @returns {Array} An array of strings after splitting based on the pattern.\r\n     */\r\n    const filterSourceData = (string) => {\r\n        function replaceInnerTextWithSpan(doc) {\r\n            let childElements = doc.children;\r\n\r\n            const childElementsReplace = () => {\r\n                if (childElements.length > 0) {\r\n                    let element = childElements[0];\r\n                    let filterContent = wrapFirstAndMatchingClosingTag(element.outerHTML);\r\n                    const textNode = document.createTextNode(filterContent);\r\n\r\n                    element.replaceWith(textNode);\r\n                    childElementsReplace();\r\n                }\r\n            }\r\n            childElementsReplace();\r\n            return doc;\r\n        }\r\n\r\n        const tempElement = document.createElement('div');\r\n        tempElement.innerHTML = string;\r\n        replaceInnerTextWithSpan(tempElement);\r\n\r\n        let content = tempElement.innerText;\r\n\r\n        const isSeoContent = /^(_yoast_wpseo_|rank_math_)/.test(props.contentKey.trim());\r\n        if (isSeoContent) {\r\n            content= filterSeoContent(content);\r\n        }\r\n\r\n        return splitContent(content);\r\n    }\r\n\r\n    /**\r\n     * The content to be filtered based on the service type.\r\n     * If the service is 'yandex', the content is filtered using filterSourceData function, otherwise, the content remains unchanged.\r\n     */\r\n    const content = 'yandex' === props.service || 'localAiTranslator' === props.service ? filterSourceData(props.content) : props.content;\r\n\r\n    props.translateContent(content);\r\n\r\n    if (props.currentIndex === props.totalString) {\r\n        props.translateContent({ stringRenderComplete: true });\r\n    }\r\n\r\n    /**\r\n     * Regular expression pattern to match the span elements that should not be translated.\r\n     */\r\n    const notTranslatePattern = /#atfp_open_translate_span#[\\s\\S]*?#atfp_close_translate_span#/;\r\n\r\n    /**\r\n     * Regular expression pattern to replace the placeholder span elements.\r\n     */\r\n    const replacePlaceholderPattern = /#atfp_open_translate_span#|#atfp_close_translate_span#/g;\r\n\r\n    const filterContent = content => {\r\n        const updatedContent = content.replace(replacePlaceholderPattern, '');\r\n        return updatedContent;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {'yandex' === props.service || 'localAiTranslator' === props.service ?\r\n                content.map((data, index) => {\r\n                    const notTranslate = notTranslatePattern.test(data);\r\n                    if (notTranslate) {\r\n                        return <span key={index} className=\"notranslate atfp-notraslate-tag\" translate=\"no\">{filterContent(data)}</span>;\r\n                    } else {\r\n                        return data;\r\n                    }\r\n                })\r\n                : content}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterTargetContent;","import YandexTranslater from \"./yandex\";\r\nimport localAiTranslator from \"./local-ai-translator\";\r\n\r\n/**\r\n * Provides translation services using Yandex Translate.\r\n */\r\nexport default { yandex: YandexTranslater, localAiTranslator: localAiTranslator };\r\n","import ChromeAiTranslator from \"./local-ai-translator\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nconst { dispatch } = wp.data;\r\nimport SaveTranslation from \"../../storeTranslatedString\";\r\n\r\nconst localAiTranslator = async (props)=>{\r\n    const targetLangName = atfp_ajax_object.languageObject[props.targetLang];\r\n\r\n    const startTranslation = () => {\r\n        const stringContainer = jQuery(\"#atfp_strings_model .modal-content .atfp_string_container\");\r\n        if (stringContainer[0].scrollHeight > 100) {\r\n            jQuery(\"#atfp_strings_model .atfp_translate_progress\").fadeIn(\"slow\");\r\n        }\r\n    }\r\n\r\n    const completeTranslation = () => {\r\n        setTimeout(() => {\r\n            props.translateStatus();\r\n            jQuery(\"#atfp_strings_model .atfp_translate_progress\").fadeOut(\"slow\");\r\n        }, 4000);\r\n    }\r\n\r\n    const beforeTranslate = (ele) => {\r\n        const stringContainer = jQuery(\"#atfp_strings_model .modal-content .atfp_string_container\");\r\n\r\n        const scrollStringContainer = (position) => {\r\n            stringContainer.scrollTop(position);\r\n        };\r\n\r\n        const stringContainerPosition = stringContainer[0].getBoundingClientRect();\r\n\r\n        const eleTopPosition = ele.closest(\"tr\").offsetTop;\r\n        const containerHeight = stringContainer.height();\r\n\r\n        if (eleTopPosition > (containerHeight + stringContainerPosition.y)) {\r\n            scrollStringContainer(eleTopPosition - containerHeight + ele.offsetHeight);\r\n        }\r\n    }\r\n\r\n    const afterTranslate = (ele) => {\r\n        const translatedText = ele.innerText;\r\n        const type = ele.dataset.stringType;\r\n        const key = ele.dataset.key;\r\n        const sourceText = ele.closest('tr').querySelector('td[data-source=\"source_text\"]').innerText;\r\n\r\n        SaveTranslation({type: type, key: key, translateContent: translatedText, source: sourceText});\r\n    }\r\n\r\n    const TranslateProvider = await ChromeAiTranslator.Object({\r\n        mainWrapperSelector: \"#atfp_strings_model\",\r\n        btnSelector: `#${props.ID}`,\r\n        btnClass: \"local_ai_translator_btn\",\r\n        btnText: __(\"Translate To\", 'automatic-translations-for-polylang') + ' ' + targetLangName +' (Beta)',\r\n        stringSelector: \".atfp_string_container tbody tr td.translate\",\r\n        progressBarSelector: \"#atfp_strings_model .atfp_translate_progress\",\r\n        sourceLanguage: props.sourceLang,\r\n        targetLanguage: props.targetLang,\r\n        targetLanguageLabel: targetLangName,\r\n        onStartTranslationProcess: startTranslation,\r\n        onComplete: completeTranslation,\r\n        onBeforeTranslate: beforeTranslate,\r\n        onAfterTranslate: afterTranslate\r\n    });\r\n\r\n    if(TranslateProvider.hasOwnProperty('init')){\r\n        TranslateProvider.init();\r\n    }\r\n};\r\n\r\nexport default localAiTranslator;","class ChromeAiTranslator {\r\n    // Static method to create an instance of ChromeAiTranslator and return extra data\r\n    static Object = (options) => {\r\n        const selfObject = new this(options);\r\n        return selfObject.extraData();\r\n    };\r\n\r\n    // Constructor to initialize the translator with options\r\n    constructor(options) {\r\n        this.btnSelector = options.btnSelector || false; // Selector for the button that triggers translation\r\n        this.btnClass = options.btnClass || false; // Class for the button\r\n        this.btnText = options.btnText || `Translate To ${options.targetLanguageLabel} (Beta)`; // Text for the button\r\n        this.stringSelector = options.stringSelector || false; // Selector for the elements containing strings to translate\r\n        this.progressBarSelector = options.progressBarSelector || false; // Selector for the progress bar element\r\n        this.onStartTranslationProcess = options.onStartTranslationProcess || (() => { }); // Callback for when translation starts\r\n        this.onComplete = options.onComplete || (() => { }); // Callback for when translation completes\r\n        this.onLanguageError = options.onLanguageError || (() => { }); // Callback for language errors\r\n        this.onBeforeTranslate = options.onBeforeTranslate || (() => { }); // Callback for before translation\r\n        this.onAfterTranslate = options.onAfterTranslate || (() => { }); // Callback for after translation\r\n        this.sourceLanguage = options.sourceLanguage || \"en\"; // Default source language\r\n        this.targetLanguage = options.targetLanguage || \"hi\"; // Default target language\r\n        this.targetLanguageLabel = options.targetLanguageLabel || \"Hindi\"; // Label for the target language\r\n    }\r\n\r\n    // Method to check language support and return relevant data\r\n    extraData = async () => {\r\n        // Check if the language is supported\r\n        const langSupportedStatus = await ChromeAiTranslator.languageSupportedStatus(this.sourceLanguage, this.targetLanguage, this.targetLanguageLabel); \r\n\r\n        if(langSupportedStatus !== true){\r\n            this.onLanguageError(langSupportedStatus); // Handle language error\r\n            return {}; // Return empty object if language is not supported\r\n        }\r\n\r\n        this.defaultLang = this.targetLanguage; // Set default language\r\n\r\n        // Return methods for translation control\r\n        return { \r\n            continueTranslation: this.continueTranslation, \r\n            stopTranslation: this.stopTranslation, \r\n            startTranslation: this.startTranslation, \r\n            reInit: this.reInit, \r\n            init: this.init \r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Checks if the specified source and target languages are supported by the Local Translator AI modal.\r\n     * \r\n     * @param {string} sourceLanguage - The language code for the source language (e.g., \"en\" for English).\r\n     * @param {string} targetLanguage - The language code for the target language (e.g., \"hi\" for Hindi).\r\n     * @param {string} targetLanguageLabel - The label for the target language (e.g., \"Hindi\").\r\n     * @returns {Promise<boolean|jQuery>} - Returns true if the languages are supported, or a jQuery message if not.\r\n     */\r\n    static languageSupportedStatus = async (sourceLanguage, targetLanguage, targetLanguageLabel) => {\r\n        const supportedLanguages = ['en','es', 'ja', 'ar', 'bn', 'de', 'fr', 'hi', 'it', 'ko', 'nl', 'pl', 'pt', 'ru', 'th', 'tr', 'vi', 'zh', 'zh-hant', 'bg', 'cs', 'da', 'el', 'fi', 'hr', 'hu', 'id', 'iw', 'lt', 'no', 'ro', 'sk', 'sl', 'sv', 'uk', 'en-zh'].map(lang => lang.toLowerCase());\r\n\r\n        // Browser check\r\n        if(!window.hasOwnProperty('chrome') || !navigator.userAgent.includes('Chrome') || navigator.userAgent.includes('Edg')){\r\n            const message = jQuery(`<span style=\"color: #ff4646; margin-top: .5rem; display: inline-block;\">The Translator API, which uses local AI models, only works in the Chrome browser. For more details, <a href=\"https://developer.chrome.com/docs/ai/translator-api\" target=\"_blank\">click here</a>.</span>`);\r\n            return message;\r\n        }\r\n        // Check if the translation API is available\r\n        if (!('translation' in self && 'createTranslator' in self.translation)) {\r\n            const message = jQuery(`<span style=\"color: #ff4646; margin-top: .5rem; display: inline-block;\">The Translator AI modal is currently not supported or disabled in your browser. Please enable it. For detailed instructions on how to enable the Translator AI modal in your Chrome browser, <a href=\"https://developer.chrome.com/docs/ai/translator-api#bypass_language_restrictions_for_local_testing\" target=\"_blank\">click here</a>.</span>`);\r\n            return message;\r\n        }\r\n\r\n        // Check if the target language is supported\r\n        if (!supportedLanguages.includes(targetLanguage.toLowerCase())) {\r\n            const message = jQuery(`<span style=\"color: #ff4646; margin-top: .5rem; display: inline-block;\">Unfortunately, the <strong>${targetLanguageLabel} (${targetLanguage})</strong> language is currently not supported by the Local Translator AI modal. Please check and read the docs which languages are currently supported by <a href=\"https://developer.chrome.com/docs/ai/translator-api#bypass_language_restrictions_for_local_testing\" target=\"_blank\">clicking here</a>.</span>`);\r\n            return message;\r\n        }\r\n\r\n        // Check if translation can be performed\r\n        const status = await translation.canTranslate({\r\n            sourceLanguage: sourceLanguage,\r\n            targetLanguage: targetLanguage,\r\n        });\r\n\r\n\r\n        // Handle case for language pack after download\r\n        if (status === \"after-download\") {\r\n            const message = jQuery(`<span style=\"color: #ff4646; margin-top: .5rem; display: inline-block;\">Please install the <strong>${targetLanguageLabel} (${targetLanguage})</strong> language pack to proceed.To install the language pack, visit <strong>chrome://on-device-translation-internals</strong>. For further assistance, refer to the <a href=\"https://developer.chrome.com/docs/ai/translator-api#bypass_language_restrictions_for_local_testing\" target=\"_blank\">documentation</a>.</span>`);\r\n            return message;\r\n        }\r\n\r\n        // Handle case for language pack not readily available\r\n        if (status !== 'readily') {\r\n            const message = jQuery(`<span style=\"color: #ff4646; margin-top: .5rem; display: inline-block;\">Please ensure that the <strong>${targetLanguageLabel} (${targetLanguage})</strong> language pack is installed and set as a preferred language in your browser. To install the language pack, visit <strong>chrome://on-device-translation-internals</strong>. For further assistance, refer to the <a href=\"https://developer.chrome.com/docs/ai/translator-api#bypass_language_restrictions_for_local_testing\" target=\"_blank\">documentation</a>.</span>`);\r\n            return message;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // Method to initialize the translation process\r\n    init = async () => {\r\n        this.appendBtn();\r\n        this.translationStart = false; // Flag to indicate if translation has started\r\n        this.completedTranslateIndex = 0; // Index of the last completed translation\r\n        this.completedCharacterCount = 0; // Count of characters translated\r\n        this.translateBtnEvents(); // Set up button events\r\n        if(this.progressBarSelector) {\r\n            this.addProgressBar(); // Add progress bar to the UI\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Appends a translation button to the specified button selector.\r\n     * The button is styled with primary button classes and includes\r\n     * any additional classes specified in `this.btnClass`.\r\n     */\r\n    appendBtn = () => {\r\n        this.translateBtn = jQuery(`<button class=\"button button-primary${this.btnClass ? ' ' + this.btnClass : ''}\">${this.btnText}</button>`);\r\n        jQuery(this.btnSelector).append(this.translateBtn);\r\n    }\r\n\r\n    // Method to set up button events for translation\r\n    translateBtnEvents = (e) => {\r\n        if (!this.btnSelector || jQuery(this.btnSelector).length === 0) return this.onLanguageError(\"The button selector is missing. Please provide a valid selector for the button.\");\r\n        if (!this.stringSelector || jQuery(this.stringSelector).length === 0) return this.onLanguageError(\"The string selector is missing. Please provide a valid selector for the strings to be translated.\");\r\n\r\n        this.translateStatus = true; // Set translation status to true\r\n        this.translateBtn.off(\"click\"); // Clear previous click handlers\r\n        this.translateBtn.prop(\"disabled\", false); // Enable the button\r\n\r\n        // Set up click event for starting translation\r\n        if (!this.translationStart) {\r\n            this.translateBtn.on(\"click\", this.startTranslationProcess);\r\n        } else if (this.translateStringEle.length > (this.completedTranslateIndex + 1)) {\r\n            this.translateBtn.on(\"click\", () => {\r\n                this.onStartTranslationProcess(); // Call the start translation callback\r\n                this.stringTranslation(this.completedTranslateIndex + 1); // Start translating the next string\r\n            });\r\n        } else {\r\n            this.onComplete({translatedStringsCount: this.completedCharacterCount}); // Call the complete callback\r\n            this.translateBtn.prop(\"disabled\", true); // Disable the button\r\n        }\r\n    };\r\n\r\n    // Method to start the translation process\r\n    startTranslationProcess = async () => {\r\n        this.onStartTranslationProcess(); // Call the start translation callback\r\n        const langCode = this.defaultLang; // Get the default language code\r\n\r\n        this.translationStart = true; // Set translation start flag\r\n        this.translateStringEle = jQuery(this.stringSelector); // Get the elements to translate\r\n\r\n        // Calculate total character count for progress tracking\r\n        this.totalStringCount = Array.from(this.translateStringEle).map(ele => ele.innerText.length).reduce((a, b) => a + b, 0);\r\n\r\n        // Create a translator instance\r\n        this.translator = await self.translation.createTranslator({\r\n            sourceLanguage: this.sourceLanguage,\r\n            targetLanguage: langCode,\r\n        });\r\n\r\n        // Start translating if there are strings to translate\r\n        if (this.translateStringEle.length > 0) {\r\n            await this.stringTranslation(this.completedTranslateIndex);\r\n        }\r\n    };\r\n\r\n    // Method to translate a specific string at the given index\r\n    stringTranslation = async (index) => {\r\n        if (!this.translateStatus) return; // Exit if translation is stopped\r\n        const ele = this.translateStringEle[index]; // Get the element to translate\r\n        this.onBeforeTranslate(ele); // Call the before translation callback\r\n        const orignalText = ele.innerText;\r\n        let originalString = [];\r\n\r\n        if(ele.childNodes.length > 0 && !ele.querySelector('.notranslate')){\r\n            ele.childNodes.forEach(child => {\r\n                if(child.nodeType === 3 && child.nodeValue.trim() !== ''){\r\n                    originalString.push(child);\r\n                }\r\n            });\r\n        }else if(ele.querySelector('.notranslate')){\r\n           ele.childNodes.forEach(child => {\r\n            if(child.nodeType === 3 && child.nodeValue.trim() !== ''){\r\n                originalString.push(child);\r\n                }\r\n            });\r\n        }\r\n\r\n        if(originalString.length > 0){\r\n            await this.stringTranslationBatch(originalString, 0);\r\n        }\r\n\r\n        this.completedCharacterCount += orignalText.length; // Update character count\r\n        this.completedTranslateIndex = index; // Update completed index\r\n        if(this.progressBarSelector) {\r\n            this.updateProgressBar(); // Update the progress bar\r\n        }\r\n        this.onAfterTranslate(ele); // Call the after translation callback\r\n\r\n        // Continue translating the next string if available\r\n        if (this.translateStringEle.length > index + 1) {\r\n            await this.stringTranslation(this.completedTranslateIndex + 1);\r\n        }\r\n\r\n        // If all strings are translated, complete the process\r\n        if (index === this.translateStringEle.length - 1) {\r\n            this.translateBtn.prop(\"disabled\", true); // Disable the button\r\n            this.onComplete({characterCount: this.completedCharacterCount}); // Call the complete callback\r\n            jQuery(this.progressBarSelector).find(\".chrome-ai-translator-strings-count\").show().find(\".totalChars\").text(this.completedCharacterCount);\r\n        }\r\n    };\r\n\r\n    stringTranslationBatch = async (originalString, index) => {\r\n        const translatedString = await this.translator.translate(originalString[index].nodeValue); // Translate the string\r\n\r\n        if (translatedString && '' !== translatedString) {\r\n            originalString[index].nodeValue = translatedString; // Set the translated string\r\n        }\r\n\r\n        if(index < originalString.length - 1){\r\n            await this.stringTranslationBatch(originalString, index + 1);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // Method to add a progress bar to the UI\r\n    addProgressBar = () => {\r\n        if (!document.querySelector(\"#chrome-ai-translator-modal .chrome-ai-translator_progress_bar\")) {\r\n            const progressBar = jQuery(`\r\n                <div class=\"chrome-ai-translator_progress_bar\" style=\"background-color: #f3f3f3;border-radius: 10px;overflow: hidden;margin: 1.5rem auto; width: 50%;\">\r\n                <div class=\"chrome-ai-translator_progress\" style=\"overflow: hidden;transition: width .5s ease-in-out; border-radius: 10px;text-align: center;width: 0%;height: 20px;box-sizing: border-box;background-color: #4caf50; color: #fff; font-weight: 600;\"></div>\r\n                </div>\r\n                <div style=\"display:none; color: white;\" class=\"chrome-ai-translator-strings-count hidden\">\r\n                    Wahooo! You have saved your valuable time via auto translating \r\n                    <strong class=\"totalChars\">0</strong> characters using \r\n                    <strong>\r\n                        Chrome AI Translator\r\n                    </strong>\r\n                </div>\r\n            `);\r\n            jQuery(this.progressBarSelector).append(progressBar); // Append the progress bar to the specified selector\r\n        }\r\n    };\r\n\r\n    // Method to update the progress bar based on translation progress\r\n    updateProgressBar = () => {\r\n        const progress = ((this.completedCharacterCount / this.totalStringCount) * 1000) / 10; // Calculate progress percentage\r\n        let decimalValue = progress.toString().split('.')[1] || ''; // Get decimal part of the progress\r\n        decimalValue = decimalValue.length > 0 && decimalValue[0] !== '0' ? decimalValue[0] : ''; // Format decimal value\r\n        const formattedProgress = parseInt(progress) + `${decimalValue !== '' ? '.' + decimalValue : ''}`; // Format progress for display\r\n        jQuery(\".chrome-ai-translator_progress\").css({ \"width\": `${formattedProgress}%` }).text(`${formattedProgress}%`); // Update progress bar width and text\r\n    };\r\n\r\n    // Method to stop the translation process\r\n    stopTranslation = () => {\r\n        this.translateStatus = false; // Set translation status to false\r\n    }\r\n\r\n    // Method to reinitialize button events\r\n    reInit = () => {\r\n        this.translateBtnEvents(); // Re-setup button events\r\n    }\r\n\r\n    // Method to start translation from the current index\r\n    startTranslation = () => {\r\n        this.translateStatus = true; // Set translation status to true\r\n        this.startTranslationProcess(this.completedTranslateIndex + 1); // Start translation process\r\n    }\r\n}\r\n\r\n/*\r\n * Example Usage of the ChromeAiTranslator.init method.\r\n * This method initializes the Chrome AI Translator with a comprehensive set of configuration options to facilitate the translation process.\r\n * \r\n * Configuration Options:\r\n * \r\n * - mainWrapperSelector: A CSS selector for the main wrapper element that encapsulates all translation-related elements.\r\n * - btnSelector: A CSS selector for the button that initiates the translation process.\r\n * - btnClass: A custom class for styling the translation button.\r\n * - btnText: The text displayed on the translation button.\r\n * - stringSelector: A CSS selector for the elements that contain the strings intended for translation.\r\n * - progressBarSelector: A CSS selector for the progress bar element that visually represents the translation progress.\r\n * - sourceLanguage: The language code representing the source language (e.g., \"es\" for Spanish).\r\n * - targetLanguage: The language code representing the target language (e.g., \"fr\" for French).\r\n * - onStartTranslationProcess: A callback function that is executed when the translation process begins.\r\n * - onBeforeTranslate: A callback function that is executed prior to each individual translation.\r\n * - onAfterTranslate: A callback function that is executed following each translation.\r\n * - onComplete: A callback function that is executed upon the completion of the translation process.\r\n * - onLanguageError: A callback function that is executed when a language-related error occurs.\r\n */\r\n\r\n// Example for checking language support status\r\n// ChromeAiTranslator.languageSupportedStatus(\"en\", \"fr\", \"French\");\r\n\r\n// const chromeAiTranslatorObject = ChromeAiTranslator.Object(\r\n//     {\r\n//         mainWrapperSelector: \".main-wrapper\", // CSS selector for the main wrapper element\r\n//         btnSelector: \".translator-container .translator-button\", // CSS selector for the translation button\r\n//         btnClass: \"Btn_custom_class\", // Custom class for button styling\r\n//         btnText: \"Translate To French\", // Text displayed on the translation button\r\n//         stringSelector: \".translator-body .translation-item\", // CSS selector for translation string elements\r\n//         progressBarSelector: \".translator-progress-bar\", // CSS selector for the progress bar\r\n//         sourceLanguage: \"es\", // Language code for the source language\r\n//         targetLanguage: \"fr\", // Language code for the target language\r\n//         onStartTranslationProcess: () => { console.log(\"Translation process started.\"); }, // Callback for translation start\r\n//         onBeforeTranslate: () => { console.log(\"Before translation.\"); }, // Callback before each translation\r\n//         onAfterTranslate: () => { console.log(\"After translation.\"); }, // Callback after each translation\r\n//         onComplete: () => { console.log(\"Translation completed.\"); }, // Callback for completion\r\n//         onLanguageError: () => { console.error(\"Language error occurred.\"); } // Callback for language errors\r\n//     }\r\n// );\r\n// chromeAiTranslatorObject.init();\r\n\r\nexport default ChromeAiTranslator;","import ModalStringScroll from \"../../stringModalScroll\";\r\n\r\nconst yandexWidget = (win, doc, nav, params, namespace, targetLang, translateStatus) => {\r\n    'use strict';\r\n\r\n    var util = {\r\n        keycode: {\r\n            ESCAPE: 27\r\n        },\r\n        getRequest: function () {\r\n            if (win.XDomainRequest) {\r\n                return new win.XDomainRequest();\r\n            }\r\n            if (win.XMLHttpRequest) {\r\n                return new win.XMLHttpRequest();\r\n            }\r\n            return null;\r\n        },\r\n        loadScript: function (src, parent, callback) {\r\n            var script = doc.createElement('script');\r\n            script.src = src;\r\n\r\n            script.addEventListener('load', function onLoad() {\r\n                this.removeEventListener('load', onLoad, false);\r\n                callback();\r\n            }, false);\r\n\r\n            parent.appendChild(script);\r\n        },\r\n        loadResource: function (url, callback) {\r\n            var request = this.getRequest();\r\n\r\n            if (!request) {\r\n                return null;\r\n            }\r\n\r\n            request.onload = function () {\r\n                callback(this.responseText);\r\n            };\r\n            request.open('GET', url, true);\r\n\r\n            win.setTimeout(function () {\r\n                request.send();\r\n            }, 0);\r\n\r\n            return request;\r\n        },\r\n        getStyleList: function (element) {\r\n            var value = element.getAttribute('class');\r\n            if (!value) {\r\n                return [];\r\n            }\r\n            return value.replace(/\\s+/g, ' ').trim().split(' ');\r\n        },\r\n        hasStyleName: function (element, name) {\r\n            var list = this.getStyleList(element);\r\n            return !!list.length && list.indexOf(name) >= 0;\r\n        },\r\n        addStyleName: function (element, name) {\r\n            var list = this.getStyleList(element);\r\n            list.push(name);\r\n            element.setAttribute('class', list.join(' '));\r\n        },\r\n        removeStyleName: function (element, name) {\r\n            var list = this.getStyleList(element),\r\n                index = list.indexOf(name);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n                element.setAttribute('class', list.join(' '));\r\n            }\r\n        },\r\n        isSupportedBrowser: function () {\r\n            return 'localStorage' in win &&\r\n                'querySelector' in doc &&\r\n                'addEventListener' in win &&\r\n                'getComputedStyle' in win && doc.compatMode === 'CSS1Compat';\r\n        }\r\n    };\r\n\r\n    // Button\r\n    var Button = function Button(element, contentElement) {\r\n        var self = this;\r\n\r\n        element.addEventListener('click', function (event) {\r\n            self.onClick(event);\r\n        }, false);\r\n\r\n        this._element = element;\r\n        this._contentElement = contentElement || this._element;\r\n    };\r\n\r\n    Button.prototype.onClick = function () { };\r\n\r\n    Button.prototype.setText = function (text) {\r\n        this._contentElement.textContent = text;\r\n        return this;\r\n    };\r\n\r\n    // Select\r\n    var Select = function Select(form, itemName) {\r\n        var self = this;\r\n\r\n        form.reset();\r\n\r\n        form.addEventListener('click', function (event) {\r\n            var target = event.target;\r\n            if ('value' in target) {\r\n                self.onSelect(target.value);\r\n            }\r\n        }, false);\r\n\r\n        form.addEventListener('change', function (event) {\r\n            alert(\"form change state\");\r\n            var target = event.target;\r\n            if (target.checked) {\r\n                self.onChange(target.value);\r\n            }\r\n        }, false);\r\n\r\n        this._form = form;\r\n        this._itemName = itemName;\r\n    };\r\n\r\n    Select.prototype.onSelect = function () { };\r\n\r\n    Select.prototype.onChange = function () { };\r\n\r\n    Select.prototype.isHidden = function () {\r\n        return this._form.hasAttribute('hidden');\r\n    };\r\n\r\n    Select.prototype.getItems = function () {\r\n        return this._form[this._itemName] || [];\r\n    };\r\n\r\n    Select.prototype.getValue = function () {\r\n        var i, n, items = this.getItems();\r\n        for (i = 0, n = items.length; i < n; i++) {\r\n            if (items[i].checked) {\r\n                return items[i].value;\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n\r\n    Select.prototype.setValue = function (value) {\r\n        var i, n, items = this.getItems();\r\n        if (value === this.getValue()) {\r\n            return this;\r\n        }\r\n        for (i = 0, n = items.length; i < n; i++) {\r\n            if (items[i].value === value) {\r\n                items[i].checked = true;\r\n                this.onChange(value);\r\n                break;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Select.prototype.setHidden = function (hidden) {\r\n        hidden = !!hidden;\r\n        if (hidden !== this.isHidden()) {\r\n            this._form[(hidden ? 'set' : 'remove') + 'Attribute']('hidden', '');\r\n            this.onHiddenChange(hidden);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Select.prototype.onHiddenChange = function () { };\r\n\r\n    // Widget\r\n    var Widget = function Widget(options) {\r\n        var self = this,\r\n            active,\r\n            select = options.select,\r\n            element = options.element,\r\n            storage = options.storage,\r\n            autoMode = options.autoMode,\r\n            pageLang = options.pageLang,\r\n            userLang = options.userLang,\r\n            translator = options.translator,\r\n            leftButton = options.leftButton,\r\n            rightButton = options.rightButton,\r\n            closeButton = options.closeButton,\r\n            defaultLang;\r\n\r\n        this._element = element;\r\n        this._pageLang = pageLang;\r\n        this._translator = translator;\r\n\r\n        this.onStateChange = function (name, enable) {\r\n            if (name === 'active') {\r\n                storage.setValue('active', enable);\r\n            }\r\n        };\r\n\r\n        select.onSelect = function (lang) {\r\n            this.setHidden(true);\r\n            self.translate(lang);\r\n            ModalStringScroll(translateStatus);\r\n        };\r\n\r\n        select.onChange = function (lang) {\r\n            storage.setValue('lang', lang);\r\n            rightButton.setText(lang);\r\n            self.setState('invalid', lang === pageLang);\r\n        };\r\n\r\n        select.onHiddenChange = function (hidden) {\r\n            var docElem = doc.documentElement,\r\n                formRect;\r\n            self.setState('expanded', !hidden);\r\n            if (!hidden) {\r\n                self.setState('right', false)\r\n                    .setState('bottom', false);\r\n                element.focus();\r\n                formRect = this._form.getBoundingClientRect();\r\n\r\n                if (formRect.right + (win.pageXOffset || docElem.scrollLeft) + 1 >= Math.max(docElem.clientWidth, docElem.scrollWidth)) {\r\n                    self.setState('right', true);\r\n                }\r\n\r\n                if (formRect.bottom + (win.pageYOffset || docElem.scrollTop) + 1 >= Math.max(docElem.clientHeight, docElem.scrollHeight)) {\r\n                    self.setState('bottom', true);\r\n                }\r\n            }\r\n        };\r\n\r\n        element.addEventListener('blur', function () {\r\n            select.setHidden(true);\r\n        }, false);\r\n\r\n        element.addEventListener('keydown', function (event) {\r\n            switch (event.keyCode) {\r\n                case util.keycode.ESCAPE:\r\n                    select.setHidden(true);\r\n                    break;\r\n            }\r\n        }, false);\r\n\r\n        translator.on('error', function () {\r\n            this.abort();\r\n            self.setState('busy', false)\r\n                .setState('error', true);\r\n        });\r\n\r\n        translator.on('progress', function (progress) {\r\n            switch (progress) {\r\n                case 0:\r\n                    self.setState('busy', true)\r\n                        .setState('active', true);\r\n                    break;\r\n\r\n                case 100:\r\n                    self.setState('done', true)\r\n                        .setState('busy', false);\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n        leftButton.onClick = function () {\r\n            select.setHidden(true);\r\n            self.translate(select.getValue());\r\n            ModalStringScroll(translateStatus);\r\n        };\r\n\r\n        rightButton.onClick = function () {\r\n            if (self.hasState('active')) {\r\n                translator.undo();\r\n                self.setState('busy', false)\r\n                    .setState('done', false)\r\n                    .setState('error', false)\r\n                    .setState('active', false);\r\n            } else {\r\n                select.setHidden(!select.isHidden());\r\n            }\r\n        };\r\n\r\n        closeButton.onClick = function () {\r\n            select.setHidden(true);\r\n        };\r\n\r\n        if (targetLang != undefined) {\r\n            var defaultcode = targetLang;\r\n        }\r\n        switch (defaultcode) {\r\n            case 'nb':\r\n                defaultLang = 'no';\r\n                break;\r\n\r\n            case 'nn':\r\n                defaultLang = 'no';\r\n                break;\r\n            default:\r\n                defaultLang = defaultcode;\r\n                break;\r\n        }\r\n        if (defaultLang) {\r\n            select.setValue(defaultLang);\r\n            active = storage.getValue('active');\r\n        }\r\n    };\r\n    Widget.prototype.hasState = function (name) {\r\n        return util.hasStyleName(this._element, 'yt-state_' + name);\r\n    };\r\n\r\n    Widget.prototype.setState = function (name, enable) {\r\n        var hasState = this.hasState(name);\r\n        enable = !!enable;\r\n        if (enable === hasState) {\r\n            return this;\r\n        }\r\n        util[(enable ? 'add' : 'remove') + 'StyleName'](\r\n            this._element, 'yt-state_' + name\r\n        );\r\n        this.onStateChange(name, enable);\r\n        return this;\r\n    };\r\n\r\n    Widget.prototype.translate = function (targetLang) {\r\n        if (targetLang && !this.hasState('active')) {\r\n            this._translator.translate(this._pageLang, targetLang);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Widget.prototype.onStateChange = function () { };\r\n\r\n    // Storage\r\n    var Storage = function Storage(name) {\r\n        this._name = name;\r\n        try {\r\n            this._data = win.JSON.parse(win.localStorage[name]);\r\n        } catch (error) {\r\n            this._data = {};\r\n        }\r\n    };\r\n\r\n    Storage.prototype.getValue = function (prop) {\r\n        return this._data[prop];\r\n    };\r\n\r\n    Storage.prototype.setValue = function (prop, value) {\r\n        this._data[prop] = value;\r\n        try {\r\n            win.localStorage[this._name] = win.JSON.stringify(this._data);\r\n        } catch (error) { }\r\n    };\r\n\r\n    var wrapper = doc.getElementById(params.widgetId);\r\n\r\n    if (!wrapper || !util.isSupportedBrowser()) {\r\n        return;\r\n    }\r\n    var initWidget = function () {\r\n        util.loadScript('https://yastatic.net/s3/translate/v21.4.7/js/tr_page.js', wrapper, function () {\r\n            util.loadResource('https://translate.yandex.net/website-widget/v1/widget.html',\r\n                function (responseText) {\r\n                    var element;\r\n                    if (!responseText) {\r\n                        return;\r\n                    }\r\n                    wrapper.innerHTML = responseText;\r\n                    element = wrapper.querySelector('.yt-widget');\r\n                    if (params.widgetTheme) {\r\n                        element.setAttribute('data-theme', params.widgetTheme);\r\n                    }\r\n                    new Widget({\r\n                        select: new Select(element.querySelector('.yt-listbox'), 'yt-lang'),\r\n                        element: element,\r\n                        storage: new Storage('yt-widget'),\r\n                        autoMode: params.autoMode === 'true',\r\n                        pageLang: params.pageLang,\r\n                        userLang: (nav.language || nav.userLanguage || '').split('-')[0],\r\n                        translator: new namespace.PageTranslator({\r\n                            srv: 'tr-url-widget',\r\n                            url: 'https://translate.yandex.net/api/v1/tr.json/translate',\r\n                            autoSync: true,\r\n                            maxPortionLength: 600\r\n                        }),\r\n                        leftButton: new Button(element.querySelector('.yt-button_type_left')),\r\n                        rightButton: new Button(\r\n                            element.querySelector('.yt-button_type_right'),\r\n                            element.querySelector('.yt-button_type_right > .yt-button__text')\r\n                        ),\r\n                        closeButton: new Button(element.querySelector('.yt-button_type_close'))\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n    if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\r\n        initWidget();\r\n    } else {\r\n        doc.addEventListener('DOMContentLoaded', initWidget, false);\r\n    }\r\n};\r\n\r\nconst YandexTranslater = (props) => {\r\n    const globalObj = window;\r\n    yandexWidget(globalObj, globalObj.document, globalObj.navigator, { \"pageLang\": props.sourceLang, \"autoMode\": \"false\", \"widgetId\": \"atfp_yandex_translate_element\", \"widgetTheme\": \"light\" }, globalObj.yt = globalObj.yt || {}, props.targetLang, props.translateStatus);\r\n}\r\n\r\nexport default YandexTranslater;","export default ()=>{\r\n    const languages = [\r\n        'af', 'am', 'ar', 'az', 'ba', 'be', 'bg', 'bn', 'bs', 'ca', 'ceb', 'cs', \r\n        'cv', 'cy', 'da', 'de', 'el', 'emj', 'en', 'eo', 'es', 'et', 'eu', 'fa', \r\n        'fi', 'fr', 'ga', 'gd', 'gl', 'gu', 'he', 'hi', 'hr', 'ht', 'hu', 'hy', \r\n        'id', 'is', 'it', 'ja', 'jv', 'ka', 'kazlat', 'kk', 'km', 'kn', 'ko', \r\n        'ky', 'la', 'lb', 'lo', 'lt', 'lv', 'mg', 'mhr', 'mi', 'mk', 'ml', 'mn', \r\n        'mr', 'mrj', 'ms', 'mt', 'my', 'ne', 'nl', 'no', 'pa', 'pap', 'pl', 'pt', \r\n        'pt-BR', 'ro', 'ru', 'sah', 'si', 'sk', 'sl', 'sq', 'sr', 'sr-Latn', 'su', \r\n        'sv', 'sw', 'ta', 'te', 'tg', 'th', 'tl', 'tr', 'tt', 'udm', 'uk', 'ur', \r\n        'uz', 'uzbcyr', 'vi', 'xh', 'yi', 'zh', 'zu'\r\n    ];\r\n\r\n    return languages;\r\n}","import { dispatch } from '@wordpress/data';\r\n\r\nconst RankMathSeo = (props) => {\r\n    if (!dispatch(\"rank-math\")) {\r\n        return;\r\n    }\r\n    const { updateKeywords,\r\n        updateTitle,\r\n        updateDescription,\r\n        updateBreadcrumbTitle,\r\n        updateFacebookTitle,\r\n        updateFacebookDescription,\r\n        updateTwitterTitle,\r\n        updateTwitterDescription\r\n    } = dispatch(\"rank-math\");\r\n\r\n    const { key, value } = props;\r\n\r\n    switch (key) {\r\n        case 'rank_math_focus_keyword':\r\n            if (updateKeywords) {\r\n                updateKeywords(value);\r\n            }\r\n            break;\r\n        case 'rank_math_title':\r\n            if (updateTitle) {\r\n                updateTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_description':\r\n            if (updateDescription) {\r\n                updateDescription(value);\r\n            }\r\n            break;\r\n        case 'rank_math_breadcrumb_title':\r\n            if (updateBreadcrumbTitle) {\r\n                updateBreadcrumbTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_facebook_title':\r\n            if (updateFacebookTitle) {\r\n                updateFacebookTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_facebook_description':\r\n            if (updateFacebookDescription) {\r\n                updateFacebookDescription(value);\r\n            }\r\n            break;\r\n        case 'rank_math_twitter_title':\r\n            if (updateTwitterTitle) {\r\n                updateTwitterTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_twitter_description':\r\n            if (updateTwitterDescription) {\r\n                updateTwitterDescription(value);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nexport default RankMathSeo;","import { dispatch } from \"@wordpress/data\";\r\n\r\nconst YoastSeoFields = (props) => {\r\n    if (!dispatch(\"yoast-seo/editor\")) {\r\n        return;\r\n    }\r\n    const {\r\n        updateData,\r\n        setFocusKeyword,\r\n        setBreadcrumbsTitle,\r\n        setFacebookPreviewTitle,\r\n        setFacebookPreviewDescription,\r\n        setTwitterPreviewTitle,\r\n        setTwitterPreviewDescription,\r\n    } = dispatch(\"yoast-seo/editor\");\r\n    \r\n    const { key, value } = props;\r\n\r\n    switch (key) {\r\n        case \"_yoast_wpseo_focuskw\":\r\n            if (setFocusKeyword) {\r\n                setFocusKeyword(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_title\":\r\n            if (updateData) {\r\n                updateData({ title: value });\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_metadesc\":\r\n            if (updateData) {\r\n                updateData({ description: value });\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_bctitle\":\r\n            if (setBreadcrumbsTitle) {\r\n                setBreadcrumbsTitle(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_opengraph-title\":\r\n            if (setFacebookPreviewTitle) {\r\n                setFacebookPreviewTitle(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_opengraph-description\":\r\n            if (setFacebookPreviewDescription) {\r\n                setFacebookPreviewDescription(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_twitter-title\":\r\n            if (setTwitterPreviewTitle) {\r\n                setTwitterPreviewTitle(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_twitter-description\":\r\n            if (setTwitterPreviewDescription) {\r\n                setTwitterPreviewDescription(value);\r\n            }\r\n            break;\r\n    }\r\n};\r\n\r\nexport default YoastSeoFields;\r\n","import FilterBlockNestedAttr from \"../FilterNestedAttr\";\r\nconst { createBlock } = wp.blocks;\r\nconst { dispatch, select } = wp.data;\r\n\r\n/**\r\n * Filters and translates attributes of a block based on provided rules.\r\n * \r\n * @param {Object} block - The block to filter and translate attributes for.\r\n * @param {Object} blockParseRules - The rules for parsing the block.\r\n * @returns {Object} The updated block with translated attributes.\r\n */\r\nconst filterTranslateAttr = (block, blockParseRules) => {\r\n    const filterAttrArr = Object.values(blockParseRules);\r\n    const blockAttr = block.attributes;\r\n    const blockId = block.clientId;\r\n\r\n    // Function to update a nested attribute in the block\r\n    const updateNestedAttribute = (obj, path, value) => {\r\n\r\n        const newObj = { ...obj };\r\n        let current = newObj;\r\n        for (let i = 0; i < path.length - 1; i++) {\r\n            if (Object.getPrototypeOf(current[path[i]]) === Array.prototype) {\r\n                current[path[i]] = [...current[path[i]]];\r\n            } else {\r\n                current[path[i]] = { ...current[path[i]] }; // Create a shallow copy\r\n            }\r\n            current = current[path[i]];\r\n        }\r\n\r\n        if ( current[path[path.length - 1]] instanceof wp.richText.RichTextData ) {\r\n            current[path[path.length - 1]] = value.replace(/(?<!\\\\)\"|\\\\\"/g, \"'\");\r\n        } else {\r\n            current[path[path.length - 1]] = value;\r\n        }\r\n\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Updates translated attributes based on provided ID array and filter attribute object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs to update attributes for.\r\n     * @param {Object|Array} filterAttrObj - The filter attribute object to apply.\r\n     */\r\n    const updateTranslatedAttr = (idArr, filterAttrObj) => {\r\n\r\n        if (true === filterAttrObj) {\r\n\r\n            const newIdArr = new Array(...idArr);\r\n            const childIdArr = new Array();\r\n\r\n            let dynamicBlockAttr = blockAttr;\r\n            let uniqueId = blockId;\r\n\r\n            newIdArr.forEach(key => {\r\n                childIdArr.push(key);\r\n                uniqueId += `atfp${key}`;\r\n                dynamicBlockAttr = dynamicBlockAttr[key];\r\n            });\r\n\r\n            let blockAttrContent = dynamicBlockAttr;\r\n\r\n            if(blockAttrContent instanceof wp.richText.RichTextData) {\r\n                blockAttrContent=blockAttrContent.originalHTML;\r\n            }\r\n\r\n            if (undefined !== blockAttrContent && blockAttrContent.trim() !== '') {\r\n                let filterKey = uniqueId.replace(/[^\\p{L}\\p{N}]/gu, '');\r\n                let translateContent = '';\r\n\r\n                if (!/[\\p{L}\\p{N}]/gu.test(blockAttrContent)) {\r\n                    translateContent = blockAttrContent;\r\n                } else {\r\n                    translateContent = select('block-atfp/translate').getTranslatedString('content', blockAttrContent, filterKey);\r\n                }\r\n\r\n                block.attributes = updateNestedAttribute(block.attributes, newIdArr, translateContent);\r\n            }\r\n            \r\n            return;\r\n        }\r\n\r\n        FilterBlockNestedAttr(idArr,filterAttrObj,blockAttr,updateTranslatedAttr);\r\n    }\r\n\r\n    filterAttrArr.forEach(data => {\r\n        Object.keys(data).forEach(key => {\r\n            const idArr = new Array(key);\r\n            updateTranslatedAttr(idArr, data[key]);\r\n        });\r\n    });\r\n\r\n    return block;\r\n}\r\n\r\n/**\r\n * Creates a translated block based on the provided block, child block, translate handler, and block rules.\r\n * If the block name is included in the block rules, it filters and translates the attributes accordingly.\r\n * \r\n * @param {Object} block - The block to create a translated version of.\r\n * @param {Array} childBlock - The child blocks associated with the main block.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n * @returns {Object} The newly created translated block.\r\n */\r\nconst createTranslatedBlock = (block, childBlock, blockRules) => {\r\n    const { name: blockName, attributes } = block;\r\n    const blockTranslateName = Object.keys(blockRules.AtfpBlockParseRules);\r\n\r\n    let attribute = { ...attributes };\r\n    let translatedBlock = block;\r\n    let newBlock = '';\r\n\r\n    if (blockTranslateName.includes(block.name)) {\r\n        translatedBlock = filterTranslateAttr(block, blockRules['AtfpBlockParseRules'][block.name]);\r\n        attribute = translatedBlock.attributes;\r\n    }\r\n\r\n    newBlock = createBlock(blockName, attribute, childBlock);\r\n\r\n    return newBlock;\r\n}\r\n\r\n/**\r\n * Creates a child block recursively by translating each inner block based on the provided block, translate handler, and block rules.\r\n * \r\n * @param {Object} block - The block to create a child block for.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n * @returns {Object} The newly created translated child block.\r\n */\r\nconst cretaeChildBlock = (block, blockRules) => {\r\n    let childBlock = block.innerBlocks.map(block => {\r\n        if (block.name) {\r\n            const childBlock = cretaeChildBlock(block, blockRules);\r\n            return childBlock;\r\n        }\r\n    });\r\n\r\n    const newBlock = createTranslatedBlock(block, childBlock, blockRules)\r\n\r\n    return newBlock;\r\n}\r\n\r\n/**\r\n * Creates the main blocks based on the provided block, translate handler, and block rules.\r\n * If the block name exists, it creates the main block along with its child blocks and inserts it into the block editor.\r\n * \r\n * @param {Object} block - The main block to create.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n */\r\nconst createBlocks = (block, blockRules) => {\r\n    const { name: blockName } = block;\r\n    // Create the main block\r\n    if (blockName) {\r\n        let childBlock = block.innerBlocks.map(block => {\r\n            if (block.name) {\r\n                return cretaeChildBlock(block, blockRules);\r\n            }\r\n        })\r\n        const parentBlock = createTranslatedBlock(block, childBlock, blockRules);\r\n\r\n        dispatch('core/block-editor').insertBlock(parentBlock);\r\n\r\n    }\r\n}\r\n\r\nexport default createBlocks;\r\n","import createBlocks from './createBlock';\r\nimport { dispatch, select } from '@wordpress/data';\r\nimport YoastSeoFields from './SeoMetaFields/YoastSeoFields';\r\nimport AllowedMetaFields from '../../AllowedMetafileds';\r\nimport RankMathSeo from './SeoMetaFields/RankMathSeo';\r\n\r\n/**\r\n * Translates the post content and updates the post title, excerpt, and content.\r\n * \r\n * @param {Object} props - The properties containing post content, translation function, and block rules.\r\n */\r\nconst translatePost = (props) => {\r\n    const { editPost } = dispatch('core/editor');\r\n    const { modalClose, postContent } = props;\r\n\r\n    /**\r\n     * Updates the post title and excerpt text based on translation.\r\n     */\r\n    const postDataUpdate = () => {\r\n        const data = {};\r\n        const editPostData = Object.keys(postContent).filter(key => ['title', 'excerpt'].includes(key));\r\n\r\n        editPostData.forEach(key => {\r\n            const sourceData = postContent[key];\r\n            if (sourceData.trim() !== '') {\r\n                const translateContent = select('block-atfp/translate').getTranslatedString(key, sourceData);\r\n                data[key] = translateContent;\r\n            }\r\n        });\r\n\r\n        editPost(data);\r\n    }\r\n\r\n    /**\r\n     * Updates the post meta fields based on translation.\r\n     */\r\n    const postMetaFieldsUpdate = () => {\r\n        const metaFieldsData = postContent.metaFields;\r\n        Object.keys(metaFieldsData).forEach(key => {\r\n            // Update yoast seo meta fields\r\n            if(Object.keys(AllowedMetaFields).includes(key) && AllowedMetaFields[key].type === 'string') {\r\n                const translatedMetaFields = select('block-atfp/translate').getTranslatedString('metaFields', metaFieldsData[key][0], key);\r\n                if(key.startsWith('_yoast_wpseo_')) {\r\n                    YoastSeoFields({ key: key, value: translatedMetaFields });\r\n                } else if(key.startsWith('rank_math_')) {\r\n                    RankMathSeo({ key: key, value: translatedMetaFields });\r\n                }else{\r\n                    editPost({ meta: { [key]: translatedMetaFields } });\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates the post content based on translation.\r\n     */\r\n    const postContentUpdate = () => {\r\n        const postContentData = postContent.content;\r\n\r\n        if (postContentData.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        Object.values(postContentData).forEach(block => {\r\n            createBlocks(block, props.blockRules);\r\n        });\r\n    }\r\n\r\n    // Update post title and excerpt text\r\n    postDataUpdate();\r\n    // Update post meta fields\r\n    postMetaFieldsUpdate();\r\n    // Update post content\r\n    postContentUpdate();\r\n    // Close string modal box\r\n    modalClose();\r\n}\r\n\r\nexport default translatePost;","import FilterBlockNestedAttr from \"../FilterNestedAttr\";\r\nimport AllowedMetaFields from \"../../AllowedMetafileds\";\r\nconst { dispatch } = wp.data;\r\n\r\n/**\r\n * Filters and translates attributes of a block.\r\n * \r\n * @param {string} blockId - The ID of the block.\r\n * @param {Object} blockAttr - The attributes of the block.\r\n * @param {Object} filterAttr - The attributes to filter.\r\n */\r\nconst filterTranslateAttr = (blockId, blockAttr, filterAttr) => {\r\n\r\n    const filterAttrArr = Object.values(filterAttr);\r\n\r\n    /**\r\n     * Saves translated attributes based on the provided ID array and filter attribute object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Object} filterAttrObj - The filter attribute object.\r\n     */\r\n    const saveTranslatedAttr = (idArr, filterAttrObj) => {\r\n\r\n        if (true === filterAttrObj) {\r\n            const newIdArr = new Array(...idArr);\r\n            const childIdArr = new Array();\r\n\r\n            let dynamicBlockAttr = blockAttr;\r\n            let uniqueId = blockId;\r\n\r\n            newIdArr.forEach(key => {\r\n                childIdArr.push(key);\r\n                uniqueId += `atfp${key}`;\r\n                dynamicBlockAttr = dynamicBlockAttr[key];\r\n            });\r\n\r\n            let blockAttrContent = dynamicBlockAttr;\r\n\r\n            if(blockAttrContent instanceof wp.richText.RichTextData) {\r\n                blockAttrContent=blockAttrContent.originalHTML;\r\n            }\r\n          \r\n            if (undefined !== blockAttrContent && blockAttrContent.trim() !== '') {\r\n                \r\n                let filterKey = uniqueId.replace(/[^\\p{L}\\p{N}]/gu, '');\r\n\r\n                if (!/[\\p{L}\\p{N}]/gu.test(blockAttrContent)) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                dispatch('block-atfp/translate').contentSaveSource(filterKey, blockAttrContent);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        FilterBlockNestedAttr(idArr,filterAttrObj,blockAttr,saveTranslatedAttr);\r\n    }\r\n\r\n    filterAttrArr.forEach(data => {\r\n        Object.keys(data).forEach(key => {\r\n            const idArr = new Array(key);\r\n            saveTranslatedAttr(idArr, data[key]);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Retrieves the translation string for a block based on block rules and applies translation.\r\n * \r\n * @param {Object} block - The block to translate.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst getTranslateString = (block, blockRules) => {\r\n    const blockTranslateName = Object.keys(blockRules.AtfpBlockParseRules);\r\n\r\n    if (!blockTranslateName.includes(block.name)) {\r\n        return;\r\n    }\r\n\r\n    filterTranslateAttr(block.clientId, block.attributes, blockRules['AtfpBlockParseRules'][block.name]);\r\n}\r\n\r\n/**\r\n * Recursively processes child block attributes for translation.\r\n * \r\n * @param {Array} blocks - The array of blocks to translate.\r\n * @param {Object} blockRules - The rules for translating the blocks.\r\n */\r\nconst childBlockAttributesContent = (blocks, blockRules) => {\r\n    blocks.forEach(block => {\r\n        getTranslateString(block, blockRules);\r\n        if (block.innerBlocks) {\r\n            childBlockAttributesContent(block.innerBlocks, blockRules);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Processes the attributes of a block for translation.\r\n * \r\n * @param {Object} parseBlock - The block to parse for translation.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst blockAttributeContent = (parseBlock, blockRules) => {\r\n    Object.values(parseBlock).forEach(block => {\r\n        getTranslateString(block, blockRules);\r\n        if (block.innerBlocks) {\r\n            childBlockAttributesContent(block.innerBlocks, blockRules);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Saves the translation for a block based on its attributes.\r\n * \r\n * @param {Object} block - The block to save translation for.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst saveTranslation = (block, blockRules) => {\r\n    Object.keys(block).forEach(key => {\r\n        if (key === 'content') {\r\n            blockAttributeContent(block[key], blockRules);\r\n        }else if(key === 'metaFields'){\r\n            Object.keys(block[key]).forEach(metaKey => {\r\n                // Store yoast seo meta fields\r\n                if(Object.keys(AllowedMetaFields).includes(metaKey) && AllowedMetaFields[metaKey].type === 'string'){\r\n                    if('' !== block[key][metaKey][0] && undefined !== block[key][metaKey][0]){\r\n                        dispatch('block-atfp/translate').metaFieldsSaveSource(metaKey, block[key][metaKey][0]);\r\n                    }\r\n                }\r\n            });\r\n        } else if(['title', 'excerpt'].includes(key)){\r\n            const action = `${key}SaveSource`;\r\n            dispatch('block-atfp/translate')[action](block[key]);\r\n        }\r\n    });\r\n}\r\n\r\nexport default saveTranslation;","const { dispatch } = wp.data;\r\nimport AllowedMetaFields from \"../../AllowedMetafileds\";\r\n\r\n/**\r\n * Saves the translation data by updating the translation content based on the provided translate object and data.\r\n * @param {Object} translateData - The data containing translation information.\r\n */\r\nconst SaveTranslation = ({type, key, translateContent, source}) => {\r\n    if (['title', 'excerpt'].includes(type)) {\r\n        const action = `${type}SaveTranslate`;\r\n        dispatch('block-atfp/translate')[action](translateContent);\r\n    } else if (['metaFields'].includes(type)) {\r\n        if(Object.keys(AllowedMetaFields).includes(key)){\r\n            dispatch('block-atfp/translate').metaFieldsSaveTranslate(key, translateContent, source);\r\n        }\r\n    } else {\r\n        dispatch('block-atfp/translate').contentSaveTranslate(key, translateContent, source);\r\n    }\r\n}\r\n\r\nexport default SaveTranslation;","import SaveTranslation from \"../storeTranslatedString\";\r\n\r\n/**\r\n * Handles the scrolling animation of a specified element.\r\n * \r\n * @param {Object} props - The properties for the scroll animation.\r\n * @param {HTMLElement} props.element - The element to be scrolled.\r\n * @param {number} props.scrollSpeed - The duration of the scroll animation in milliseconds.\r\n */\r\nconst ScrollAnimation = (props) => {\r\n    const { element, scrollSpeed } = props;\r\n    const scrollHeight = element.scrollHeight - element.offsetHeight + 100;\r\n\r\n    let startTime = null;\r\n    let startScrollTop = element.scrollTop;\r\n    const animateScroll = () => {\r\n        const currentTime = performance.now();\r\n        const duration = scrollSpeed;\r\n        const scrollTarget = scrollHeight + 2000;\r\n        \r\n        if (!startTime) {\r\n            startTime = currentTime;\r\n        }\r\n\r\n        const progress = (currentTime - startTime) / duration;\r\n        const scrollPosition = startScrollTop + (scrollTarget - startScrollTop) * progress;\r\n\r\n        if(scrollPosition > scrollHeight){\r\n            return; // Stop animate scroll\r\n        }\r\n\r\n        element.scrollTop = scrollPosition;\r\n\r\n        if (scrollPosition < scrollHeight) {\r\n            setTimeout(animateScroll, 16);\r\n        }\r\n    }\r\n    animateScroll();\r\n};\r\n\r\n/**\r\n * Updates the translated content in the string container based on the provided translation object.\r\n */\r\nconst updateTranslatedContent = () => {\r\n    const container = document.getElementById(\"atfp_strings_model\");\r\n    const stringContainer = container.querySelector('.atfp_string_container');\r\n    const translatedData = stringContainer.querySelectorAll('td.translate[data-string-type]');\r\n\r\n    translatedData.forEach(ele => {\r\n        const translatedText = ele.innerText;\r\n        const key = ele.dataset.key;\r\n        const type = ele.dataset.stringType;\r\n        const sourceText = ele.closest('tr').querySelector('td[data-source=\"source_text\"]').innerText;\r\n\r\n        SaveTranslation({ type: type, key: key, translateContent: translatedText, source: sourceText });\r\n    });\r\n}\r\n\r\n/**\r\n * Handles the completion of the translation process by enabling the save button,\r\n * updating the UI, and stopping the translation progress.\r\n * \r\n * @param {HTMLElement} container - The container element for translation.\r\n */\r\nconst onCompleteTranslation = (container) => {\r\n    container.querySelector(\".atfp_translate_progress\").style.display = \"none\";\r\n    container.querySelector(\".atfp_string_container\").style.animation = \"none\";\r\n    document.body.style.top = '0';\r\n\r\n    const saveButton = container.querySelector('button.save_it');\r\n    saveButton.removeAttribute('disabled');\r\n    saveButton.classList.add('translated');\r\n    saveButton.classList.remove('notranslate');\r\n\r\n    updateTranslatedContent();\r\n}\r\n\r\n/**\r\n * Automatically scrolls the string container and triggers the completion callback\r\n * when the bottom is reached or certain conditions are met.\r\n * \r\n * @param {Function} translateStatus - Callback function to execute when translation is deemed complete.\r\n */\r\nconst ModalStringScroll = (translateStatus) => {\r\n\r\n    let translateComplete = false;\r\n\r\n    const container = document.getElementById(\"atfp_strings_model\");\r\n    const stringContainer = container.querySelector('.atfp_string_container');\r\n\r\n    stringContainer.scrollTop = 0;\r\n    const scrollHeight = stringContainer.scrollHeight;\r\n\r\n    if (scrollHeight !== undefined && scrollHeight > 100) {\r\n        container.querySelector(\".atfp_translate_progress\").style.display = \"block\";\r\n\r\n        setTimeout(() => {\r\n            const scrollSpeed = Math.ceil((scrollHeight / stringContainer?.offsetHeight)) * 2000;\r\n\r\n            ScrollAnimation({ element: stringContainer, scrollSpeed: scrollSpeed });\r\n        }, 2000);\r\n\r\n        stringContainer.addEventListener('scroll', () => {\r\n            var isScrolledToBottom = (stringContainer.scrollTop + stringContainer.clientHeight + 50 >= stringContainer.scrollHeight);\r\n\r\n            if (isScrolledToBottom && !translateComplete) {\r\n                translateStatus();\r\n                onCompleteTranslation(container);\r\n                translateComplete = true;\r\n            }\r\n        });\r\n\r\n        if (stringContainer.clientHeight + 10 >= scrollHeight) {\r\n            setTimeout(() => {\r\n                translateStatus();\r\n                onCompleteTranslation(container);\r\n            }, 1500);\r\n        }\r\n    } else {\r\n        setTimeout(() => {\r\n            translateStatus();\r\n            onCompleteTranslation(container);\r\n        }, 2000);\r\n    }\r\n}\r\n\r\nexport default ModalStringScroll;","import AtfpActionTypes from \"./types\"; // Importing action types from the types module\r\n\r\n/**\r\n * Action creator for saving the source title.\r\n * @param {string} data - The source title to be saved.\r\n * @returns {Object} The action object containing the type and text.\r\n */\r\nexport const titleSaveSource = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceTitle, // Action type for saving the source title\r\n        text: data, // The source title text\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated title.\r\n * @param {string} data - The translated title to be saved.\r\n * @returns {Object} The action object containing the type and text.\r\n */\r\nexport const titleSaveTranslate = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedTitle, // Action type for saving the translated title\r\n        text: data, // The translated title text\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the source excerpt.\r\n * @param {string} data - The source excerpt to be saved.\r\n * @returns {Object} The action object containing the type and text.\r\n */\r\nexport const excerptSaveSource = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceExcerpt, // Action type for saving the source excerpt\r\n        text: data, // The source excerpt text\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated excerpt.\r\n * @param {string} data - The translated excerpt to be saved.\r\n * @returns {Object} The action object containing the type and text.\r\n */\r\nexport const excerptSaveTranslate = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedExcerpt, // Action type for saving the translated excerpt\r\n        text: data, // The translated excerpt text\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the source content.\r\n * @param {string} id - The identifier for the content.\r\n * @param {string} data - The source content to be saved.\r\n * @returns {Object} The action object containing the type, text, and id.\r\n */\r\nexport const contentSaveSource = (id, data) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceContent, // Action type for saving the source content\r\n        text: data, // The source content text\r\n        id: id // The identifier for the content\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated content.\r\n * @param {string} id - The identifier for the content.\r\n * @param {string} data - The translated content to be saved.\r\n * @param {string} source - The source of the translated content.\r\n * @returns {Object} The action object containing the type, text, id, and source.\r\n */\r\nexport const contentSaveTranslate = (id, data, source) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedContent, // Action type for saving the translated content\r\n        text: data, // The translated content text\r\n        id: id, // The identifier for the content\r\n        source: source // The source of the translated content\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the source meta fields.\r\n * @param {string} id - The identifier for the meta fields.\r\n * @param {Object} data - The source meta fields to be saved.\r\n * @returns {Object} The action object containing the type, text, and id.\r\n */\r\nexport const metaFieldsSaveSource = (id, data) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceMetaFields, // Action type for saving the source meta fields\r\n        text: data, // The source meta fields text\r\n        id: id, // The identifier for the meta fields\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated meta fields.\r\n * @param {string} id - The identifier for the meta fields.\r\n * @param {Object} data - The translated meta fields to be saved.\r\n * @param {string} source - The source of the translated meta fields.\r\n * @returns {Object} The action object containing the type, text, id, and source.\r\n */\r\nexport const metaFieldsSaveTranslate = (id, data, source) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedMetaFields, // Action type for saving the translated meta fields\r\n        text: data, // The translated meta fields text\r\n        id: id, // The identifier for the meta fields\r\n        source: source // The source of the translated meta fields\r\n    }\r\n};\r\n","/**\r\n * This module sets up a Redux store for the automatic translation block.\r\n * It imports the necessary reducer, actions, and selectors, and then\r\n * creates and registers the Redux store with the WordPress data system.\r\n */\r\n\r\n// Import the reducer function from the reducer module, which handles state changes.\r\nimport reducer from \"./reducer\";\r\n\r\n// Import all action creators from the actions module, which define how to interact with the store.\r\nimport * as actions from './actions';\r\n\r\n// Import all selector functions from the selectors module, which allow us to retrieve specific pieces of state.\r\nimport * as selectors from './selectors';\r\n\r\n// Destructure the createReduxStore and register functions from the wp.data object provided by WordPress.\r\nconst { createReduxStore, register } = wp.data;\r\n\r\n// Create a Redux store named 'block-atfp/translate' with the specified reducer, actions, and selectors.\r\nconst store = createReduxStore('block-atfp/translate', {\r\n    reducer,   // The reducer function to manage state updates.\r\n    actions,   // The action creators for dispatching actions to the store.\r\n    selectors   // The selectors for accessing specific state values.\r\n});\r\n\r\n// Register the created store with the WordPress data system, making it available for use in the application.\r\nregister(store);","import AtfpActionTypes from \"./types\"; // Importing action types from the types module\r\n\r\n/**\r\n * The default state for the translation reducer.\r\n * This state holds the initial values for title, excerpt, content, and metaFields.\r\n * \r\n * @type {Object}\r\n * @property {Object} title - Contains source and target translations for the title.\r\n * @property {Object} excerpt - Contains source and target translations for the excerpt.\r\n * @property {Array} content - An array holding content translations.\r\n * @property {Object} metaFields - Contains source and target translations for meta fields.\r\n */\r\nconst TranslateDefaultState = {\r\n    title: {}, // Initial state for title translations\r\n    excerpt: {}, // Initial state for excerpt translations\r\n    content: [], // Initial state for content translations\r\n    metaFields: {} // Initial state for meta field translations\r\n};\r\n\r\n/**\r\n * The reducer function for handling translation actions.\r\n * This function updates the state based on the action type received.\r\n * \r\n * @param {Object} state - The current state of the reducer.\r\n * @param {Object} action - The action dispatched to the reducer.\r\n * @returns {Object} The new state after applying the action.\r\n */\r\nconst reducer = (state = TranslateDefaultState, action) => {\r\n    switch (action.type) {\r\n        case AtfpActionTypes.sourceTitle: // Action to save the source title\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source title\r\n                return { ...state, title: { ...state.title, source: action.text } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case AtfpActionTypes.traslatedTitle: // Action to save the translated title\r\n            // Update the state with the new target title\r\n            return { ...state, title: { ...state.title, target: action.text } };\r\n\r\n        case AtfpActionTypes.sourceExcerpt: // Action to save the source excerpt\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source excerpt\r\n                return { ...state, excerpt: { ...state.excerpt, source: action.text } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case AtfpActionTypes.traslatedExcerpt: // Action to save the translated excerpt\r\n            // Update the state with the new target excerpt\r\n            return { ...state, excerpt: { ...state.excerpt, target: action.text } };\r\n\r\n        case AtfpActionTypes.sourceContent: // Action to save the source content\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source content for the specific ID\r\n                return { ...state, content: { ...state.content, [action.id]: { ...(state.content[action.id] || []), source: action.text } } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case AtfpActionTypes.traslatedContent: // Action to save the translated content\r\n            // Check if the source of the content matches the action source\r\n            if (state.content[action.id].source === action.source) {\r\n                // Update the state with the new target content for the specific ID\r\n                return { ...state, content: { ...state.content, [action.id]: { ...(state.content[action.id] || []), target: action.text } } };\r\n            }\r\n            return state; // Return the current state if no match\r\n\r\n        case AtfpActionTypes.sourceMetaFields: // Action to save the source meta fields\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source meta field for the specific ID\r\n                return { ...state, metaFields: { ...state.metaFields, [action.id]: { ...(state.metaFields[action.id] || []), source: action.text } } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case AtfpActionTypes.traslatedMetaFields: // Action to save the translated meta fields\r\n            // Update the state with the new target meta field for the specific ID\r\n            return { ...state, metaFields: { ...state.metaFields, [action.id]: { ...(state.metaFields[action.id] || []), target: action.text } } };\r\n\r\n        default: // If the action type does not match any case\r\n            return state; // Return the current state unchanged\r\n    }\r\n}\r\n\r\nexport default reducer; // Exporting the reducer as the default export","/**\r\n * Retrieves the translation entries from the given state.\r\n *\r\n * This function extracts translation entries for the title, excerpt, meta fields, and content\r\n * from the provided state object and returns them as an array of translation entry objects.\r\n *\r\n * @param {Object} state - The state object containing translation data.\r\n * @param {Object} state.title - The title object containing source and target translations.\r\n * @param {Object} state.excerpt - The excerpt object containing source and target translations.\r\n * @param {Object} state.metaFields - An object containing meta field translations, where each key is a meta field ID.\r\n * @param {Object} state.content - An object containing content translations, where each key is a content ID.\r\n * @returns {Array<Object>} An array of translation entry objects, each containing the following properties:\r\n *   @property {string} id - The identifier of the translation entry.\r\n *   @property {string} source - The source text of the translation entry.\r\n *   @property {string} type - The type of the translation entry (e.g., 'title', 'excerpt', 'metaFields', 'content').\r\n *   @property {string} target - The target text of the translation entry (default is an empty string if not provided).\r\n */\r\nexport const getTranslationEntry = (state) => {\r\n    // Initialize an empty array to hold translation entries\r\n    const translateEntry = new Array;\r\n\r\n    // Push the title translation entry into the array\r\n    translateEntry.push({\r\n        id: 'title', // Identifier for the entry\r\n        source: state.title.source, // Source text for the title\r\n        type: 'title', // Type of the entry\r\n        target: (state.title.target || '') // Target text for the title, defaulting to an empty string if not provided\r\n    });\r\n\r\n    // Push the excerpt translation entry into the array\r\n    translateEntry.push({\r\n        id: 'excerpt', // Identifier for the entry\r\n        source: state.excerpt.source, // Source text for the excerpt\r\n        type: 'excerpt', // Type of the entry\r\n        target: (state.excerpt.target || '') // Target text for the excerpt, defaulting to an empty string if not provided\r\n    });\r\n\r\n    // Iterate over the metaFields object keys and push each translation entry into the array\r\n    Object.keys(state.metaFields).map(key => {\r\n        translateEntry.push({\r\n            type: 'metaFields', // Type of the entry\r\n            id: key, // Identifier for the meta field\r\n            source: state.metaFields[key].source, // Source text for the meta field\r\n            target: (state.metaFields[key].target || '') // Target text for the meta field, defaulting to an empty string if not provided\r\n        });\r\n    });\r\n    \r\n    // Iterate over the content object keys and push each translation entry into the array\r\n    Object.keys(state.content).map(key => {\r\n        translateEntry.push({\r\n            type: 'content', // Type of the entry\r\n            id: key, // Identifier for the content\r\n            source: state.content[key].source, // Source text for the content\r\n            target: (state.content[key].target || '') // Target text for the content, defaulting to an empty string if not provided\r\n        });\r\n    });\r\n\r\n    // Return the array of translation entries\r\n    return translateEntry;\r\n};\r\n\r\nexport const getTranslatedString = (state, type, source, id = null) => {\r\n    // Check if the type is 'title' or 'excerpt' and if the source matches\r\n    if (['title', 'excerpt'].includes(type) && state[type].source === source) {\r\n        return state[type].target; // Return the target text if it matches\r\n    } \r\n    // Check if the type is 'metaFields' and if the source matches\r\n    else if(type === 'metaFields' && state.metaFields && state.metaFields[id] && state.metaFields[id].source === source){\r\n        // Return the target text if it exists, otherwise return the source text\r\n        return undefined !== state.metaFields[id].target ? state.metaFields[id].target : state.metaFields[id].source;\r\n    } \r\n    // Check if the type is 'content' and if the source matches\r\n    else if (type === 'content' && state.content && state.content[id] && state.content[id].source === source) {\r\n        // Return the target text if it exists, otherwise return the source text\r\n        return undefined !== state.content[id].target ? state.content[id].target : state.content[id].source;\r\n    }\r\n    // If no matches, return the original source text\r\n    return source;\r\n}","/**\r\n * AtfpActionTypes is an object that defines the action types used in the \r\n * automatic translation feature of the application. Each property in this \r\n * object corresponds to a specific action that can be dispatched to the \r\n * global store, allowing the application to manage the state related to \r\n * source and translated content effectively.\r\n */\r\nconst AtfpActionTypes = {\r\n    // Action type for saving the title of the source content\r\n    sourceTitle: 'SAVE_SOURCE_TITLE',\r\n    \r\n    // Action type for saving the title of the translated content\r\n    traslatedTitle: 'SAVE_TRANSLATE_TITLE',\r\n    \r\n    // Action type for saving the excerpt of the source content\r\n    sourceExcerpt: 'SAVE_SOURCE_EXCERPT',\r\n    \r\n    // Action type for saving the excerpt of the translated content\r\n    traslatedExcerpt: 'SAVE_TRANSLATE_EXCERPT',\r\n    \r\n    // Action type for saving the main content of the source\r\n    sourceContent: 'SAVE_SOURCE_CONTENT',\r\n    \r\n    // Action type for saving the main content of the translated content\r\n    traslatedContent: 'SAVE_TRANSLATE_CONTENT',\r\n    \r\n    // Action type for saving the meta fields of the source content\r\n    sourceMetaFields: 'SAVE_SOURCE_META_FIELDS',\r\n    \r\n    // Action type for saving the meta fields of the translated content\r\n    traslatedMetaFields: 'SAVE_TRANSLATE_META_FIELDS',\r\n};\r\n\r\nexport default AtfpActionTypes;","import ReactDOM from \"react-dom\";\r\nimport { useEffect, useState } from \"@wordpress/element\";\r\nimport PopStringModal from \"./popupStringModal\";\r\nimport yandexLanguage from \"./component/TranslateProvider/yandex/yandex-language\";\r\nimport ChromeLocalAiTranslator from \"./component/TranslateProvider/local-ai-translator/local-ai-translator\";\r\nconst { sprintf, __ } = wp.i18n;\r\n\r\nconst PopupModal = (props) => {\r\n    const [fetchStatus, setFetchStatus] = useState(false);\r\n    const [targetBtn, setTargetBtn] = useState({});\r\n    const [blockRules, setBlockRules] = useState({});\r\n    const [modalRender, setModalRender] = useState({});\r\n    const [settingVisibility, setSettingVisibility] = useState(false);\r\n    const sourceLang = atfp_ajax_object.source_lang;\r\n    const targetLang = props.targetLang;\r\n    const sourceLangName = atfp_ajax_object.languageObject[sourceLang];\r\n    const targetLangName = atfp_ajax_object.languageObject[targetLang];\r\n    const apiUrl = atfp_ajax_object.ajax_url;\r\n    const imgFolder = atfp_ajax_object.atfp_url + 'assets/images/';\r\n    const yandexSupport = yandexLanguage().includes(targetLang);\r\n\r\n    /**\r\n     * Prepare data to send in API request.\r\n     */\r\n    const apiSendData = {\r\n        atfp_nonce: atfp_ajax_object.ajax_nonce,\r\n        action: atfp_ajax_object.action_block_rules\r\n    };\r\n\r\n    /**\r\n     * Update the fetch status state.\r\n     * @param {boolean} state - The state to update the fetch status with.\r\n     */\r\n    const updateFetch = (state) => {\r\n        setFetchStatus(state);\r\n    }\r\n\r\n    const openModalOnLoadHandler=(e)=>{\r\n        e.preventDefault();\r\n        const btnElement=e.target;\r\n        const visibility=btnElement.dataset.value;\r\n\r\n        if(visibility === 'yes'){\r\n            setSettingVisibility(true);\r\n        }\r\n\r\n        btnElement.closest('#atfp-modal-open-warning-wrapper').remove();\r\n    }\r\n\r\n    /**\r\n     * useEffect hook to set settingVisibility.\r\n     * Triggers the setSettingVisibility only when user click on meta field Button.\r\n    */\r\n    useEffect(() => {\r\n        const firstRenderBtns=document.querySelectorAll('#atfp-modal-open-warning-wrapper .modal-content button');\r\n        const metaFieldBtn = document.querySelector('input#atfp-translate-button[name=\"atfp_meta_box_translate\"]');\r\n\r\n        if (metaFieldBtn) {\r\n            metaFieldBtn.addEventListener('click', () => {\r\n                setSettingVisibility(prev => !prev);\r\n            });\r\n        }\r\n\r\n        firstRenderBtns.forEach(ele=>{\r\n            if(ele){\r\n                ele.addEventListener('click',openModalOnLoadHandler);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const languageSupportedStatus = async () => {\r\n            const localAiTranslatorSupport = await ChromeLocalAiTranslator.languageSupportedStatus(sourceLang, targetLang, targetLangName);\r\n            const translateBtn=document.querySelector('.atfp-service-btn#local_ai_translator_btn');\r\n\r\n            if(localAiTranslatorSupport !== true && typeof localAiTranslatorSupport === 'object' && translateBtn) {\r\n                translateBtn.disabled=true;\r\n                jQuery(translateBtn).after(localAiTranslatorSupport); \r\n            }       \r\n        };\r\n        languageSupportedStatus();\r\n    }, [settingVisibility]);\r\n\r\n    /**\r\n     * useEffect hook to fetch block rules data from the server.\r\n     * Triggers the fetch only when fetchStatus is true and blockRules is empty.\r\n     */\r\n    useEffect(() => {\r\n        if (Object.keys(blockRules).length > 0 || !fetchStatus) {\r\n            return;\r\n        }\r\n\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n                'Accept': 'application/json',\r\n            },\r\n            body: new URLSearchParams(apiSendData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const blockRules = JSON.parse(data.data.blockRules);\r\n\r\n                setBlockRules(blockRules);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching post content:', error);\r\n            });\r\n    }, [fetchStatus])\r\n\r\n    /**\r\n     * useEffect hook to handle displaying the modal and rendering the PopStringModal component.\r\n     * Renders the modal only when blockRules is not empty and fetchStatus is true.\r\n     */\r\n    useEffect(() => {\r\n        if (Object.keys(blockRules).length <= 0) {\r\n            return;\r\n        }\r\n\r\n        const btn = targetBtn;\r\n        const service = btn.dataset && btn.dataset.service;\r\n        const serviceLabel = btn.dataset && btn.dataset.serviceLabel;\r\n        const postId = props.postId;\r\n\r\n        const parentWrp = document.getElementById(\"atfp_strings_model\");\r\n\r\n        if (fetchStatus && Object.keys(blockRules).length > 0) {\r\n            ReactDOM.render(<PopStringModal\r\n                blockRules={blockRules}\r\n                visibility={fetchStatus}\r\n                updateFetch={updateFetch}\r\n                postId={postId}\r\n                service={service}\r\n                serviceLabel={serviceLabel}\r\n                sourceLang={sourceLang}\r\n                targetLang={targetLang}\r\n                modalRender={modalRender}\r\n                pageTranslate={props.pageTranslate}\r\n            />, parentWrp);\r\n            setSettingVisibility(prev => !prev);\r\n        }\r\n    }, [fetchStatus, blockRules]);\r\n\r\n    /**\r\n     * Function to handle fetching content based on the target button clicked.\r\n     * Sets the target button and updates the fetch status to true.\r\n     * @param {Event} e - The event object representing the button click.\r\n     */\r\n    const fetchContent = async (e) => {\r\n        let targetElement = !e.target.classList.contains('atfp-service-btn') ? e.target.closest('.atfp-service-btn') : e.target;\r\n        const dataService = targetElement.dataset && targetElement.dataset.service;\r\n\r\n        if(dataService === 'localAiTranslator') {\r\n            const localAiTranslatorSupport = await ChromeLocalAiTranslator.languageSupportedStatus(sourceLang, targetLang, targetLangName);\r\n            if(localAiTranslatorSupport !== true && typeof localAiTranslatorSupport === 'object') {\r\n                return;\r\n            }\r\n        }\r\n        setModalRender(prev => prev + 1);\r\n        setTargetBtn(targetElement);\r\n        setFetchStatus(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {settingVisibility &&\r\n                <div className=\"modal-container\" style={{ display: settingVisibility ? 'flex' : 'none' }}>\r\n                    <div className=\"atfp-settings modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2>{__(\"Step 1 - Select Translation Provider\", 'automatic-translations-for-polylang')}</h2>\r\n                            <h4>{sprintf(__(\"Translate %(postType)s content from %(source)s to %(target)s\", 'automatic-translations-for-polylang'), { postType: props.postType, source: sourceLangName, target: targetLangName })}</h4>\r\n                            <p class=\"atfp-error-message\" style={{marginBottom: '.5rem'}}>{sprintf(__(\"This translation widget replaces the current %(postType)s content with the original %(source)s %(postType)s and translates it into %(target)s\", 'automatic-translations-for-polylang'),{ postType: props.postType, source: sourceLangName, target: targetLangName})}</p>\r\n                            <span className=\"close\" onClick={() => setSettingVisibility(false)}>&times;</span>\r\n                        </div>\r\n                        <hr />\r\n                        <strong className=\"atlt-heading\">{__(\"Translate Using Yandex Page Translate Widget\", 'automatic-translations-for-polylang')}</strong>\r\n                        <div className=\"inputGroup\">\r\n                            {yandexSupport ?\r\n                                <>\r\n                                    <button className=\"atfp-service-btn translate button button-primary\" data-service=\"yandex\" data-service-label=\"Yandex Translate\" onClick={fetchContent}>{__(\"Yandex Translate\", 'automatic-translations-for-polylang')}</button>\r\n                                    <br />\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <button className=\"atfp-service-btn translate button button-primary\" disabled={true}>{__(\"Yandex Translate\", 'automatic-translations-for-polylang')}</button><br />\r\n                                    <span className=\"atfp-error-message\">{targetLangName} {__('language is not supported by Yandex Translate', 'automatic-translations-for-polylang')}.</span>\r\n                                </>\r\n                            }\r\n                            <a href=\"https://translate.yandex.com/\" target=\"_blank\"><img className=\"pro-features-img\" src={`${imgFolder}powered-by-yandex.png`} alt=\"powered by Yandex Translate Widget\" /></a>\r\n                        </div>\r\n                        <hr />\r\n                        <ul style={{ margin: \"0\" }}>\r\n                            <li><span style={{ color: \"green\" }}>✔</span> {__(\"Unlimited Translations with Yandex Translate\", 'automatic-translations-for-polylang')}</li>\r\n                            <li><span style={{ color: \"green\" }}>✔</span> {__(\"No API Key Required for Yandex Translate\", 'automatic-translations-for-polylang')}</li>\r\n                            <li><span style={{ color: \"green\" }}>✔</span> {__(\"Supports Multiple Languages\", 'automatic-translations-for-polylang')} - <a href=\"https://yandex.com/support2/translate-desktop/en/supported-langs\" target=\"_blank\">{__(\"See Supported Languages\", 'automatic-translations-for-polylang')}</a></li>\r\n                        </ul>\r\n                        <hr />\r\n                        <strong className=\"atlt-heading\">{__(\"Translate Using Chrome Built-in API\", 'automatic-translations-for-polylang')}</strong>\r\n                        <div className=\"inputGroup\">\r\n                            <button id=\"local_ai_translator_btn\" class=\"atfp-service-btn button button-primary\" data-service=\"localAiTranslator\" data-service-label=\"Chrome Built-in API\" onClick={fetchContent}>{__(\"Chrome AI Translator (Beta)\", 'automatic-translations-for-polylang')}</button>\r\n                            <br/><a href=\"https://developer.chrome.com/docs/ai/translator-api\" target=\"_blank\">Powered by <img className=\"pro-features-img\" src={`${imgFolder}chrome-ai-translator.png`} alt=\"powered by Chrome built-in API\" /> Built-in API</a>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"atfp-setting-close\" onClick={() => setSettingVisibility(false)}>{__(\"Close\", 'automatic-translations-for-polylang')}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PopupModal;","import { useState } from \"react\";\r\nimport FetchPost from \"./fetch-post\";\r\nconst { __ } = wp.i18n;\r\nconst { select } = wp.data;\r\n\r\nconst StringPopUpBody = (props) => {\r\n\r\n    const { service: service, serviceLabel: serviceLabel } = props;\r\n    const [stringAvality, setStringAvality] = useState(false);\r\n\r\n    let totalWordCount = 0;\r\n    /**\r\n     * Updates the post content with the provided content.\r\n     * @param {string} content - The content to update the post with.\r\n     */\r\n    const updatePostContent = (content) => {\r\n        props.updatePostContent(content);\r\n        const translationEntry = select(\"block-atfp/translate\").getTranslationEntry();\r\n\r\n        const totalString = Object.values(translationEntry).filter(data => data.source !== undefined && /[\\p{L}\\p{N}]/gu.test(data.source));\r\n\r\n        if (Object.keys(totalString).length > 0) {\r\n            setStringAvality(true);\r\n        } else {\r\n            setStringAvality(false);\r\n        }\r\n    }\r\n\r\n    const updateTranslateContent = (entries) => {\r\n        if (Object.getPrototypeOf(entries) === Object.prototype && entries.stringRenderComplete === true) {\r\n            props.stringCountHandler(totalWordCount);\r\n            return;\r\n        }\r\n        \r\n        let entrie = entries.join(\" \");\r\n\r\n        if (undefined === entrie || entrie.trim() === '') {\r\n            return;\r\n        };\r\n\r\n        entrie = entrie.replace(/#atfp_open_translate_span#(.*?)#atfp_close_translate_span#/g, '');\r\n\r\n        const wordCount = entrie.trim().split(/\\s+/).filter(word => /[^\\p{L}\\p{N}]/.test(word)).length;\r\n\r\n        totalWordCount += wordCount;\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-body\">\r\n            <div className=\"atfp_translate_progress\" key={props.modalRender}>{__(\"Automatic translation is in progress....\", 'automatic-translations-for-polylang')}<br />{__(\"It will take few minutes, enjoy ☕ coffee in this time!\", 'automatic-translations-for-polylang')}<br /><br />{__(\"Please do not leave this window or browser tab while translation is in progress...\", 'automatic-translations-for-polylang')}</div>\r\n            <div className={`translator-widget ${service}`} style={{ display: `${stringAvality ? `${props.service === 'localAiTranslator' ? 'flex' : 'block'}` : 'none'}` }}>\r\n                {props.service === 'localAiTranslator' ?\r\n                    <h3 class=\"choose-lang\">{__(\"Translate Using Chrome built-in API\", 'automatic-translations-for-polylang')} <span class=\"dashicons-before dashicons-translation\"></span></h3>\r\n                    :\r\n                    <h3 class=\"choose-lang\">{__(\"Choose language\", 'automatic-translations-for-polylang')} <span class=\"dashicons-before dashicons-translation\"></span></h3>\r\n                }\r\n                <div className=\"atfp_translate_element_wrapper\">\r\n                    <div id=\"atfp_yandex_translate_element\" style={{ display: `${service === 'yandex' ? 'block' : 'none'}` }}></div>\r\n                    <div id=\"atfp_localAiTranslator_translate_element\" style={{ display: `${service === 'localAiTranslator' ? 'block' : 'none'}` }}></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`atfp_string_container${!stringAvality ? ' atfp_empty_string' : ''}`}>\r\n                <table className=\"scrolldown\" id=\"stringTemplate\">\r\n                    {stringAvality &&\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"notranslate\">{__(\"S.No\", 'automatic-translations-for-polylang')}</th>\r\n                                <th className=\"notranslate\">{__(\"Source Text\", 'automatic-translations-for-polylang')}</th>\r\n                                <th className=\"notranslate\">{__(\"Translation\", 'automatic-translations-for-polylang')}</th>\r\n                            </tr>\r\n                        </thead>\r\n                    }\r\n                    <tbody>\r\n                        <FetchPost blockRules={props.blockRules} setPostData={updatePostContent} {...props} translateContent={updateTranslateContent} />\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpBody;\r\n","import { useEffect, useState } from \"@wordpress/element\";\r\nimport saveTranslation from \"../component/storeSourceString\";\r\nimport FilterTargetContent from \"../component/FilterTargetContent\";\r\nconst { __ } = wp.i18n;\r\nconst { parse } = wp.blocks;\r\nconst { select } = wp.data;\r\n\r\nconst FetchPost = (props) => {\r\n    const [translateContent, setTranslateContent] = useState([]);\r\n    const [stringAvality, setStringAvality] = useState(true);\r\n    const blockRules = props.blockRules;\r\n    const apiUrl = atfp_ajax_object.ajax_url;\r\n\r\n    /**\r\n     * Prepare data to send in API request.\r\n     */\r\n    const apiSendData = {\r\n        postId: parseInt(props.postId),\r\n        local: props.targetLang,\r\n        current_local: props.sourceLang,\r\n        atfp_nonce: atfp_ajax_object.ajax_nonce,\r\n        action: atfp_ajax_object.action_fetch\r\n    };\r\n\r\n    /**\r\n     * useEffect hook to fetch post data from the specified API endpoint.\r\n     * Parses the response data and updates the state accordingly.\r\n     * Handles errors in fetching post content.\r\n     */\r\n    useEffect(() => {\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n                'Accept': 'application/json',\r\n            },\r\n            body: new URLSearchParams(apiSendData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                const post_data = data.data;\r\n\r\n                if (post_data.content && post_data.content.trim() !== '') {\r\n                    post_data.content = parse(post_data.content);\r\n                }\r\n                \r\n                saveTranslation(post_data, blockRules);\r\n                props.setPostData(post_data);\r\n\r\n                const translationEntry = select(\"block-atfp/translate\").getTranslationEntry();\r\n\r\n                const totalString = Object.values(translationEntry).filter(data => data.source !== undefined && /[\\p{L}\\p{N}]/gu.test(data.source));\r\n                if (Object.keys(totalString).length > 0) {\r\n                    setTranslateContent(translationEntry);\r\n                } else {\r\n                    setStringAvality(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching post content:', error);\r\n            });\r\n    }, [props.fetchKey]);\r\n\r\n    let sNo = 0;\r\n\r\n    const totalString = translateContent.filter(data => undefined !== data.source && data.source.trim() !== '').length;\r\n\r\n    return (\r\n        <>\r\n            {translateContent.length > 0 || stringAvality ?\r\n                translateContent.map((data, index) => {\r\n                    return (\r\n                        <>\r\n                            {undefined !== data.source && data.source.trim() !== '' &&\r\n                                <>\r\n                                    <tr key={index}>\r\n                                        <td>{++sNo}</td>\r\n                                        <td data-source=\"source_text\">{data.source}</td>\r\n                                        <td class=\"translate\" translate=\"yes\" data-key={data.id} data-string-type={data.type}>\r\n                                            <FilterTargetContent service={props.service} content={data.source} translateContent={props.translateContent} totalString={totalString} currentIndex={sNo} contentKey={data.id}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    );\r\n                })\r\n                : <p>{__('No strings are available for translation', 'automatic-translations-for-polylang')}</p>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FetchPost;","import translatePost from \"../component/createTranslatedPost\";\r\nimport StringPopUpNotice from \"./notice\";\r\nconst { sprintf, __ } = wp.i18n;\r\n\r\nconst StringPopUpFooter = (props) => {\r\n\r\n    /**\r\n     * Function to close the popup modal.\r\n     */\r\n    const closeModal = () => {\r\n        props.setPopupVisibility(false);\r\n    }\r\n\r\n    /**\r\n     * Function to create a translated post using the provided content, translation, block rules, and modal close function.\r\n     */\r\n    const createTranslatedPost = () => {\r\n        const postContent = props.postContent;\r\n        const blockRules = props.blockRules;\r\n        const modalClose = closeModal;\r\n\r\n        translatePost({ postContent: postContent, modalClose: modalClose, blockRules: blockRules });\r\n        props.pageTranslate(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-footer\" key={props.modalRender}>\r\n            {!props.translateStatus && props.stringCount && <StringPopUpNotice className=\"atfp_string_count\">{sprintf(__(\"Automated translation complete: %s words translated, saving valuable time and resources.\", 'automatic-translations-for-polylang'), props.stringCount)}</StringPopUpNotice>}\r\n            <div className=\"save_btn_cont\">\r\n                <button className=\"notranslate save_it button button-primary\" disabled={props.translateStatus} onClick={createTranslatedPost}>{__(\"Update Content\", 'automatic-translations-for-polylang')}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpFooter;","import translatePost from \"../component/createTranslatedPost\";\r\nconst { __ } = wp.i18n;\r\n\r\nconst StringPopUpHeader = (props) => {\r\n\r\n    /**\r\n     * Function to close the popup modal.\r\n     */\r\n    const closeModal = () => {\r\n        props.setPopupVisibility(false);\r\n    }\r\n\r\n    /**\r\n     * Function to create a translated post using the provided content, translation settings, block rules, and modal close function.\r\n     */\r\n    const createTranslatedPost = () => {\r\n        const postContent = props.postContent;\r\n        const blockRules = props.blockRules;\r\n        const modalClose = closeModal;\r\n\r\n        translatePost({ postContent: postContent, modalClose: modalClose, blockRules: blockRules });\r\n\r\n        props.pageTranslate(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-header\" key={props.modalRender}>\r\n            <span className=\"close\" onClick={closeModal}>&times;</span>\r\n            <h2 className=\"notranslate\">{__(\"Step 2 - Start Automatic Translation Process\", 'automatic-translations-for-polylang')}</h2>\r\n            <div className=\"save_btn_cont\">\r\n                <button className=\"notranslate save_it button button-primary\" disabled={props.translateStatus} onClick={createTranslatedPost}>{__(\"Update Content\", 'automatic-translations-for-polylang')}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpHeader;","import { useEffect, useState } from \"@wordpress/element\";\r\nimport StringPopUpHeader from \"./header\";\r\nimport StringPopUpBody from \"./body\";\r\nimport StringPopUpFooter from \"./footer\";\r\nimport TranslateService from \"../component/TranslateProvider\";\r\n\r\nconst popStringModal = (props) => {\r\n    const [popupVisibility, setPopupVisibility] = useState(props.visibility);\r\n    const [refPostData, setRefPostData] = useState('');\r\n    const [translatePending, setTranslatePending] = useState(true);\r\n    const [translateObj, setTranslateObj] = useState({});\r\n    const [stringCount, setStringCount] = useState(false);\r\n\r\n    const stringCountHandler = (number) => {\r\n        if (popupVisibility) {\r\n            setStringCount(number);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the post content data.\r\n     * @param {string} data - The data to set as the post content.\r\n     */\r\n    const updatePostContentHandler = (data) => {\r\n        setRefPostData(data);\r\n    }\r\n\r\n    /**\r\n     * Updates the fetch state.\r\n     * @param {boolean} state - The state to update the fetch with.\r\n     */\r\n    const setPopupVisibilityHandler = (state) => {\r\n\r\n        if (props.service === 'yandex') {\r\n            document.querySelector('#atfp_yandex_translate_element #yt-widget .yt-button__icon.yt-button__icon_type_right')?.click();\r\n        }\r\n\r\n        setTranslatePending(true);\r\n        setPopupVisibility(false);\r\n        props.updateFetch(state);\r\n    }\r\n\r\n    const translateStatusHandler = () => {\r\n        setTranslatePending(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.documentElement.setAttribute('translate', 'no');\r\n        document.body.classList.add('notranslate');\r\n\r\n        /**\r\n         * Calls the translate service provider based on the service type.\r\n         * For example, it can call services like yandex Translate.\r\n        */\r\n        const service = props.service;\r\n        const id = `atfp_${service}_translate_element`;\r\n        if (undefined === translateObj[service] && true !== translateObj[service] && refPostData && stringCount) {\r\n            setTranslateObj(prev => { return { ...prev, [service]: true } });\r\n            TranslateService[service]({ sourceLang: props.sourceLang, targetLang: props.targetLang, translateStatus: translateStatusHandler, ID: id });\r\n        }\r\n    }, [props.service, refPostData, stringCount]);\r\n\r\n    useEffect(() => {\r\n        setPopupVisibility(true);\r\n        setTimeout(() => {\r\n            const stringModal = document.querySelector('.atfp_string_container');\r\n            if (stringModal) {\r\n                stringModal.scrollTop = 0\r\n            };\r\n        })\r\n    }, [props.modalRender])\r\n\r\n    return (\r\n        <>\r\n            <div id={`atfp-${props.service}-strings-modal`} class=\"modal-container\" style={{ display: popupVisibility ? 'flex' : 'none' }}>\r\n                <div class=\"modal-content\">\r\n                    <StringPopUpHeader modalRender={props.modalRender} setPopupVisibility={setPopupVisibilityHandler} postContent={refPostData} blockRules={props.blockRules} translateStatus={translatePending} pageTranslate={props.pageTranslate} />\r\n                    <StringPopUpBody {...props} updatePostContent={updatePostContentHandler} blockRules={props.blockRules} stringCountHandler={stringCountHandler} />\r\n                    <StringPopUpFooter modalRender={props.modalRender} setPopupVisibility={setPopupVisibilityHandler} postContent={refPostData} blockRules={props.blockRules} translateStatus={translatePending} pageTranslate={props.pageTranslate} stringCount={stringCount} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default popStringModal;","const StringPopUpNotice = (props) => {\r\n    return (\r\n        <div className={`notice inline notice-info is-dismissible ${props.className}`}>\r\n            {Array.isArray(props.children) ? props.children.join(' ') : props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpNotice;","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import PopupModal from './popmodel';\r\nimport './global-store';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst init = () => {\r\n  let atfpModals = new Array();\r\n  const atfpSettingModalWrp = '<!-- The Modal --><div id=\"atfp-setting-modal\"></div>';\r\n  const atfpStringModalWrp = '<div id=\"atfp_strings_model\" class=\"modal atfp_custom_model\"></div>';\r\n\r\n  atfpModals.push(atfpSettingModalWrp, atfpStringModalWrp);\r\n\r\n  atfpModals.forEach(modal => {\r\n    document.body.insertAdjacentHTML('beforeend', modal);\r\n  });\r\n}\r\n\r\nconst App = () => {\r\n  const [pageTranslate, setPageTranslate] = useState(false);\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const targetLang = urlParams.get('new_lang');\r\n  const postId = urlParams.get('from_post');\r\n  const postType = urlParams.get('post_type');\r\n\r\n  const handlePageTranslate = (status) => {\r\n    setPageTranslate(status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pageTranslate) {\r\n      const metaFieldBtn = document.querySelector('input#atfp-translate-button[name=\"atfp_meta_box_translate\"]');\r\n      if (metaFieldBtn) {\r\n        metaFieldBtn.disabled = true;\r\n      }\r\n    }\r\n  }, [pageTranslate]);\r\n\r\n  return (\r\n    <>\r\n      {!pageTranslate && <PopupModal pageTranslate={handlePageTranslate} postId={postId} targetLang={targetLang} postType={postType} />}\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n * Creates a message popup based on the post type and target language.\r\n * @returns {HTMLElement} The created message popup element.\r\n */\r\nconst createMessagePopup = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const postType = urlParams.get('post_type');\r\n  const targetLang = urlParams.get('new_lang');\r\n  const targetLangName = atfp_ajax_object.languageObject[targetLang];\r\n\r\n  const messagePopup = document.createElement('div');\r\n  messagePopup.id = 'atfp-modal-open-warning-wrapper';\r\n  messagePopup.innerHTML = `\r\n    <div class=\"modal-container\" style=\"display: flex\">\r\n      <div class=\"modal-content\">\r\n        <p>Would you like to duplicate your original ${postType} content and have it automatically translated into ${targetLangName}?</p>\r\n        <div>\r\n          <button data-value=\"yes\">Yes</button>\r\n          <button data-value=\"no\">No</button>\r\n        </div>\r\n      </div>\r\n    </div>`;\r\n  return messagePopup;\r\n};\r\n\r\n/**\r\n * Inserts the message popup into the DOM.\r\n */\r\nconst insertMessagePopup = () => {\r\n  const targetElement = document.getElementById('atfp-setting-modal');\r\n  const messagePopup = createMessagePopup();\r\n  document.body.insertBefore(messagePopup, targetElement);\r\n};\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n  // Append app root wrapper in body\r\n  init();\r\n\r\n  insertMessagePopup();\r\n\r\n  wp.element.render(<App />, document.getElementById('atfp-setting-modal'));\r\n});\r\n"],"names":["AllowedMetaFields","type","FilterBlockNestedAttr","idsArr","attrObj","blockAttr","callBack","childAttr","idArr","filterObj","Object","keys","map","key","filterObjType","newIdArr","Array","childAttrArray","attrFilter","dynamicBlockAttr","forEach","getPrototypeOf","prototype","_","index","nestedId","push","typeCheck","FilterTargetContent","props","wrapFirstAndMatchingClosingTag","html","tempElement","document","createElement","innerHTML","firstElement","firstElementChild","childElements","children","length","i","element","filterContent","outerHTML","firstElementOpeningTag","match","openTagName","tagName","toLowerCase","closingTagName","RegExp","closingTagMatch","wrappedFirstTag","firstElementHtml","openTag","closeTag","splitContent","string","pattern","matches","split","filter","Boolean","output","trim","filterSeoContent","content","regex","replace","filterSourceData","replaceInnerTextWithSpan","doc","childElementsReplace","textNode","createTextNode","replaceWith","innerText","isSeoContent","test","contentKey","service","translateContent","currentIndex","totalString","stringRenderComplete","notTranslatePattern","replacePlaceholderPattern","updatedContent","React","Fragment","data","notTranslate","className","translate","YandexTranslater","localAiTranslator","yandex","ChromeAiTranslator","__","dispatch","wp","SaveTranslation","targetLangName","atfp_ajax_object","languageObject","targetLang","startTranslation","stringContainer","jQuery","scrollHeight","fadeIn","completeTranslation","setTimeout","translateStatus","fadeOut","beforeTranslate","ele","scrollStringContainer","position","scrollTop","stringContainerPosition","getBoundingClientRect","eleTopPosition","closest","offsetTop","containerHeight","height","y","offsetHeight","afterTranslate","translatedText","dataset","stringType","sourceText","querySelector","source","TranslateProvider","mainWrapperSelector","btnSelector","ID","btnClass","btnText","stringSelector","progressBarSelector","sourceLanguage","sourceLang","targetLanguage","targetLanguageLabel","onStartTranslationProcess","onComplete","onBeforeTranslate","onAfterTranslate","hasOwnProperty","init","options","selfObject","extraData","constructor","onLanguageError","langSupportedStatus","languageSupportedStatus","defaultLang","continueTranslation","stopTranslation","reInit","supportedLanguages","lang","window","navigator","userAgent","includes","message","self","translation","status","canTranslate","appendBtn","translationStart","completedTranslateIndex","completedCharacterCount","translateBtnEvents","addProgressBar","translateBtn","append","e","off","prop","on","startTranslationProcess","translateStringEle","stringTranslation","translatedStringsCount","langCode","totalStringCount","from","reduce","a","b","translator","createTranslator","orignalText","originalString","childNodes","child","nodeType","nodeValue","stringTranslationBatch","updateProgressBar","characterCount","find","show","text","translatedString","progressBar","progress","decimalValue","toString","formattedProgress","parseInt","css","ModalStringScroll","yandexWidget","win","nav","params","namespace","util","keycode","ESCAPE","getRequest","XDomainRequest","XMLHttpRequest","loadScript","src","parent","callback","script","addEventListener","onLoad","removeEventListener","appendChild","loadResource","url","request","onload","responseText","open","send","getStyleList","value","getAttribute","hasStyleName","name","list","indexOf","addStyleName","setAttribute","join","removeStyleName","splice","isSupportedBrowser","compatMode","Button","contentElement","event","onClick","_element","_contentElement","setText","textContent","Select","form","itemName","reset","target","onSelect","alert","checked","onChange","_form","_itemName","isHidden","hasAttribute","getItems","getValue","n","items","setValue","setHidden","hidden","onHiddenChange","Widget","active","select","storage","autoMode","pageLang","userLang","leftButton","rightButton","closeButton","_pageLang","_translator","onStateChange","enable","setState","docElem","documentElement","formRect","focus","right","pageXOffset","scrollLeft","Math","max","clientWidth","scrollWidth","bottom","pageYOffset","clientHeight","keyCode","abort","hasState","undo","undefined","defaultcode","Storage","_name","_data","JSON","parse","localStorage","error","stringify","wrapper","getElementById","widgetId","initWidget","widgetTheme","language","userLanguage","PageTranslator","srv","autoSync","maxPortionLength","readyState","globalObj","yt","languages","RankMathSeo","updateKeywords","updateTitle","updateDescription","updateBreadcrumbTitle","updateFacebookTitle","updateFacebookDescription","updateTwitterTitle","updateTwitterDescription","YoastSeoFields","updateData","setFocusKeyword","setBreadcrumbsTitle","setFacebookPreviewTitle","setFacebookPreviewDescription","setTwitterPreviewTitle","setTwitterPreviewDescription","title","description","createBlock","blocks","filterTranslateAttr","block","blockParseRules","filterAttrArr","values","attributes","blockId","clientId","updateNestedAttribute","obj","path","newObj","current","richText","RichTextData","updateTranslatedAttr","filterAttrObj","childIdArr","uniqueId","blockAttrContent","originalHTML","filterKey","getTranslatedString","createTranslatedBlock","childBlock","blockRules","blockName","blockTranslateName","AtfpBlockParseRules","attribute","translatedBlock","newBlock","cretaeChildBlock","innerBlocks","createBlocks","parentBlock","insertBlock","translatePost","editPost","modalClose","postContent","postDataUpdate","editPostData","sourceData","postMetaFieldsUpdate","metaFieldsData","metaFields","translatedMetaFields","startsWith","meta","postContentUpdate","postContentData","filterAttr","saveTranslatedAttr","contentSaveSource","getTranslateString","childBlockAttributesContent","blockAttributeContent","parseBlock","saveTranslation","metaKey","metaFieldsSaveSource","action","metaFieldsSaveTranslate","contentSaveTranslate","ScrollAnimation","scrollSpeed","startTime","startScrollTop","animateScroll","currentTime","performance","now","duration","scrollTarget","scrollPosition","updateTranslatedContent","container","translatedData","querySelectorAll","onCompleteTranslation","style","display","animation","body","top","saveButton","removeAttribute","classList","add","remove","translateComplete","ceil","isScrolledToBottom","AtfpActionTypes","titleSaveSource","sourceTitle","titleSaveTranslate","traslatedTitle","excerptSaveSource","sourceExcerpt","excerptSaveTranslate","traslatedExcerpt","id","sourceContent","traslatedContent","sourceMetaFields","traslatedMetaFields","reducer","actions","selectors","createReduxStore","register","store","TranslateDefaultState","excerpt","state","getTranslationEntry","translateEntry","ReactDOM","useEffect","useState","PopStringModal","yandexLanguage","ChromeLocalAiTranslator","sprintf","i18n","PopupModal","fetchStatus","setFetchStatus","targetBtn","setTargetBtn","setBlockRules","modalRender","setModalRender","settingVisibility","setSettingVisibility","source_lang","sourceLangName","apiUrl","ajax_url","imgFolder","atfp_url","yandexSupport","apiSendData","atfp_nonce","ajax_nonce","action_block_rules","updateFetch","openModalOnLoadHandler","preventDefault","btnElement","visibility","firstRenderBtns","metaFieldBtn","prev","localAiTranslatorSupport","disabled","after","fetch","method","headers","URLSearchParams","then","response","json","catch","console","btn","serviceLabel","postId","parentWrp","render","pageTranslate","fetchContent","targetElement","contains","dataService","postType","class","marginBottom","href","alt","margin","color","FetchPost","StringPopUpBody","stringAvality","setStringAvality","totalWordCount","updatePostContent","translationEntry","updateTranslateContent","entries","stringCountHandler","entrie","wordCount","word","_extends","setPostData","setTranslateContent","local","current_local","action_fetch","post_data","fetchKey","sNo","StringPopUpNotice","StringPopUpFooter","closeModal","setPopupVisibility","createTranslatedPost","stringCount","StringPopUpHeader","TranslateService","popStringModal","popupVisibility","refPostData","setRefPostData","translatePending","setTranslatePending","translateObj","setTranslateObj","setStringCount","number","updatePostContentHandler","setPopupVisibilityHandler","click","translateStatusHandler","stringModal","isArray","atfpModals","atfpSettingModalWrp","atfpStringModalWrp","modal","insertAdjacentHTML","App","setPageTranslate","urlParams","location","search","get","handlePageTranslate","createMessagePopup","messagePopup","insertMessagePopup","insertBefore"],"sourceRoot":""}