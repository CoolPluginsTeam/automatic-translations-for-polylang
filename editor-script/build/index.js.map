{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AAAA,MAAMA,mBAAmB,GAAIC,KAAK,IAAK;EAEnC;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMC,8BAA8B,GAAIC,IAAI,IAAK;IAC7C;IACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACjDF,WAAW,CAACG,SAAS,GAAGJ,IAAI;;IAE5B;IACA,MAAMK,YAAY,GAAGJ,WAAW,CAACK,iBAAiB;IAElD,IAAI,CAACD,YAAY,EAAE;MACf,OAAOL,IAAI,CAAC,CAAC;IACjB;;IAEA;IACA;IACA,MAAMO,sBAAsB,GAAGF,YAAY,CAACG,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;IAE1E;IACA,MAAMC,WAAW,GAAGL,YAAY,CAACM,OAAO,CAACC,WAAW,CAAC,CAAC;IACtD,MAAMC,cAAc,GAAG,IAAIC,MAAM,CAAC,MAAMJ,WAAW,GAAG,EAAE,GAAG,CAAC;;IAE5D;IACA,MAAMK,eAAe,GAAGV,YAAY,CAACG,SAAS,CAACC,KAAK,CAACI,cAAc,CAAC;;IAEpE;IACA,MAAMG,eAAe,GAAG,6BAA6BT,sBAAsB,6BAA6B;;IAExG;IACA,IAAIU,aAAa,GAAGZ,YAAY,CAACG,SAAS,CAACU,OAAO,CAACX,sBAAsB,EAAES,eAAe,CAAC;IAE3F,IAAID,eAAe,EAAE;MACjB,MAAMI,iBAAiB,GAAG,+BAA+BT,WAAW,8BAA8B;MAElGO,aAAa,GAAGA,aAAa,CAACC,OAAO,CAACL,cAAc,EAAEM,iBAAiB,CAAC;IAC5E;IAEAd,YAAY,CAACG,SAAS,GAAGS,aAAa;;IAEtC;IACA,OAAOhB,WAAW,CAACG,SAAS;EAChC,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACI,MAAMgB,YAAY,GAAIC,MAAM,IAAK;IAC7B,MAAMC,OAAO,GAAG,8DAA8D;IAC9E,MAAMC,OAAO,GAAGF,MAAM,CAACG,KAAK,CAACF,OAAO,CAAC,CAACG,MAAM,CAACC,OAAO,CAAC;;IAErD;IACA,MAAMC,MAAM,GAAGJ,OAAO,CAACE,MAAM,CAAChB,KAAK,IAAIA,KAAK,CAACmB,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAE3D,OAAOD,MAAM;EACjB,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACI,MAAME,gBAAgB,GAAIR,MAAM,IAAK;IACjC,SAASS,wBAAwBA,CAACC,GAAG,EAAE;MACnC,IAAIC,QAAQ,GAAGD,GAAG,CAACE,aAAa,CAAC,MAAM,CAAC,CAACC,gBAAgB,CAAC,GAAG,CAAC;MAC9DF,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;QACxB,IAAInB,aAAa,GAAGlB,8BAA8B,CAACqC,OAAO,CAAC5B,SAAS,CAAC;QACrE,MAAM6B,QAAQ,GAAGnC,QAAQ,CAACoC,cAAc,CAACrB,aAAa,CAAC;QACvDmB,OAAO,CAACG,UAAU,CAACC,YAAY,CAACH,QAAQ,EAAED,OAAO,CAAC;MACtD,CAAC,CAAC;MACF,OAAOL,GAAG;IACd;IAEA,IAAIU,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;IAC5B,IAAIX,GAAG,GAAGU,MAAM,CAACE,eAAe,CAACtB,MAAM,EAAE,WAAW,CAAC;IAErDS,wBAAwB,CAACC,GAAG,CAAC;IAC7B,OAAOX,YAAY,CAACW,GAAG,CAACa,IAAI,CAACC,SAAS,CAAC;EAC3C,CAAC;;EAED;AACJ;AACA;AACA;EACI,MAAMC,OAAO,GAAG,QAAQ,KAAKhD,KAAK,CAACiD,OAAO,GAAGlB,gBAAgB,CAAC/B,KAAK,CAACgD,OAAO,CAAC,GAAGhD,KAAK,CAACgD,OAAO;;EAE5F;AACJ;AACA;EACI,MAAME,mBAAmB,GAAG,+DAA+D;;EAE3F;AACJ;AACA;EACI,MAAMC,yBAAyB,GAAG,yDAAyD;EAE3F,oBACIC,KAAA,CAAA/C,aAAA,CAAA+C,KAAA,CAAAC,QAAA,QACK,QAAQ,KAAKrD,KAAK,CAACiD,OAAO,GACvBD,OAAO,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IACzB,MAAMC,YAAY,GAAGP,mBAAmB,CAACQ,IAAI,CAACH,IAAI,CAAC;IACnD,IAAIE,YAAY,EAAE;MACd,oBAAOL,KAAA,CAAA/C,aAAA;QAAMsD,GAAG,EAAEH,KAAM;QAACI,SAAS,EAAC;MAAiC,GAAEL,IAAI,CAACnC,OAAO,CAAC+B,yBAAyB,EAAE,EAAE,CAAQ,CAAC;IAC7H,CAAC,MAAM;MACH,OAAOI,IAAI;IACf;EACJ,CAAC,CAAC,GACAP,OACR,CAAC;AAEX,CAAC;AAED,iEAAejD,mBAAmB;;;;;;;;;;;;;;ACvHlC,MAAM;EAAE8D;AAAS,CAAC,GAAGC,EAAE,CAACP,IAAI;AAC5B;AACA;AACA;AACA;AACA,MAAMQ,eAAe,GAAIC,aAAa,IAAK;EACvCC,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACV,GAAG,CAACK,GAAG,IAAI;IAClC,MAAMJ,IAAI,GAAGS,aAAa,CAACL,GAAG,CAAC;IAE/B,IAAIJ,IAAI,CAACY,IAAI,KAAK,SAAS,EAAE;MACzB,MAAMC,MAAM,GAAG,GAAGb,IAAI,CAACY,IAAI,eAAe;MAC1CN,QAAQ,CAAC,sBAAsB,CAAC,CAACO,MAAM,CAAC,CAACb,IAAI,CAACc,gBAAgB,CAAC;IACnE,CAAC,MAAM;MACHR,QAAQ,CAAC,sBAAsB,CAAC,CAACS,oBAAoB,CAACX,GAAG,EAAEJ,IAAI,CAACc,gBAAgB,EAAEd,IAAI,CAACgB,MAAM,CAAC;IAClG;EACJ,CAAC,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAClC,MAAMC,SAAS,GAAGrE,QAAQ,CAACsE,cAAc,CAAC,oBAAoB,CAAC;EAC/D,MAAMC,eAAe,GAAGF,SAAS,CAACtC,aAAa,CAAC,wBAAwB,CAAC;EACzE,MAAMyC,cAAc,GAAGD,eAAe,CAACvC,gBAAgB,CAAC,gCAAgC,CAAC;EAEzF,MAAMmB,IAAI,GAAG,CAAC,CAAC;EAEfqB,cAAc,CAACvC,OAAO,CAACwC,GAAG,IAAI;IAC1B,MAAMC,cAAc,GAAGD,GAAG,CAAC9B,SAAS;IACpC,MAAMY,GAAG,GAAGkB,GAAG,CAACE,OAAO,CAACpB,GAAG;IAC3B,MAAMQ,IAAI,GAAGU,GAAG,CAACE,OAAO,CAACC,UAAU;IACnC,MAAMC,UAAU,GAAGJ,GAAG,CAACK,OAAO,CAAC,IAAI,CAAC,CAAC/C,aAAa,CAAC,+BAA+B,CAAC,CAACY,SAAS;IAE7FQ,IAAI,CAACI,GAAG,CAAC,GAAG;MAAEQ,IAAI,EAAEA,IAAI;MAAEE,gBAAgB,EAAES,cAAc;MAAEP,MAAM,EAAEU;IAAW,CAAC;EACpF,CAAC,CAAC;EAEFlB,eAAe,CAACR,IAAI,CAAC;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAM4B,kBAAkB,GAAIC,eAAe,IAAK;EAE5C,IAAIC,iBAAiB,GAAG,KAAK;EAE7B,MAAMZ,SAAS,GAAGrE,QAAQ,CAACsE,cAAc,CAAC,oBAAoB,CAAC;EAC/D,MAAMC,eAAe,GAAGF,SAAS,CAACtC,aAAa,CAAC,wBAAwB,CAAC;EAEzEwC,eAAe,CAACW,SAAS,GAAG,CAAC;EAC7B,MAAMC,YAAY,GAAGZ,eAAe,CAACY,YAAY;EACjD,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,KAAK,EAAEH,YAAY,CAAC;EACjD,IAAII,SAAS,GAAG,IAAI;EAEpB,MAAMC,aAAa,GAACA,CAAA,KAAI;IACpB,MAAMC,WAAW,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;IACrC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;IAC9B,MAAMS,YAAY,GAAGV,YAAY,GAAG,IAAI;IAExC,IAAI,CAACI,SAAS,EAAE;MACZA,SAAS,GAAGE,WAAW;IAC3B;IAEA,MAAMK,QAAQ,GAAG,CAACL,WAAW,GAAGF,SAAS,IAAIK,QAAQ;IACrD,MAAMG,cAAc,GAAGF,YAAY,GAAGC,QAAQ;IAE9CvB,eAAe,CAACW,SAAS,GAAGa,cAAc;IAE1C,IAAID,QAAQ,GAAG,CAAC,EAAE;MACdE,qBAAqB,CAACR,aAAa,CAAC;IACxC;EACJ,CAAC;EAED,IAAIL,YAAY,KAAKc,SAAS,IAAId,YAAY,GAAG,GAAG,EAAE;IAClDd,SAAS,CAACtC,aAAa,CAAC,0BAA0B,CAAC,CAACmE,KAAK,CAACC,OAAO,GAAG,OAAO;IAE3EC,UAAU,CAAC,MAAM;MACbZ,aAAa,CAAC,CAAC;MACf;MACA;MACA;MACA;IACJ,CAAC,EAAE,IAAI,CAAC;IAERjB,eAAe,CAAC8B,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MAC7C,IAAIC,kBAAkB,GAAI/B,eAAe,CAACW,SAAS,GAAGX,eAAe,CAACgC,YAAY,GAAG,EAAE,IAAIhC,eAAe,CAACY,YAAa;MAExH,IAAImB,kBAAkB,IAAI,CAACrB,iBAAiB,EAAE;QAC1CD,eAAe,CAAC,CAAC;QACjBwB,qBAAqB,CAACnC,SAAS,CAAC;QAChCY,iBAAiB,GAAG,IAAI;MAC5B;IACJ,CAAC,CAAC;IAEF,IAAIV,eAAe,CAACgC,YAAY,GAAG,EAAE,IAAIpB,YAAY,EAAE;MACnDiB,UAAU,CAAC,MAAM;QACbpB,eAAe,CAAC,CAAC;QACjBwB,qBAAqB,CAACnC,SAAS,CAAC;MACpC,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC,MAAM;IACH+B,UAAU,CAAC,MAAM;MACbpB,eAAe,CAAC,CAAC;MACjBwB,qBAAqB,CAACnC,SAAS,CAAC;IACpC,CAAC,EAAE,IAAI,CAAC;EACZ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMmC,qBAAqB,GAAInC,SAAS,IAAK;EACzC;EACA;EACAA,SAAS,CAACtC,aAAa,CAAC,0BAA0B,CAAC,CAACmE,KAAK,CAACC,OAAO,GAAG,MAAM;EAC1E9B,SAAS,CAACtC,aAAa,CAAC,wBAAwB,CAAC,CAACmE,KAAK,CAACO,SAAS,GAAG,MAAM;EAC1EzG,QAAQ,CAAC0C,IAAI,CAACwD,KAAK,CAACQ,GAAG,GAAG,GAAG;EAE7B,MAAMC,UAAU,GAAGtC,SAAS,CAACtC,aAAa,CAAC,gBAAgB,CAAC;EAC5D4E,UAAU,CAACC,eAAe,CAAC,UAAU,CAAC;EACtCD,UAAU,CAACE,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;EACtCH,UAAU,CAACE,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;EAC1C3C,uBAAuB,CAAC,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAM4C,gBAAgB,GAAI7D,IAAI,IAAK;EAC/B;EACA,MAAM8D,OAAO,GAAGjH,QAAQ,CAAC+B,aAAa,CAAC,MAAM,CAAC;EAC9CkF,OAAO,CAACC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC;EAEvC,MAAM;IAAEC,UAAU;IAAEC,UAAU;IAAEpC;EAAgB,CAAC,GAAG7B,IAAI;EAExD,IAAIkE,MAAM,CAACC,SAAS,CAACC,gBAAgB,CAAC;IAClCC,YAAY,EAAEL,UAAU;IACxBM,iBAAiB,EAAEL,UAAU;IAC7BM,eAAe,EAAEP,UAAU;IAC3BQ,iBAAiB,EAAE,IAAI;IACvBC,WAAW,EAAE;EACjB,CAAC,EAAE,+BAA+B,CAAC;EAEnC5H,QAAQ,CAAC+B,aAAa,CAAC,gCAAgC,CAAC,CAACsE,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IACtFtB,kBAAkB,CAACC,eAAe,CAAC;EACvC,CAAC,CAAC;AAEN,CAAC;AAED,iEAAegC,gBAAgB;;;;;;;;;;;;;;;ACxJS;;AAExC;AACA;AACA;AACA,iEAAe;EAAEK,MAAM,EAAEL,+CAAgBA;AAAC,CAAC;;;;;;;;;;;;;;ACL3C,MAAM;EAAEa;AAAY,CAAC,GAAGnE,EAAE,CAACoE,MAAM;AACjC,MAAM;EAAErE,QAAQ;EAAEsE;AAAO,CAAC,GAAGrE,EAAE,CAACP,IAAI;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM6E,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,eAAe,EAAEC,gBAAgB,KAAK;EACtE,MAAMC,aAAa,GAAGvE,MAAM,CAACwE,MAAM,CAACH,eAAe,CAAC;EACpD,MAAMI,SAAS,GAAGL,KAAK,CAACM,UAAU;EAClC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,QAAQ;;EAE9B;EACA,MAAMC,qBAAqB,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,KAAK;IAChD,MAAMC,cAAc,GAAGjF,MAAM,CAACC,IAAI,CAACqE,gBAAgB,CAAC;IACpD,MAAMY,WAAW,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAC5C,IAAIC,WAAW,GAAG,KAAK;IAEvB,IAAIJ,cAAc,CAACK,QAAQ,CAACJ,WAAW,CAAC,EAAE;MACtC,MAAMK,sBAAsB,GAAGjB,gBAAgB,CAACY,WAAW,CAAC;MAC5D,IAAIK,sBAAsB,CAACD,QAAQ,CAAClB,KAAK,CAACoB,IAAI,CAAC,EAAE;QAC7CT,IAAI,CAACU,GAAG,CAAC,CAAC;QACVJ,WAAW,GAAG,IAAI;MACtB;IACJ;IACA,MAAMK,MAAM,GAAG;MAAE,GAAGZ;IAAI,CAAC;IACzB,IAAIa,OAAO,GAAGD,MAAM;IACpB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,IAAI,CAACc,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;MACtC,IAAI5F,MAAM,CAAC8F,cAAc,CAACH,OAAO,CAACZ,IAAI,CAACa,CAAC,CAAC,CAAC,CAAC,KAAKG,KAAK,CAACC,SAAS,EAAE;QAC7DL,OAAO,CAACZ,IAAI,CAACa,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGD,OAAO,CAACZ,IAAI,CAACa,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACHD,OAAO,CAACZ,IAAI,CAACa,CAAC,CAAC,CAAC,GAAG;UAAE,GAAGD,OAAO,CAACZ,IAAI,CAACa,CAAC,CAAC;QAAE,CAAC,CAAC,CAAC;MAChD;MACAD,OAAO,GAAGA,OAAO,CAACZ,IAAI,CAACa,CAAC,CAAC,CAAC;IAC9B;IAEA,IAAIP,WAAW,EAAE;MACbM,OAAO,CAACZ,IAAI,CAACA,IAAI,CAACc,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGb,KAAK,CAAC7H,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;IACxE,CAAC,MAAM;MACHwI,OAAO,CAACZ,IAAI,CAACA,IAAI,CAACc,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGb,KAAK;IAC1C;IACA,OAAOU,MAAM;EACjB,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMO,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,aAAa,KAAK;IAEnD,IAAI,IAAI,KAAKA,aAAa,EAAE;MAExB,MAAMC,QAAQ,GAAG,IAAIL,KAAK,CAAC,GAAGG,KAAK,CAAC;MACpC,MAAMG,UAAU,GAAG,IAAIN,KAAK,CAAC,CAAC;MAE9B,IAAIO,gBAAgB,GAAG7B,SAAS;MAChC,IAAI8B,QAAQ,GAAG5B,OAAO;MAEtByB,QAAQ,CAAChI,OAAO,CAACsB,GAAG,IAAI;QACpB2G,UAAU,CAACG,IAAI,CAAC9G,GAAG,CAAC;QACpB6G,QAAQ,IAAI,OAAO7G,GAAG,EAAE;QACxB4G,gBAAgB,GAAGA,gBAAgB,CAAC5G,GAAG,CAAC;MAC5C,CAAC,CAAC;MAEF,MAAM+G,gBAAgB,GAAGH,gBAAgB;MAEzC,IAAIlE,SAAS,KAAKqE,gBAAgB,IAAIA,gBAAgB,CAAC5I,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAClE,IAAI6I,SAAS,GAAGH,QAAQ,CAACpJ,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;QACrD,IAAIiD,gBAAgB,GAAG,EAAE;QAEzB,IAAI,CAAC,UAAU,CAACX,IAAI,CAACgH,gBAAgB,CAAC,EAAE;UACpCrG,gBAAgB,GAAGqG,gBAAgB;QACvC,CAAC,MAAM;UACHrG,gBAAgB,GAAG8D,MAAM,CAAC,sBAAsB,CAAC,CAACyC,mBAAmB,CAAC,SAAS,EAAEF,gBAAgB,EAAEC,SAAS,CAAC;QACjH;QAEAtC,KAAK,CAACM,UAAU,GAAGG,qBAAqB,CAACT,KAAK,CAACM,UAAU,EAAE0B,QAAQ,EAAEhG,gBAAgB,CAAC;MAC1F;IACJ;IAEA,IAAIJ,MAAM,CAAC8F,cAAc,CAACK,aAAa,CAAC,KAAKJ,KAAK,CAACC,SAAS,EAAE;MAC1DY,cAAc,CAACV,KAAK,EAAEC,aAAa,CAAC;IACxC,CAAC,MAAM,IAAInG,MAAM,CAAC8F,cAAc,CAACK,aAAa,CAAC,KAAKnG,MAAM,CAACgG,SAAS,EAAE;MAClEa,SAAS,CAACX,KAAK,EAAEC,aAAa,CAAC;IACnC;EACJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMU,SAAS,GAAGA,CAACX,KAAK,EAAEY,SAAS,KAAK;IACpC9G,MAAM,CAACC,IAAI,CAAC6G,SAAS,CAAC,CAACzH,GAAG,CAACK,GAAG,IAAI;MAC9B,IAAIqH,aAAa,GAAGD,SAAS;MAC7BC,aAAa,GAAGA,aAAa,CAACrH,GAAG,CAAC;MAClC,MAAM0G,QAAQ,GAAG,IAAIL,KAAK,CAAC,GAAGG,KAAK,EAAExG,GAAG,CAAC;MAEzCuG,oBAAoB,CAACG,QAAQ,EAAEW,aAAa,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMH,cAAc,GAAGA,CAACV,KAAK,EAAEc,UAAU,KAAK;IAC1C,MAAMZ,QAAQ,GAAG,IAAIL,KAAK,CAAC,GAAGG,KAAK,CAAC;IACpC,IAAII,gBAAgB,GAAG7B,SAAS;IAEhC2B,QAAQ,CAAChI,OAAO,CAACsB,GAAG,IAAI;MACpB4G,gBAAgB,GAAGA,gBAAgB,CAAC5G,GAAG,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAIM,MAAM,CAAC8F,cAAc,CAACQ,gBAAgB,CAAC,KAAKtG,MAAM,CAACgG,SAAS,EAAE;MAC9Da,SAAS,CAACX,KAAK,EAAEc,UAAU,CAAC,CAAC,CAAC,CAAC;MAC/B;IACJ;IAEAV,gBAAgB,CAAClI,OAAO,CAAC,CAAC6I,CAAC,EAAE1H,KAAK,KAAK;MACnC,MAAM2H,QAAQ,GAAG,IAAInB,KAAK,CAAC,CAAC;MAC5BK,QAAQ,CAAChI,OAAO,CAACsB,GAAG,IAAI;QACpBwH,QAAQ,CAACV,IAAI,CAAC9G,GAAG,CAAC;MACtB,CAAC,CAAC;MAEFwH,QAAQ,CAACV,IAAI,CAACjH,KAAK,CAAC;MACpB0G,oBAAoB,CAACiB,QAAQ,EAAEF,UAAU,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAEDzC,aAAa,CAACnG,OAAO,CAACkB,IAAI,IAAI;IAC1BU,MAAM,CAACC,IAAI,CAACX,IAAI,CAAC,CAAClB,OAAO,CAACsB,GAAG,IAAI;MAC7B,MAAMwG,KAAK,GAAG,IAAIH,KAAK,CAACrG,GAAG,CAAC;MAC5BuG,oBAAoB,CAACC,KAAK,EAAE5G,IAAI,CAACI,GAAG,CAAC,CAAC;IAC1C,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,OAAO0E,KAAK;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+C,qBAAqB,GAAGA,CAAC/C,KAAK,EAAEgD,UAAU,EAAEC,UAAU,KAAK;EAC7D,MAAM;IAAE7B,IAAI,EAAE8B,SAAS;IAAE5C;EAAW,CAAC,GAAGN,KAAK;EAC7C,MAAMmD,kBAAkB,GAAGvH,MAAM,CAACC,IAAI,CAACoH,UAAU,CAACG,mBAAmB,CAAC;EAEtE,IAAIC,SAAS,GAAG;IAAE,GAAG/C;EAAW,CAAC;EACjC,IAAIgD,eAAe,GAAGtD,KAAK;EAC3B,IAAIuD,QAAQ,GAAG,EAAE;EAEjB,IAAIJ,kBAAkB,CAACjC,QAAQ,CAAClB,KAAK,CAACoB,IAAI,CAAC,EAAE;IACzCkC,eAAe,GAAGvD,mBAAmB,CAACC,KAAK,EAAEiD,UAAU,CAAC,qBAAqB,CAAC,CAACjD,KAAK,CAACoB,IAAI,CAAC,EAAE6B,UAAU,CAACO,mBAAmB,CAAC;IAC3HH,SAAS,GAAGC,eAAe,CAAChD,UAAU;EAC1C;EAEAiD,QAAQ,GAAG3D,WAAW,CAACsD,SAAS,EAAEG,SAAS,EAAEL,UAAU,CAAC;EAExD,OAAOO,QAAQ;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,gBAAgB,GAAGA,CAACzD,KAAK,EAAEiD,UAAU,KAAK;EAC5C,IAAID,UAAU,GAAGhD,KAAK,CAAC0D,WAAW,CAACzI,GAAG,CAAC+E,KAAK,IAAI;IAC5C,IAAIA,KAAK,CAACoB,IAAI,EAAE;MACZ,MAAM4B,UAAU,GAAGS,gBAAgB,CAACzD,KAAK,EAAEiD,UAAU,CAAC;MACtD,OAAOD,UAAU;IACrB;EACJ,CAAC,CAAC;EAEF,MAAMO,QAAQ,GAAGR,qBAAqB,CAAC/C,KAAK,EAAEgD,UAAU,EAAEC,UAAU,CAAC;EAErE,OAAOM,QAAQ;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,YAAY,GAAGA,CAAC3D,KAAK,EAAEiD,UAAU,KAAK;EACxC,MAAM;IAAE7B,IAAI,EAAE8B;EAAU,CAAC,GAAGlD,KAAK;EACjC;EACA,IAAIkD,SAAS,EAAE;IACX,IAAIF,UAAU,GAAGhD,KAAK,CAAC0D,WAAW,CAACzI,GAAG,CAAC+E,KAAK,IAAI;MAC5C,IAAIA,KAAK,CAACoB,IAAI,EAAE;QACZ,OAAOqC,gBAAgB,CAACzD,KAAK,EAAEiD,UAAU,CAAC;MAC9C;IACJ,CAAC,CAAC;IACF,MAAMW,WAAW,GAAGb,qBAAqB,CAAC/C,KAAK,EAAEgD,UAAU,EAAEC,UAAU,CAAC;IAExEzH,QAAQ,CAAC,mBAAmB,CAAC,CAACqI,WAAW,CAACD,WAAW,CAAC;EAE1D;AACJ,CAAC;AAED,iEAAeD,YAAY;;;;;;;;;;;;;;;;;AC3Nc;AACU;AACnD;AACA;AACA;AACA;AACA;AACA,MAAMG,aAAa,GAAInM,KAAK,IAAK;EAC7B,MAAM;IAAEoM;EAAS,CAAC,GAAGvI,yDAAQ,CAAC,aAAa,CAAC;EAC5C,MAAM;IAAEwI,UAAU;IAAEC;EAAY,CAAC,GAAGtM,KAAK;;EAEzC;AACJ;AACA;EACI,MAAMuM,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMhJ,IAAI,GAAG,CAAC,CAAC;IACf,MAAMiJ,YAAY,GAAGvI,MAAM,CAACC,IAAI,CAACoI,WAAW,CAAC,CAAC3K,MAAM,CAACgC,GAAG,IAAIA,GAAG,KAAK,SAAS,CAAC;IAE9E6I,YAAY,CAACnK,OAAO,CAACsB,GAAG,IAAI;MACxB,MAAM8I,UAAU,GAAGH,WAAW,CAAC3I,GAAG,CAAC;MACnC,IAAI8I,UAAU,CAAC3K,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC1B,MAAMuC,gBAAgB,GAAG8D,uDAAM,CAAC,sBAAsB,CAAC,CAACyC,mBAAmB,CAACjH,GAAG,EAAE8I,UAAU,CAAC;QAC5FlJ,IAAI,CAACI,GAAG,CAAC,GAAGU,gBAAgB;MAChC;IACJ,CAAC,CAAC;IAEF+H,QAAQ,CAAC7I,IAAI,CAAC;EAClB,CAAC;;EAED;AACJ;AACA;EACI,MAAMmJ,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,eAAe,GAAGL,WAAW,CAACtJ,OAAO;IAE3C,IAAI2J,eAAe,CAAC7C,MAAM,IAAI,CAAC,EAAE;MAC7B;IACJ;IAEA7F,MAAM,CAACwE,MAAM,CAACkE,eAAe,CAAC,CAACtK,OAAO,CAACgG,KAAK,IAAI;MAC5C2D,wDAAY,CAAC3D,KAAK,EAAErI,KAAK,CAACsL,UAAU,CAAC;IACzC,CAAC,CAAC;EACN,CAAC;;EAED;EACAiB,cAAc,CAAC,CAAC;EAChB;EACAG,iBAAiB,CAAC,CAAC;EACnB;EACAL,UAAU,CAAC,CAAC;AAChB,CAAC;AAED,iEAAeF,aAAa;;;;;;;;;;;;;;ACpD5B,MAAM;EAAEtI;AAAS,CAAC,GAAGC,EAAE,CAACP,IAAI;AAE5B,IAAIqJ,YAAY,GAAG,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMxE,mBAAmB,GAAGA,CAACQ,OAAO,EAAEF,SAAS,EAAEmE,UAAU,KAAK;EAE5D,MAAMrE,aAAa,GAAGvE,MAAM,CAACwE,MAAM,CAACoE,UAAU,CAAC;;EAE/C;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMC,kBAAkB,GAAGA,CAAC3C,KAAK,EAAEC,aAAa,KAAK;IAEjD,IAAI,IAAI,KAAKA,aAAa,EAAE;MACxB,MAAMC,QAAQ,GAAG,IAAIL,KAAK,CAAC,GAAGG,KAAK,CAAC;MACpC,MAAMG,UAAU,GAAG,IAAIN,KAAK,CAAC,CAAC;MAE9B,IAAIO,gBAAgB,GAAG7B,SAAS;MAChC,IAAI8B,QAAQ,GAAG5B,OAAO;MAEtByB,QAAQ,CAAChI,OAAO,CAACsB,GAAG,IAAI;QACpB2G,UAAU,CAACG,IAAI,CAAC9G,GAAG,CAAC;QACpB6G,QAAQ,IAAI,OAAO7G,GAAG,EAAE;QACxB4G,gBAAgB,GAAGA,gBAAgB,CAAC5G,GAAG,CAAC;MAC5C,CAAC,CAAC;MAEF,MAAM+G,gBAAgB,GAAGH,gBAAgB;MAEzC,IAAIlE,SAAS,KAAKqE,gBAAgB,IAAIA,gBAAgB,CAAC5I,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAElE,IAAI6I,SAAS,GAAGH,QAAQ,CAACpJ,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;QACrD,IAAI,CAAC,UAAU,CAACsC,IAAI,CAACgH,gBAAgB,CAAC,EAAE;UACpC,OAAO,KAAK;QAChB;QACA7G,QAAQ,CAAC,sBAAsB,CAAC,CAACkJ,iBAAiB,CAACpC,SAAS,EAAED,gBAAgB,EAAEkC,YAAY,CAAC;QAC7FA,YAAY,EAAE;MAClB;IACJ;IAEA,IAAI3I,MAAM,CAAC8F,cAAc,CAACK,aAAa,CAAC,KAAKJ,KAAK,CAACC,SAAS,EAAE;MAC1DY,cAAc,CAACV,KAAK,EAAEC,aAAa,CAAC;IACxC,CAAC,MAAM,IAAInG,MAAM,CAAC8F,cAAc,CAACK,aAAa,CAAC,KAAKnG,MAAM,CAACgG,SAAS,EAAE;MAClEa,SAAS,CAACX,KAAK,EAAEC,aAAa,CAAC;IACnC;EACJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMU,SAAS,GAAGA,CAACX,KAAK,EAAEY,SAAS,KAAK;IACpC9G,MAAM,CAACC,IAAI,CAAC6G,SAAS,CAAC,CAACzH,GAAG,CAACK,GAAG,IAAI;MAC9B,IAAIqH,aAAa,GAAGD,SAAS;MAC7BC,aAAa,GAAGA,aAAa,CAACrH,GAAG,CAAC;MAClC,MAAM0G,QAAQ,GAAG,IAAIL,KAAK,CAAC,GAAGG,KAAK,EAAExG,GAAG,CAAC;MAEzCmJ,kBAAkB,CAACzC,QAAQ,EAAEW,aAAa,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMH,cAAc,GAAGA,CAACV,KAAK,EAAEc,UAAU,KAAK;IAC1C,MAAMZ,QAAQ,GAAG,IAAIL,KAAK,CAAC,GAAGG,KAAK,CAAC;IACpC,IAAII,gBAAgB,GAAG7B,SAAS;IAEhC2B,QAAQ,CAAChI,OAAO,CAACsB,GAAG,IAAI;MACpB4G,gBAAgB,GAAGA,gBAAgB,CAAC5G,GAAG,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAIM,MAAM,CAAC8F,cAAc,CAACQ,gBAAgB,CAAC,KAAKtG,MAAM,CAACgG,SAAS,EAAE;MAC9Da,SAAS,CAACX,KAAK,EAAEc,UAAU,CAAC,CAAC,CAAC,CAAC;MAC/B;IACJ;IAEAV,gBAAgB,CAAClI,OAAO,CAAC,CAAC6I,CAAC,EAAE1H,KAAK,KAAK;MACnC,MAAM2H,QAAQ,GAAG,IAAInB,KAAK,CAAC,CAAC;MAC5BK,QAAQ,CAAChI,OAAO,CAACsB,GAAG,IAAI;QACpBwH,QAAQ,CAACV,IAAI,CAAC9G,GAAG,CAAC;MACtB,CAAC,CAAC;MAEFwH,QAAQ,CAACV,IAAI,CAACjH,KAAK,CAAC;MACpBsJ,kBAAkB,CAAC3B,QAAQ,EAAEF,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAEDzC,aAAa,CAACnG,OAAO,CAACkB,IAAI,IAAI;IAC1BU,MAAM,CAACC,IAAI,CAACX,IAAI,CAAC,CAAClB,OAAO,CAACsB,GAAG,IAAI;MAC7B,MAAMwG,KAAK,GAAG,IAAIH,KAAK,CAACrG,GAAG,CAAC;MAC5BmJ,kBAAkB,CAAC3C,KAAK,EAAE5G,IAAI,CAACI,GAAG,CAAC,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMqJ,kBAAkB,GAAGA,CAAC3E,KAAK,EAAEiD,UAAU,KAAK;EAC9C,MAAME,kBAAkB,GAAGvH,MAAM,CAACC,IAAI,CAACoH,UAAU,CAACG,mBAAmB,CAAC;EAEtE,IAAI,CAACD,kBAAkB,CAACjC,QAAQ,CAAClB,KAAK,CAACoB,IAAI,CAAC,EAAE;IAC1C;EACJ;EAEArB,mBAAmB,CAACC,KAAK,CAACQ,QAAQ,EAAER,KAAK,CAACM,UAAU,EAAE2C,UAAU,CAAC,qBAAqB,CAAC,CAACjD,KAAK,CAACoB,IAAI,CAAC,CAAC;AACxG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMwD,2BAA2B,GAAGA,CAAC/E,MAAM,EAAEoD,UAAU,KAAK;EACxDpD,MAAM,CAAC7F,OAAO,CAACgG,KAAK,IAAI;IACpB2E,kBAAkB,CAAC3E,KAAK,EAAEiD,UAAU,CAAC;IACrC,IAAIjD,KAAK,CAAC0D,WAAW,EAAE;MACnBkB,2BAA2B,CAAC5E,KAAK,CAAC0D,WAAW,EAAET,UAAU,CAAC;IAC9D;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAM4B,qBAAqB,GAAGA,CAACC,UAAU,EAAE7B,UAAU,KAAK;EACtDrH,MAAM,CAACwE,MAAM,CAAC0E,UAAU,CAAC,CAAC9K,OAAO,CAACgG,KAAK,IAAI;IACvC2E,kBAAkB,CAAC3E,KAAK,EAAEiD,UAAU,CAAC;IACrC,IAAIjD,KAAK,CAAC0D,WAAW,EAAE;MACnBkB,2BAA2B,CAAC5E,KAAK,CAAC0D,WAAW,EAAET,UAAU,CAAC;IAC9D;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMvH,eAAe,GAAGA,CAACsE,KAAK,EAAEiD,UAAU,KAAK;EAC3CrH,MAAM,CAACC,IAAI,CAACmE,KAAK,CAAC,CAAChG,OAAO,CAACsB,GAAG,IAAI;IAC9B,IAAIA,GAAG,KAAK,SAAS,EAAE;MACnBuJ,qBAAqB,CAAC7E,KAAK,CAAC1E,GAAG,CAAC,EAAE2H,UAAU,CAAC;IACjD,CAAC,MAAM;MACH,MAAMlH,MAAM,GAAG,GAAGT,GAAG,YAAY;MACjCE,QAAQ,CAAC,sBAAsB,CAAC,CAACO,MAAM,CAAC,CAACiE,KAAK,CAAC1E,GAAG,CAAC,CAAC;IACxD;EACJ,CAAC,CAAC;AACN,CAAC;AAED,iEAAeI,eAAe;;;;;;;;;;;;;;;;;;AC3K2B;AACG;AACM;AAClE,MAAM;EAAEuJ;AAAM,CAAC,GAAGxJ,EAAE,CAACoE,MAAM;AAC3B,MAAM;EAAEC;AAAO,CAAC,GAAGrE,EAAE,CAACP,IAAI;AAE1B,MAAMgK,SAAS,GAAIvN,KAAK,IAAK;EACzB,MAAM,CAACqE,gBAAgB,EAAEmJ,mBAAmB,CAAC,GAAGH,4DAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM/B,UAAU,GAAGtL,KAAK,CAACsL,UAAU;EACnC,MAAMmC,MAAM,GAAGC,gBAAgB,CAACC,QAAQ;;EAExC;AACJ;AACA;EACI,MAAMC,WAAW,GAAG;IAChBC,MAAM,EAAEC,QAAQ,CAAC9N,KAAK,CAAC6N,MAAM,CAAC;IAC9BE,UAAU,EAAEL,gBAAgB,CAACM,UAAU;IACvC5J,MAAM,EAAEsJ,gBAAgB,CAACO;EAC7B,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACIb,6DAAS,CAAC,MAAM;IACZc,KAAK,CAACT,MAAM,EAAE;MACVU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDtL,IAAI,EAAE,IAAIuL,eAAe,CAACT,WAAW;IACzC,CAAC,CAAC,CACGU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC/K,IAAI,IAAI;MAEV,MAAMkL,SAAS,GAAGlL,IAAI,CAACA,IAAI;MAE3B,IAAIkL,SAAS,CAACzL,OAAO,CAAClB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACjC2M,SAAS,CAACzL,OAAO,GAAGsK,KAAK,CAACmB,SAAS,CAACzL,OAAO,CAAC;MAChD;MACAhD,KAAK,CAAC0O,WAAW,CAACD,SAAS,CAAC;MAC5B1K,wEAAe,CAAC0K,SAAS,EAAEnD,UAAU,CAAC;MAEtC,MAAMqD,gBAAgB,GAAGxG,MAAM,CAAC,sBAAsB,CAAC,CAACyG,mBAAmB,CAAC,CAAC;MAC7EpB,mBAAmB,CAACmB,gBAAgB,CAAC;MACrC3O,KAAK,CAACqE,gBAAgB,CAACsK,gBAAgB,CAAC;IAC5C,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACV,CAAC,EAAE,CAAC9O,KAAK,CAACgP,QAAQ,CAAC,CAAC;EACpB,IAAIC,GAAG,GAAG,CAAC;EAEX,oBACI7L,KAAA,CAAA/C,aAAA,CAAA+C,KAAA,CAAAC,QAAA,QACKgB,gBAAgB,CAACf,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IACnC,OACI6C,SAAS,KAAK9C,IAAI,CAACgB,MAAM,IAAIhB,IAAI,CAACgB,MAAM,CAACzC,IAAI,CAAC,CAAC,KAAK,EAAE,iBACtDsB,KAAA,CAAA/C,aAAA,CAAA+C,KAAA,CAAAC,QAAA,qBACID,KAAA,CAAA/C,aAAA;MAAIsD,GAAG,EAAEH;IAAM,gBACXJ,KAAA,CAAA/C,aAAA,aAAK4O,GAAG,EAAO,CAAC,eAChB7L,KAAA,CAAA/C,aAAA;MAAI,eAAY;IAAa,GAAEkD,IAAI,CAACgB,MAAW,CAAC,eAChDnB,KAAA,CAAA/C,aAAA;MAAI6O,KAAK,EAAC,WAAW;MAAC,YAAU3L,IAAI,CAAC4L,EAAG;MAAC,oBAAkB5L,IAAI,CAACY;IAAK,gBACjEf,KAAA,CAAA/C,aAAA,CAACN,sEAAmB;MAACkD,OAAO,EAAEjD,KAAK,CAACiD,OAAQ;MAACD,OAAO,EAAEO,IAAI,CAACgB;IAAO,CAAE,CACpE,CACJ,CACN,CAAC;EAEX,CAAC,CACH,CAAC;AAEX,CAAC;AAED,iEAAegJ,SAAS;;;;;;;;;;;;;;;;;;;;AC1Ec;AAE/B,MAAM8B,eAAe,GAAI9L,IAAI,IAAK;EACrC,OAAO;IACHY,IAAI,EAAEiL,8CAAe,CAACE,WAAW;IACjCC,IAAI,EAAEhM;EACV,CAAC;AACL,CAAC;AAEM,MAAMiM,kBAAkB,GAAIjM,IAAI,IAAK;EACxC,OAAO;IACHY,IAAI,EAAEiL,8CAAe,CAACK,cAAc;IACpCF,IAAI,EAAEhM;EACV,CAAC;AACL,CAAC;AAEM,MAAMmM,iBAAiB,GAAInM,IAAI,IAAK;EACvC,OAAO;IACHY,IAAI,EAAEiL,8CAAe,CAACO,aAAa;IACnCJ,IAAI,EAAEhM;EACV,CAAC;AACL,CAAC;AAEM,MAAMqM,oBAAoB,GAAIrM,IAAI,IAAK;EAC1C,OAAO;IACHY,IAAI,EAAEiL,8CAAe,CAACS,gBAAgB;IACtCN,IAAI,EAAEhM;EACV,CAAC;AACL,CAAC;AAEM,MAAMwJ,iBAAiB,GAAGA,CAACoC,EAAE,EAAE5L,IAAI,EAAEC,KAAK,KAAK;EAClD,OAAO;IACHW,IAAI,EAAEiL,8CAAe,CAACU,aAAa;IACnCP,IAAI,EAAEhM,IAAI;IACV4L,EAAE,EAAEA,EAAE;IACN3L,KAAK,EAAEA;EACX,CAAC;AACL,CAAC;AAEM,MAAMc,oBAAoB,GAAGA,CAAC6K,EAAE,EAAE5L,IAAI,EAAEgB,MAAM,KAAK;EACtD,OAAO;IACHJ,IAAI,EAAEiL,8CAAe,CAACW,gBAAgB;IACtCR,IAAI,EAAEhM,IAAI;IACV4L,EAAE,EAAEA,EAAE;IACN5K,MAAM,EAAEA;EACZ,CAAC;AACL,CAAC;;;;;;;;;;;;;;AC9C+B;AACK;AACI;AAEzC,MAAM;EAAE4L,gBAAgB;EAAEC;AAAS,CAAC,GAAGtM,EAAE,CAACP,IAAI;AAE9C,MAAM8M,KAAK,GAAGF,gBAAgB,CAAC,sBAAsB,EAAE;EACnDH,OAAO;EACPC,OAAO;EACPC,SAASA,yCAAAA;AACb,CAAC,CAAC;AAEFE,QAAQ,CAACC,KAAK,CAAC;;;;;;;;;;;;;;;ACZuB;AAEtC,MAAMC,qBAAqB,GAAG;EAC1BC,KAAK,EAAE,CAAC,CAAC;EACTC,OAAO,EAAE,CAAC,CAAC;EACXxN,OAAO,EAAE;AACb,CAAC;AAED,MAAMgN,OAAO,GAAGA,CAACS,KAAK,GAAGH,qBAAqB,EAAElM,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACD,IAAI;IACf,KAAKiL,8CAAe,CAACE,WAAW;MAC5B,OAAO;QAAE,GAAGmB,KAAK;QAAEF,KAAK,EAAE;UAAE,GAAGE,KAAK,CAACF,KAAK;UAAEhM,MAAM,EAAEH,MAAM,CAACmL;QAAK;MAAE,CAAC;IACvE,KAAKH,8CAAe,CAACK,cAAc;MAC/B,OAAO;QAAE,GAAGgB,KAAK;QAAEF,KAAK,EAAE;UAAE,GAAGE,KAAK,CAACF,KAAK;UAAEG,MAAM,EAAEtM,MAAM,CAACmL;QAAK;MAAE,CAAC;IACvE,KAAKH,8CAAe,CAACO,aAAa;MAC9B,OAAO;QAAE,GAAGc,KAAK;QAAED,OAAO,EAAE;UAAE,GAAGC,KAAK,CAACD,OAAO;UAAEE,MAAM,EAAEtM,MAAM,CAACmL;QAAK;MAAE,CAAC;IAC3E,KAAKH,8CAAe,CAACS,gBAAgB;MACjC,OAAO;QAAE,GAAGY,KAAK;QAAED,OAAO,EAAE;UAAE,GAAGC,KAAK,CAACD,OAAO;UAAEE,MAAM,EAAEtM,MAAM,CAACmL;QAAK;MAAE,CAAC;IAC3E,KAAKH,8CAAe,CAACU,aAAa;MAC9B,OAAO;QAAE,GAAGW,KAAK;QAAEzN,OAAO,EAAE;UAAE,GAAGyN,KAAK,CAACzN,OAAO;UAAE,CAACoB,MAAM,CAAC+K,EAAE,GAAG;YAAE,IAAIsB,KAAK,CAACzN,OAAO,CAACoB,MAAM,CAAC+K,EAAE,CAAC,IAAI,EAAE,CAAC;YAAE5K,MAAM,EAAEH,MAAM,CAACmL,IAAI;YAAE/L,KAAK,EAAEY,MAAM,CAACZ;UAAM;QAAE;MAAE,CAAC;IACtJ,KAAK4L,8CAAe,CAACW,gBAAgB;MACjC,IAAIU,KAAK,CAACzN,OAAO,CAACoB,MAAM,CAAC+K,EAAE,CAAC,CAAC5K,MAAM,KAAKH,MAAM,CAACG,MAAM,EAAE;QACnD,OAAO;UAAE,GAAGkM,KAAK;UAAEzN,OAAO,EAAE;YAAE,GAAGyN,KAAK,CAACzN,OAAO;YAAE,CAACoB,MAAM,CAAC+K,EAAE,GAAG;cAAE,IAAIsB,KAAK,CAACzN,OAAO,CAACoB,MAAM,CAAC+K,EAAE,CAAC,IAAI,EAAE,CAAC;cAAEuB,MAAM,EAAEtM,MAAM,CAACmL;YAAK;UAAE;QAAE,CAAC;MACjI;MACA,OAAOkB,KAAK;IAChB;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,iEAAeT,OAAO;;;;;;;;;;;;;;;AC9Bf,MAAMpB,mBAAmB,GAAI6B,KAAK,IAAK;EAC1C,MAAME,cAAc,GAAG,IAAI3G,KAAK,CAAD,CAAC;EAEhC2G,cAAc,CAAClG,IAAI,CAAC;IAAE0E,EAAE,EAAE,OAAO;IAAE5K,MAAM,EAAEkM,KAAK,CAACF,KAAK,CAAChM,MAAM;IAAEJ,IAAI,EAAE,OAAO;IAAEuM,MAAM,EAAGD,KAAK,CAACF,KAAK,CAACG,MAAM,IAAI;EAAI,CAAC,CAAC;EACnHC,cAAc,CAAClG,IAAI,CAAC;IAAE0E,EAAE,EAAE,SAAS;IAAE5K,MAAM,EAAEkM,KAAK,CAACD,OAAO,CAACjM,MAAM;IAAEJ,IAAI,EAAE,SAAS;IAAEuM,MAAM,EAAGD,KAAK,CAACD,OAAO,CAACE,MAAM,IAAI;EAAI,CAAC,CAAC;EAE3HzM,MAAM,CAACC,IAAI,CAACuM,KAAK,CAACzN,OAAO,CAAC,CAACM,GAAG,CAACK,GAAG,IAAI;IAClC,MAAMiN,QAAQ,GAAGH,KAAK,CAACzN,OAAO,CAACW,GAAG,CAAC,CAACH,KAAK,GAAG,CAAC;IAC7CmN,cAAc,CAACC,QAAQ,CAAC,GAAG;MAAEzM,IAAI,EAAE,SAAS;MAAEgL,EAAE,EAAExL,GAAG;MAAEY,MAAM,EAAEkM,KAAK,CAACzN,OAAO,CAACW,GAAG,CAAC,CAACY,MAAM;MAAEmM,MAAM,EAAGD,KAAK,CAACzN,OAAO,CAACW,GAAG,CAAC,CAAC+M,MAAM,IAAI;IAAI,CAAC;EACzI,CAAC,CAAC;EAEF,OAAOC,cAAc;AACzB,CAAC;AAEM,MAAM/F,mBAAmB,GAAGA,CAAC6F,KAAK,EAAEtM,IAAI,EAAEI,MAAM,EAAE4K,EAAE,GAAG,IAAI,KAAK;EACnE,IAAIhL,IAAI,KAAK,SAAS,IAAIsM,KAAK,CAACtM,IAAI,CAAC,CAACI,MAAM,KAAKA,MAAM,EAAE;IACrD,OAAOkM,KAAK,CAACtM,IAAI,CAAC,CAACuM,MAAM;EAC7B,CAAC,MAAM,IAAID,KAAK,CAACtM,IAAI,CAAC,IAAIsM,KAAK,CAACtM,IAAI,CAAC,CAACgL,EAAE,CAAC,IAAIsB,KAAK,CAACtM,IAAI,CAAC,CAACgL,EAAE,CAAC,CAAC5K,MAAM,KAAKA,MAAM,EAAE;IAC5E,OAAO8B,SAAS,KAAKoK,KAAK,CAACtM,IAAI,CAAC,CAACgL,EAAE,CAAC,CAACuB,MAAM,GAAGD,KAAK,CAACtM,IAAI,CAAC,CAACgL,EAAE,CAAC,CAACuB,MAAM,GAAGD,KAAK,CAACtM,IAAI,CAAC,CAACgL,EAAE,CAAC,CAAC5K,MAAM;EACjG;EACA,OAAOA,MAAM;AACjB,CAAC;;;;;;;;;;;;;;ACrBD,MAAM6K,eAAe,GAAG;EACpBE,WAAW,EAAE,mBAAmB;EAChCG,cAAc,EAAE,sBAAsB;EACtCE,aAAa,EAAE,qBAAqB;EACpCE,gBAAgB,EAAE,wBAAwB;EAC1CC,aAAa,EAAE,qBAAqB;EACpCC,gBAAgB,EAAE;AACtB,CAAC;AAED,iEAAeX,eAAe;;;;;;;;;;;;;;;;;;;ACTG;AACwB;AACT;AAChD,MAAM;EAAE2B;AAAG,CAAC,GAAGjN,EAAE,CAACkN,IAAI;AAEtB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9D,4DAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+D,SAAS,EAAEC,YAAY,CAAC,GAAGhE,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC/B,UAAU,EAAEgG,aAAa,CAAC,GAAGjE,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkE,WAAW,EAAEC,cAAc,CAAC,GAAGnE,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACoE,iBAAiB,EAAEC,oBAAoB,CAAC,GAACrE,4DAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMI,MAAM,GAAGC,gBAAgB,CAACC,QAAQ;EACxC,MAAMgE,SAAS,GAACjE,gBAAgB,CAACkE,QAAQ,GAAG,gBAAgB;EAC5D;AACJ;AACA;EACI,MAAMhE,WAAW,GAAG;IAChBG,UAAU,EAAEL,gBAAgB,CAACM,UAAU;IACvC5J,MAAM,EAAEsJ,gBAAgB,CAACmE;EAC7B,CAAC;;EAGD;AACJ;AACA;AACA;EACI,MAAMC,WAAW,GAAIrB,KAAK,IAAK;IAC3BU,cAAc,CAACV,KAAK,CAAC;EACzB,CAAC;EAEDrD,6DAAS,CAAC,MAAI;IACV,MAAM2E,YAAY,GAAC3R,QAAQ,CAAC+B,aAAa,CAAC,6DAA6D,CAAC;IAExG4P,YAAY,CAACtL,gBAAgB,CAAC,OAAO,EAAC,MAAI;MACtCiL,oBAAoB,CAACM,IAAI,IAAE,CAACA,IAAI,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;;EAEL;AACJ;AACA;AACA;EACI5E,6DAAS,CAAC,MAAM;IACZ,IAAInJ,MAAM,CAACC,IAAI,CAACoH,UAAU,CAAC,CAACxB,MAAM,GAAG,CAAC,IAAI,CAACoH,WAAW,EAAE;MACpD;IACJ;IAEAhD,KAAK,CAACT,MAAM,EAAE;MACVU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDtL,IAAI,EAAE,IAAIuL,eAAe,CAACT,WAAW;IACzC,CAAC,CAAC,CACGU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC/K,IAAI,IAAI;MACV,MAAM+H,UAAU,GAAG2G,IAAI,CAAC3E,KAAK,CAAC/J,IAAI,CAACA,IAAI,CAAC+H,UAAU,CAAC;MAEnDgG,aAAa,CAAChG,UAAU,CAAC;IAC7B,CAAC,CAAC,CACDuD,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACV,CAAC,EAAE,CAACoC,WAAW,CAAC,CAAC;;EAEjB;AACJ;AACA;AACA;EACI9D,6DAAS,CAAC,MAAM;IAEZ,IAAInJ,MAAM,CAACC,IAAI,CAACoH,UAAU,CAAC,CAACxB,MAAM,IAAI,CAAC,EAAE;MACrC;IACJ;IAEA,MAAMoI,SAAS,GAAG,IAAI7D,eAAe,CAAC8D,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,GAAG,GAAGlB,SAAS;IACrB,MAAMnO,OAAO,GAAGqP,GAAG,CAACvN,OAAO,IAAIuN,GAAG,CAACvN,OAAO,CAAC9B,OAAO;IAClD,MAAMsP,YAAY,GAAGD,GAAG,CAACvN,OAAO,IAAIuN,GAAG,CAACvN,OAAO,CAACwN,YAAY;IAC5D,MAAMhL,UAAU,GAAGmG,gBAAgB,CAAC8E,WAAW;IAC/C,MAAMhL,UAAU,GAAG0K,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC;IAC5C,MAAM5E,MAAM,GAAGqE,SAAS,CAACO,GAAG,CAAC,WAAW,CAAC;IAEzC,MAAMC,SAAS,GAAGtS,QAAQ,CAACsE,cAAc,CAAC,oBAAoB,CAAC;IAE/D,IAAIwM,WAAW,IAAIjN,MAAM,CAACC,IAAI,CAACoH,UAAU,CAAC,CAACxB,MAAM,GAAG,CAAC,EAAE;MACnD+G,uDAAe,eAACzN,KAAA,CAAA/C,aAAA,CAACyQ,yDAAc;QAC3BxF,UAAU,EAAEA,UAAW;QACvBsH,UAAU,EAAE1B,WAAY;QACxBY,WAAW,EAAEA,WAAY;QACzBjE,MAAM,EAAEA,MAAO;QACf5K,OAAO,EAAEA,OAAQ;QACjBsP,YAAY,EAAEA,YAAa;QAC3BhL,UAAU,EAAEA,UAAW;QACvBC,UAAU,EAAEA,UAAW;QACvB+J,WAAW,EAAEA;MAAY,CAC5B,CAAC,EAAEmB,SAAS,CAAC;MACdhB,oBAAoB,CAACM,IAAI,IAAE,CAACA,IAAI,CAAC;IACrC;EACJ,CAAC,EAAE,CAACd,WAAW,EAAE5F,UAAU,CAAC,CAAC;;EAE7B;AACJ;AACA;AACA;AACA;EACI,MAAMuH,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAIC,aAAa,GAAC,CAACD,CAAC,CAACpC,MAAM,CAACzJ,SAAS,CAAC+L,QAAQ,CAAC,kBAAkB,CAAC,GAAGF,CAAC,CAACpC,MAAM,CAACxL,OAAO,CAAC,mBAAmB,CAAC,GAAG4N,CAAC,CAACpC,MAAM;IACrHc,cAAc,CAACQ,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAChCX,YAAY,CAAC0B,aAAa,CAAC;IAC3B5B,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACI/N,KAAA,CAAA/C,aAAA,CAAA+C,KAAA,CAAAC,QAAA,QACKoO,iBAAiB,iBACdrO,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC,iBAAiB;IAAC0C,KAAK,EAAE;MAACC,OAAO,EAAEkL,iBAAiB,GAAG,OAAO,GAAG;IAAM;EAAE,gBACxFrO,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAA6B,gBACxCR,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAc,gBAC7BR,KAAA,CAAA/C,aAAA,aAAK0Q,EAAE,CAAC,6CAA6C,EAAE,oCAAoC,CAAM,CAAC,eAClG3N,KAAA,CAAA/C,aAAA;IAAMuD,SAAS,EAAC,OAAO;IAACqP,OAAO,EAAEA,CAAA,KAAIvB,oBAAoB,CAAC,KAAK;EAAE,GAAC,MAAa,CAC1E,CAAC,eACNtO,KAAA,CAAA/C,aAAA,WAAK,CAAC,eACN+C,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC,cAAc;IAAC0C,KAAK,EAAE;MAAE4M,YAAY,EAAE,MAAM;MAAE3M,OAAO,EAAE;IAAe;EAAE,GAAEwK,EAAE,CAAC,8CAA8C,EAAE,oCAAoC,CAAU,CAAC,eAC9L3N,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAY,gBACvBR,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC,kDAAkD;IAAC,gBAAa,QAAQ;IAAC,sBAAmB,kBAAkB;IAACqP,OAAO,EAAEJ;EAAa,GAAE9B,EAAE,CAAC,yBAAyB,EAAE,oCAAoC,CAAU,CAAC,eACtO3N,KAAA,CAAA/C,aAAA;IAAMuD,SAAS,EAAC;EAAyB,GAAC,SAAE,EAACmN,EAAE,CAAC,WAAW,EAAE,oCAAoC,CAAQ,CAAC,eAC1G3N,KAAA,CAAA/C,aAAA,WAAK,CAAC,eAAA+C,KAAA,CAAA/C,aAAA;IAAG8S,IAAI,EAAC,+BAA+B;IAACzC,MAAM,EAAC;EAAQ,gBAACtN,KAAA,CAAA/C,aAAA;IAAKiG,KAAK,EAAE;MAAE8M,SAAS,EAAE;IAAM,CAAE;IAACC,GAAG,EAAE,GAAG1B,SAAS,uBAAwB;IAAC2B,GAAG,EAAEvC,EAAE,CAAC,oCAAoC,EAAE,oCAAoC;EAAE,CAAM,CAAI,CACvO,CAAC,eACN3N,KAAA,CAAA/C,aAAA,WAAK,CAAC,eACP+C,KAAA,CAAA/C,aAAA;IAAIiG,KAAK,EAAE;MAAEiN,MAAM,EAAE;IAAI;EAAE,gBACtBnQ,KAAA,CAAA/C,aAAA,0BAAI+C,KAAA,CAAA/C,aAAA;IAAMiG,KAAK,EAAE;MAAEkN,KAAK,EAAE;IAAQ;EAAE,GAAC,QAAO,CAAC,KAAC,EAACzC,EAAE,CAAC,8CAA8C,EAAE,oCAAoC,CAAM,CAAC,eAC7I3N,KAAA,CAAA/C,aAAA,0BAAI+C,KAAA,CAAA/C,aAAA;IAAMiG,KAAK,EAAE;MAAEkN,KAAK,EAAE;IAAQ;EAAE,GAAC,QAAO,CAAC,KAAC,EAACzC,EAAE,CAAC,0CAA0C,EAAE,oCAAoC,CAAM,CAAC,eACzI3N,KAAA,CAAA/C,aAAA,0BAAI+C,KAAA,CAAA/C,aAAA;IAAMiG,KAAK,EAAE;MAAEkN,KAAK,EAAE;IAAQ;EAAE,GAAC,QAAO,CAAC,KAAC,EAACzC,EAAE,CAAC,6BAA6B,EAAE,oCAAoC,CAAC,EAAC,KAAG,eAAA3N,KAAA,CAAA/C,aAAA;IAAG8S,IAAI,EAAC,oEAAoE;IAACzC,MAAM,EAAC;EAAQ,GAAEK,EAAE,CAAC,yBAAyB,EAAE,oCAAoC,CAAK,CAAK,CACpS,CAAC,eACL3N,KAAA,CAAA/C,aAAA,WAAI,CAAC,eACL+C,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAc,gBAC7BR,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC,oBAAoB;IAACqP,OAAO,EAAEA,CAAA,KAAIvB,oBAAoB,CAAC,KAAK;EAAE,GAAEX,EAAE,CAAC,OAAO,EAAE,oCAAoC,CAAU,CACvI,CACJ,CACA,CAEX,CAAC;AAEX,CAAC;AAED,iEAAeE,UAAU;;;;;;;;;;;;;;;;;;;AClJQ;AACK;AACG;AACzC,MAAM;EAAEF;AAAG,CAAC,GAAGjN,EAAE,CAACkN,IAAI;AAEtB,MAAM0C,eAAe,GAAI1T,KAAK,IAAK;EAE/B,MAAM;IAAEiD,OAAO,EAAEA,OAAO;IAAEsP,YAAY,EAAEA;EAAa,CAAC,GAAGvS,KAAK;EAC9D,MAAM,CAAC2T,mBAAmB,EAAEC,sBAAsB,CAAC,GAACvG,+CAAQ,CAAC,CAAC,CAAC;;EAE/D;AACJ;AACA;AACA;EACI,MAAMwG,iBAAiB,GAAI7Q,OAAO,IAAK;IACnChD,KAAK,CAAC6T,iBAAiB,CAAC7Q,OAAO,CAAC;EACpC,CAAC;EAED,MAAM8Q,sBAAsB,GAAEC,OAAO,IAAG;IACpC,IAAI/Q,OAAO,GAAC,EAAE;IACd+Q,OAAO,CAAC1R,OAAO,CAAC2R,MAAM,IAAE;MACpB,IAAG3N,SAAS,KAAK2N,MAAM,CAACzP,MAAM,IAAIyP,MAAM,CAACzP,MAAM,CAACzC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;QAC1DkB,OAAO,IAAI,GAAG,GAACgR,MAAM,CAACzP,MAAM;MAChC;MAAC;IACL,CAAC,CAAC;IAEF,MAAM0P,SAAS,GAAGjR,OAAO,CAAClB,IAAI,CAAC,CAAC,CAACJ,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAACuS,IAAI,IAAI,UAAU,CAACxQ,IAAI,CAACwQ,IAAI,CAAC,CAAC,CAACpK,MAAM;IAC1F8J,sBAAsB,CAACK,SAAS,CAAC;EACrC,CAAC;EAED,oBACI7Q,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAY,gBACvBR,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAyB,GAAEmN,EAAE,CAAC,0CAA0C,EAAE,oCAAoC,CAAC,eAAC3N,KAAA,CAAA/C,aAAA,WAAK,CAAC,EAAC0Q,EAAE,CAAC,wDAAwD,EAAE,oCAAoC,CAAC,eAAC3N,KAAA,CAAA/C,aAAA,WAAK,CAAC,eAAA+C,KAAA,CAAA/C,aAAA,WAAK,CAAC,EAAC0Q,EAAE,CAAC,oFAAoF,EAAE,oCAAoC,CAAO,CAAC,eAC3X3N,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAE,qBAAqBX,OAAO;EAAG,gBAC3CG,KAAA,CAAA/C,aAAA;IAAI6O,KAAK,EAAC;EAAa,GAAE6B,EAAE,CAAC,iBAAiB,EAAE,oCAAoC,CAAC,EAAC,GAAC,eAAA3N,KAAA,CAAA/C,aAAA;IAAM6O,KAAK,EAAC;EAAwC,CAAO,CAAK,CAAC,eACvJ9L,KAAA,CAAA/C,aAAA;IAAK8O,EAAE,EAAC;EAA+B,CAAM,CAC5C,CAAC,eAEN/L,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAuB,gBAClCR,KAAA,CAAA/C,aAAA;IAAOuD,SAAS,EAAC,YAAY;IAACuL,EAAE,EAAC;EAAgB,gBAC7C/L,KAAA,CAAA/C,aAAA,6BACI+C,KAAA,CAAA/C,aAAA,0BACI+C,KAAA,CAAA/C,aAAA;IAAIuD,SAAS,EAAC;EAAa,GAAEmN,EAAE,CAAC,MAAM,EAAE,oCAAoC,CAAM,CAAC,eACnF3N,KAAA,CAAA/C,aAAA;IAAIuD,SAAS,EAAC;EAAa,GAAEmN,EAAE,CAAC,aAAa,EAAE,oCAAoC,CAAM,CAAC,eAC1F3N,KAAA,CAAA/C,aAAA;IAAIuD,SAAS,EAAC;EAAa,GAAEmN,EAAE,CAAC,aAAa,EAAE,oCAAoC,CAAM,CACzF,CACD,CAAC,eACR3N,KAAA,CAAA/C,aAAA,6BACI+C,KAAA,CAAA/C,aAAA,CAACkN,mDAAS,EAAA4G,QAAA;IAAC7I,UAAU,EAAEtL,KAAK,CAACsL,UAAW;IAACoD,WAAW,EAAEmF;EAAkB,GAAK7T,KAAK;IAAEqE,gBAAgB,EAAEyP;EAAuB,EAAC,CAC3H,CACJ,CACN,CAAC,eACN1Q,KAAA,CAAA/C,aAAA,CAACoT,+CAAiB;IAAC7P,SAAS,EAAC;EAAmB,GAAEmN,EAAE,CAAC,2BAA2B,EAAE,oCAAoC,CAAC,EAAC,GAAC,EAAC4C,mBAAuC,CAChK,CAAC;AAEd,CAAC;AAED,iEAAeD,eAAe;;;;;;;;;;;;;;;ACzDgC;AAC9D,MAAM;EAAE3C;AAAG,CAAC,GAAGjN,EAAE,CAACkN,IAAI;AAEtB,MAAMoD,iBAAiB,GAAIpU,KAAK,IAAK;EAEjC;AACJ;AACA;EACI,MAAMqU,UAAU,GAAGA,CAAA,KAAM;IACrBrU,KAAK,CAACsU,kBAAkB,CAAC,KAAK,CAAC;EACnC,CAAC;;EAED;AACJ;AACA;EACI,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMjI,WAAW,GAAGtM,KAAK,CAACsM,WAAW;IACrC,MAAMhB,UAAU,GAAGtL,KAAK,CAACsL,UAAU;IACnC,MAAMe,UAAU,GAAGgI,UAAU;IAE7BlI,2EAAa,CAAC;MAAEG,WAAW,EAAEA,WAAW;MAAED,UAAU,EAAEA,UAAU;MAAEf,UAAU,EAAEA;IAAW,CAAC,CAAC;EAC/F,CAAC;EAED,oBACIlI,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC,cAAc;IAACD,GAAG,EAAE3D,KAAK,CAACuR;EAAY,gBACjDnO,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAe,gBAC1BR,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC,2CAA2C;IAAC4Q,QAAQ,EAAExU,KAAK,CAACoF,eAAgB;IAAC6N,OAAO,EAAEsB;EAAqB,GAAExD,EAAE,CAAC,kBAAkB,EAAE,oCAAoC,CAAU,CACnM,CAAC,eACN3N,KAAA,CAAA/C,aAAA;IAAKiG,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAC3C,SAAS,EAAC;EAAS,GAC/CmN,EAAE,CAAC,gEAAgE,EAAE,oCAAoC,CAAC,eAC3G3N,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC;EAAY,CAAS,CAAC,KAAC,EAACmN,EAAE,CAAC,kBAAkB,EAAE,oCAAoC,CAAC,eACtG3N,KAAA,CAAA/C,aAAA,8BACI+C,KAAA,CAAA/C,aAAA;IAAG8S,IAAI,EAAC,sGAAsG;IAACzC,MAAM,EAAC;EAAM,GACvHK,EAAE,CAAC,gCAAgC,EAAE,oCAAoC,CAAK,CAC/E,CACP,CACJ,CAAC;AAEd,CAAC;AAED,iEAAeqD,iBAAiB;;;;;;;;;;;;;;;ACxC8B;AAC9D,MAAM;EAAErD;AAAG,CAAC,GAAGjN,EAAE,CAACkN,IAAI;AAEtB,MAAMyD,iBAAiB,GAAIzU,KAAK,IAAK;EAEjC;AACJ;AACA;EACI,MAAMqU,UAAU,GAAGA,CAAA,KAAM;IACrBrU,KAAK,CAACsU,kBAAkB,CAAC,KAAK,CAAC;EACnC,CAAC;;EAED;AACJ;AACA;EACI,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMjI,WAAW,GAAGtM,KAAK,CAACsM,WAAW;IACrC,MAAMhB,UAAU,GAAGtL,KAAK,CAACsL,UAAU;IACnC,MAAMe,UAAU,GAAGgI,UAAU;IAE7BlI,2EAAa,CAAC;MAAEG,WAAW,EAAEA,WAAW;MAAED,UAAU,EAAEA,UAAU;MAAEf,UAAU,EAAEA;IAAW,CAAC,CAAC;EAC/F,CAAC;EAED,oBACIlI,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC,cAAc;IAACD,GAAG,EAAE3D,KAAK,CAACuR;EAAY,gBACjDnO,KAAA,CAAA/C,aAAA;IAAMuD,SAAS,EAAC,OAAO;IAACqP,OAAO,EAAEoB;EAAW,GAAC,MAAa,CAAC,eAC3DjR,KAAA,CAAA/C,aAAA;IAAIuD,SAAS,EAAC;EAAa,GAAEmN,EAAE,CAAC,qDAAqD,EAAE,oCAAoC,CAAM,CAAC,eAClI3N,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAC;EAAe,gBAC1BR,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC,2CAA2C;IAAC4Q,QAAQ,EAAExU,KAAK,CAACoF,eAAgB;IAAC6N,OAAO,EAAEsB;EAAqB,GAAExD,EAAE,CAAC,kBAAkB,EAAE,oCAAoC,CAAU,CACnM,CAAC,eACN3N,KAAA,CAAA/C,aAAA;IAAKiG,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAC3C,SAAS,EAAC;EAAgB,GACtDmN,EAAE,CAAC,gEAAgE,EAAE,oCAAoC,CAAC,eAC3G3N,KAAA,CAAA/C,aAAA;IAAQuD,SAAS,EAAC;EAAY,GAAC,GAAS,CAAC,KAAC,EAACmN,EAAE,CAAC,kBAAkB,EAAE,oCAAoC,CAAC,eACvG3N,KAAA,CAAA/C,aAAA,8BACI+C,KAAA,CAAA/C,aAAA;IAAG8S,IAAI,EAAC,sGAAsG;IAACzC,MAAM,EAAC;EAAM,GACvHK,EAAE,CAAC,gCAAgC,EAAE,oCAAoC,CAC3E,CACC,CACP,CACJ,CAAC;AAEd,CAAC;AAED,iEAAe0D,iBAAiB;;;;;;;;;;;;;;;;;;;;;AC3CyB;AAChB;AACJ;AACI;AACqB;AAE9D,MAAME,cAAc,GAAI3U,KAAK,IAAK;EAC9B,MAAM,CAAC4U,eAAe,EAAEN,kBAAkB,CAAC,GAAGjH,4DAAQ,CAACrN,KAAK,CAAC4S,UAAU,CAAC;EACxE,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGzH,4DAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0H,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3H,4DAAQ,CAAC,IAAI,CAAC;;EAE9D;AACJ;AACA;AACA;EACI,MAAM4H,wBAAwB,GAAI1R,IAAI,IAAK;IACvCuR,cAAc,CAACvR,IAAI,CAAC;EACxB,CAAC;;EAED;AACJ;AACA;AACA;EACI,MAAM2R,yBAAyB,GAAIzE,KAAK,IAAK;IACzC,IAAIzQ,KAAK,CAACiD,OAAO,KAAK,QAAQ,EAAE;MAC5B7C,QAAQ,CAAC+B,aAAa,CAAC,wCAAwC,CAAC,EAAEgT,eAAe,EAAEhT,aAAa,CAAC,mCAAmC,CAAC,EAAEiT,KAAK,CAAC,CAAC;IAClJ;IAEAJ,mBAAmB,CAAC,IAAI,CAAC;IACzBV,kBAAkB,CAAC,KAAK,CAAC;IACzBtU,KAAK,CAAC8R,WAAW,CAACrB,KAAK,CAAC;EAC5B,CAAC;EAED,MAAM4E,sBAAsB,GAAGA,CAAA,KAAM;IACjCL,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED5H,6DAAS,CAAC,MAAM;IACZ;AACR;AACA;AACA;IACO,MAAMnK,OAAO,GAAGjD,KAAK,CAACiD,OAAO;IAC7ByR,oEAAgB,CAACzR,OAAO,CAAC,CAAC;MAAE,GAAGjD,KAAK;MAAEoF,eAAe,EAAEiQ;IAAuB,CAAC,CAAC;EACnF,CAAC,EAAE,EAAE,CAAC;EAENjI,6DAAS,CAAC,MAAI;IACVkH,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAC,CAACtU,KAAK,CAACuR,WAAW,CAAC,CAAC;EAEtB,oBACInO,KAAA,CAAA/C,aAAA,CAAA+C,KAAA,CAAAC,QAAA,qBACID,KAAA,CAAA/C,aAAA;IAAK6O,KAAK,EAAC,iBAAiB;IAAC5I,KAAK,EAAE;MAACC,OAAO,EAAEqO,eAAe,GAAG,OAAO,GAAG;IAAM;EAAE,gBAC9ExR,KAAA,CAAA/C,aAAA;IAAK6O,KAAK,EAAC;EAAe,gBACtB9L,KAAA,CAAA/C,aAAA,CAACoU,+CAAiB;IAAClD,WAAW,EAAEvR,KAAK,CAACuR,WAAY;IAAC+C,kBAAkB,EAAEY,yBAA0B;IAAC5I,WAAW,EAAEuI,WAAY;IAACvJ,UAAU,EAAEtL,KAAK,CAACsL,UAAW;IAAClG,eAAe,EAAE2P;EAAiB,CAAE,CAAC,eAC/L3R,KAAA,CAAA/C,aAAA,CAACqT,6CAAe,EAAAS,QAAA,KAAKnU,KAAK;IAAE6T,iBAAiB,EAAEoB,wBAAyB;IAAC3J,UAAU,EAAEtL,KAAK,CAACsL;EAAW,EAAE,CAAC,eACzGlI,KAAA,CAAA/C,aAAA,CAAC+T,+CAAiB;IAAC7C,WAAW,EAAEvR,KAAK,CAACuR,WAAY;IAAC+C,kBAAkB,EAAEY,yBAA0B;IAAC5I,WAAW,EAAEuI,WAAY;IAACvJ,UAAU,EAAEtL,KAAK,CAACsL,UAAW;IAAClG,eAAe,EAAE2P;EAAiB,CAAE,CAC7L,CACJ,CACP,CAAC;AAEX,CAAC;AAED,iEAAeJ,cAAc;;;;;;;;;;;;;;AC/D7B,MAAMlB,iBAAiB,GAAIzT,KAAK,IAAK;EACjC,oBACIoD,KAAA,CAAA/C,aAAA;IAAKuD,SAAS,EAAE,4CAA4C5D,KAAK,CAAC4D,SAAS;EAAG,GACzE5D,KAAK,CAACsV,QAAQ,CAACjM,IAAI,CAAC,GAAG,CACvB,CAAC;AAEd,CAAC;AAED,iEAAeoK,iBAAiB;;;;;;;;;;ACRhC;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNoC;AACZ;AAExB,MAAM8B,IAAI,GAAGA,CAAA,KAAM;EACjB,IAAIC,UAAU,GAAG,IAAIxL,KAAK,CAAC,CAAC;EAC5B,MAAMyL,mBAAmB,GAAG,uDAAuD;EACnF,MAAMC,kBAAkB,GAAG,qEAAqE;EAEhGF,UAAU,CAAC/K,IAAI,CAACgL,mBAAmB,EAAEC,kBAAkB,CAAC;EAExDF,UAAU,CAACnT,OAAO,CAACsT,KAAK,IAAI;IAC1BvV,QAAQ,CAAC0C,IAAI,CAAC8S,kBAAkB,CAAC,WAAW,EAAED,KAAK,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC;AAGD,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEzS,KAAA,CAAA/C,aAAA,CAAC4Q,iDAAU,MAAE,CAAC;AAElB,CAAC;;AAED;AACAsE,IAAI,CAAC,CAAC;AACN;AACAnV,QAAQ,CAACqG,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD3C,EAAE,CAACxB,OAAO,CAACqQ,MAAM,eAACvP,KAAA,CAAA/C,aAAA,CAACwV,GAAG,MAAE,CAAC,EAAEzV,QAAQ,CAACsE,cAAc,CAAC,oBAAoB,CAAC,CAAC;AAC3E,CAAC,CAAC,C","sources":["webpack://automatic-translation-for-polylang/./src/component/FilterTargetContent/index.js","webpack://automatic-translation-for-polylang/./src/component/TranslateProvider/google/index.js","webpack://automatic-translation-for-polylang/./src/component/TranslateProvider/index.js","webpack://automatic-translation-for-polylang/./src/component/createTranslatedPost/createBlock.js","webpack://automatic-translation-for-polylang/./src/component/createTranslatedPost/index.js","webpack://automatic-translation-for-polylang/./src/component/storeSourceString/index.js","webpack://automatic-translation-for-polylang/./src/fetch-post.js","webpack://automatic-translation-for-polylang/./src/global-store/actions.js","webpack://automatic-translation-for-polylang/./src/global-store/index.js","webpack://automatic-translation-for-polylang/./src/global-store/reducer.js","webpack://automatic-translation-for-polylang/./src/global-store/selectors.js","webpack://automatic-translation-for-polylang/./src/global-store/types.js","webpack://automatic-translation-for-polylang/./src/popmodel.js","webpack://automatic-translation-for-polylang/./src/popupStringModal/body.js","webpack://automatic-translation-for-polylang/./src/popupStringModal/footer.js","webpack://automatic-translation-for-polylang/./src/popupStringModal/header.js","webpack://automatic-translation-for-polylang/./src/popupStringModal/index.js","webpack://automatic-translation-for-polylang/./src/popupStringModal/notice.js","webpack://automatic-translation-for-polylang/external window \"React\"","webpack://automatic-translation-for-polylang/external window \"ReactDOM\"","webpack://automatic-translation-for-polylang/external window [\"wp\",\"data\"]","webpack://automatic-translation-for-polylang/external window [\"wp\",\"element\"]","webpack://automatic-translation-for-polylang/webpack/bootstrap","webpack://automatic-translation-for-polylang/webpack/runtime/compat get default export","webpack://automatic-translation-for-polylang/webpack/runtime/define property getters","webpack://automatic-translation-for-polylang/webpack/runtime/hasOwnProperty shorthand","webpack://automatic-translation-for-polylang/webpack/runtime/make namespace object","webpack://automatic-translation-for-polylang/./src/index.js"],"sourcesContent":["const FilterTargetContent = (props) => {\r\n\r\n    /**\r\n     * Wraps the first element and its matching closing tag with translation spans.\r\n     * If no elements are found, returns the original HTML.\r\n     * @param {string} html - The HTML string to process.\r\n     * @returns {string} The modified HTML string with wrapped translation spans.\r\n     */\r\n    const wrapFirstAndMatchingClosingTag = (html) => {\r\n        // Create a temporary element to parse the HTML string\r\n        const tempElement = document.createElement('div');\r\n        tempElement.innerHTML = html;\r\n\r\n        // Get the first element\r\n        const firstElement = tempElement.firstElementChild;\r\n\r\n        if (!firstElement) {\r\n            return html; // If no elements, return the original HTML\r\n        }\r\n\r\n        // Get the opening tag of the first element\r\n        // const firstElementOpeningTag = firstElement.outerHTML.match(/^<[^>]+>/)[0];\r\n        const firstElementOpeningTag = firstElement.outerHTML.match(/^<[^>]+>/)[0];\r\n\r\n        // Check if the first element has a corresponding closing tag\r\n        const openTagName = firstElement.tagName.toLowerCase();\r\n        const closingTagName = new RegExp(`<\\/${openTagName}>`, 'i');\r\n\r\n        // Check if the inner HTML contains the corresponding closing tag\r\n        const closingTagMatch = firstElement.outerHTML.match(closingTagName);\r\n\r\n        // Wrap the first opening tag\r\n        const wrappedFirstTag = `#atfp_open_translate_span#${firstElementOpeningTag}#atfp_close_translate_span#`;\r\n\r\n        // Wrap the first element's outerHTML with the wrapped first tag\r\n        let filterContent = firstElement.outerHTML.replace(firstElementOpeningTag, wrappedFirstTag);\r\n\r\n        if (closingTagMatch) {\r\n            const wrappedClosingTag = `#atfp_open_translate_span#</${openTagName}>#atfp_close_translate_span#`;\r\n\r\n            filterContent = filterContent.replace(closingTagName, wrappedClosingTag);\r\n        }\r\n\r\n        firstElement.outerHTML = filterContent;\r\n\r\n        // Return the modified HTML\r\n        return tempElement.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Splits the content string based on a specific pattern.\r\n     * @param {string} string - The content string to split.\r\n     * @returns {Array} An array of strings after splitting based on the pattern.\r\n     */\r\n    const splitContent = (string) => {\r\n        const pattern = /(#atfp_open_translate_span#.*?#atfp_close_translate_span#)|'/;\r\n        const matches = string.split(pattern).filter(Boolean);\r\n\r\n        // Remove empty strings from the result\r\n        const output = matches.filter(match => match.trim() !== '');\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * Replaces the inner text of HTML elements with span elements for translation.\r\n     * @param {string} string - The HTML content string to process.\r\n     * @returns {Array} An array of strings after splitting based on the pattern.\r\n     */\r\n    const filterSourceData = (string) => {\r\n        function replaceInnerTextWithSpan(doc) {\r\n            let elements = doc.querySelector('body').querySelectorAll('*');\r\n            elements.forEach(element => {\r\n                let filterContent = wrapFirstAndMatchingClosingTag(element.outerHTML);\r\n                const textNode = document.createTextNode(filterContent);\r\n                element.parentNode.replaceChild(textNode, element);\r\n            });\r\n            return doc;\r\n        }\r\n\r\n        let parser = new DOMParser();\r\n        let doc = parser.parseFromString(string, 'text/html');\r\n\r\n        replaceInnerTextWithSpan(doc);\r\n        return splitContent(doc.body.innerText);\r\n    }\r\n\r\n    /**\r\n     * The content to be filtered based on the service type.\r\n     * If the service is 'google', the content is filtered using filterSourceData function, otherwise, the content remains unchanged.\r\n     */\r\n    const content = 'google' === props.service ? filterSourceData(props.content) : props.content;\r\n\r\n    /**\r\n     * Regular expression pattern to match the span elements that should not be translated.\r\n     */\r\n    const notTranslatePattern = /#atfp_open_translate_span#[\\s\\S]*?#atfp_close_translate_span#/;\r\n\r\n    /**\r\n     * Regular expression pattern to replace the placeholder span elements.\r\n     */\r\n    const replacePlaceholderPattern = /#atfp_open_translate_span#|#atfp_close_translate_span#/g;\r\n\r\n    return (\r\n        <>\r\n            {'google' === props.service ?\r\n                content.map((data, index) => {\r\n                    const notTranslate = notTranslatePattern.test(data);\r\n                    if (notTranslate) {\r\n                        return <span key={index} className=\"notranslate atfp-notraslate-tag\">{data.replace(replacePlaceholderPattern, '')}</span>;\r\n                    } else {\r\n                        return data;\r\n                    }\r\n                })\r\n                : content}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterTargetContent;","const { dispatch } = wp.data;\r\n/**\r\n * Saves the translation data by updating the translation content based on the provided translate object and data.\r\n * @param {Object} translateData - The data containing translation information.\r\n */\r\nconst saveTranslation = (translateData) => {\r\n    Object.keys(translateData).map(key => {\r\n        const data = translateData[key];\r\n\r\n        if (data.type !== 'content') {\r\n            const action = `${data.type}SaveTranslate`;\r\n            dispatch('block-atfp/translate')[action](data.translateContent);\r\n        } else {\r\n            dispatch('block-atfp/translate').contentSaveTranslate(key, data.translateContent, data.source);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Updates the translated content based on the provided translation object.\r\n */\r\nconst updateTranslatedContent = () => {\r\n    const container = document.getElementById(\"atfp_strings_model\");\r\n    const stringContainer = container.querySelector('.atfp_string_container');\r\n    const translatedData = stringContainer.querySelectorAll('td.translate[data-string-type]');\r\n\r\n    const data = {};\r\n\r\n    translatedData.forEach(ele => {\r\n        const translatedText = ele.innerText;\r\n        const key = ele.dataset.key;\r\n        const type = ele.dataset.stringType;\r\n        const sourceText = ele.closest('tr').querySelector('td[data-source=\"source_text\"]').innerText;\r\n\r\n        data[key] = { type: type, translateContent: translatedText, source: sourceText };\r\n    });\r\n\r\n    saveTranslation(data);\r\n}\r\n\r\n/**\r\n * Automatically scrolls the container and triggers the completion callback when the bottom is reached or certain conditions are met.\r\n * @param {Function} translateStatus - Callback function to execute when translation is deemed complete.\r\n */\r\nconst translationWaiting = (translateStatus) => {\r\n\r\n    let translateComplete = false;\r\n\r\n    const container = document.getElementById(\"atfp_strings_model\");\r\n    const stringContainer = container.querySelector('.atfp_string_container');\r\n\r\n    stringContainer.scrollTop = 0;\r\n    const scrollHeight = stringContainer.scrollHeight;\r\n    const scrollSpeed = Math.min(10000, scrollHeight);\r\n    let startTime = null;\r\n\r\n    const animateScroll=()=>{\r\n        const currentTime = performance.now();\r\n        const duration = scrollSpeed; // 10 seconds\r\n        const scrollTarget = scrollHeight + 2000;\r\n\r\n        if (!startTime) {\r\n            startTime = currentTime;\r\n        }\r\n\r\n        const progress = (currentTime - startTime) / duration;\r\n        const scrollPosition = scrollTarget * progress;\r\n\r\n        stringContainer.scrollTop = scrollPosition;\r\n\r\n        if (progress < 1) {\r\n            requestAnimationFrame(animateScroll);\r\n        }\r\n    }\r\n\r\n    if (scrollHeight !== undefined && scrollHeight > 100) {\r\n        container.querySelector(\".atfp_translate_progress\").style.display = \"block\";\r\n\r\n        setTimeout(() => {\r\n            animateScroll();\r\n            // stringContainer.scrollBy({\r\n            //     top: scrollHeight + 2000,\r\n            //     behavior: 'smooth',\r\n            // });\r\n        }, 2000);\r\n\r\n        stringContainer.addEventListener('scroll', () => {\r\n            var isScrolledToBottom = (stringContainer.scrollTop + stringContainer.clientHeight + 50 >= stringContainer.scrollHeight);\r\n\r\n            if (isScrolledToBottom && !translateComplete) {\r\n                translateStatus();\r\n                onCompleteTranslation(container);\r\n                translateComplete = true;\r\n            }\r\n        });\r\n\r\n        if (stringContainer.clientHeight + 10 >= scrollHeight) {\r\n            setTimeout(() => {\r\n                translateStatus();\r\n                onCompleteTranslation(container);\r\n            }, 1500);\r\n        }\r\n    } else {\r\n        setTimeout(() => {\r\n            translateStatus();\r\n            onCompleteTranslation(container);\r\n        }, 2000);\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the completion of translation by enabling save button, updating stats, and stopping translation progress.\r\n * @param {HTMLElement} container - The container element for translation.\r\n */\r\nconst onCompleteTranslation = (container) => {\r\n    // container.querySelector(\".atfp_save_strings\").disabled = false;\r\n    // container.querySelector(\".atfp_stats\").style.display = \"block\";\r\n    container.querySelector(\".atfp_translate_progress\").style.display = \"none\";\r\n    container.querySelector(\".atfp_string_container\").style.animation = \"none\";\r\n    document.body.style.top = '0';\r\n\r\n    const saveButton = container.querySelector('button.save_it');\r\n    saveButton.removeAttribute('disabled');\r\n    saveButton.classList.add('translated');\r\n    saveButton.classList.remove('notranslate');\r\n    updateTranslatedContent();\r\n}\r\n\r\n/**\r\n * Initializes Google Translate functionality on specific elements based on provided data.\r\n * @param {Object} data - The data containing source and target languages.\r\n */\r\nconst GoogleTranslater = (data) => {\r\n    // delete window.google;\r\n    const bodyEle = document.querySelector('body');\r\n    bodyEle.setAttribute('translate', 'no');\r\n\r\n    const { sourceLang, targetLang, translateStatus } = data;\r\n    \r\n    new google.translate.TranslateElement({\r\n        pageLanguage: sourceLang,\r\n        includedLanguages: targetLang,\r\n        defaultLanguage: sourceLang,\r\n        multilanguagePage: true,\r\n        autoDisplay: false,\r\n    }, 'atfp_google_translate_element');\r\n\r\n    document.querySelector(\"#atfp_google_translate_element\").addEventListener('change', () => {\r\n        translationWaiting(translateStatus);\r\n    });\r\n\r\n}\r\n\r\nexport default GoogleTranslater;","import GoogleTranslater from \"./google\";\r\n\r\n/**\r\n * Provides translation services using Deepl and Google Translate.\r\n */\r\nexport default { google: GoogleTranslater };\r\n","const { createBlock } = wp.blocks;\r\nconst { dispatch, select } = wp.data;\r\n\r\n/**\r\n * Filters and translates attributes of a block based on provided rules.\r\n * \r\n * @param {Object} block - The block to filter and translate attributes for.\r\n * @param {Object} blockParseRules - The rules for parsing the block.\r\n * @param {Object} replaceAttrRules - The rules for replacing attributes.\r\n * @returns {Object} The updated block with translated attributes.\r\n */\r\nconst filterTranslateAttr = (block, blockParseRules, replaceAttrRules) => {\r\n    const filterAttrArr = Object.values(blockParseRules);\r\n    const blockAttr = block.attributes;\r\n    const blockId = block.clientId;\r\n\r\n    // Function to update a nested attribute in the block\r\n    const updateNestedAttribute = (obj, path, value) => {\r\n        const attrReplaceKey = Object.keys(replaceAttrRules);\r\n        const attrKeyJoin = path.slice(-2).join('_');\r\n        let attrReplace = false;\r\n\r\n        if (attrReplaceKey.includes(attrKeyJoin)) {\r\n            const filterReplaceBlockName = replaceAttrRules[attrKeyJoin];\r\n            if (filterReplaceBlockName.includes(block.name)) {\r\n                path.pop()\r\n                attrReplace = true;\r\n            }\r\n        }\r\n        const newObj = { ...obj };\r\n        let current = newObj;\r\n        for (let i = 0; i < path.length - 1; i++) {\r\n            if (Object.getPrototypeOf(current[path[i]]) === Array.prototype) {\r\n                current[path[i]] = [...current[path[i]]];\r\n            } else {\r\n                current[path[i]] = { ...current[path[i]] }; // Create a shallow copy\r\n            }\r\n            current = current[path[i]];\r\n        }\r\n\r\n        if (attrReplace) {\r\n            current[path[path.length - 1]] = value.replace(/(?<!\\\\)\"|\\\\\"/g, \"'\");\r\n        } else {\r\n            current[path[path.length - 1]] = value;\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Updates translated attributes based on provided ID array and filter attribute object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs to update attributes for.\r\n     * @param {Object|Array} filterAttrObj - The filter attribute object to apply.\r\n     */\r\n    const updateTranslatedAttr = (idArr, filterAttrObj) => {\r\n\r\n        if (true === filterAttrObj) {\r\n\r\n            const newIdArr = new Array(...idArr);\r\n            const childIdArr = new Array();\r\n\r\n            let dynamicBlockAttr = blockAttr;\r\n            let uniqueId = blockId;\r\n\r\n            newIdArr.forEach(key => {\r\n                childIdArr.push(key);\r\n                uniqueId += `atfp${key}`;\r\n                dynamicBlockAttr = dynamicBlockAttr[key];\r\n            });\r\n\r\n            const blockAttrContent = dynamicBlockAttr;\r\n\r\n            if (undefined !== blockAttrContent && blockAttrContent.trim() !== '') {\r\n                let filterKey = uniqueId.replace(/[^a-zA-Z0-9]/g, '');\r\n                let translateContent = '';\r\n\r\n                if (!/[a-zA-Z]/.test(blockAttrContent)) {\r\n                    translateContent = blockAttrContent;\r\n                } else {\r\n                    translateContent = select('block-atfp/translate').getTranslatedString('content', blockAttrContent, filterKey);\r\n                }\r\n\r\n                block.attributes = updateNestedAttribute(block.attributes, newIdArr, translateContent);\r\n            }\r\n        }\r\n\r\n        if (Object.getPrototypeOf(filterAttrObj) === Array.prototype) {\r\n            childAttrArray(idArr, filterAttrObj);\r\n        } else if (Object.getPrototypeOf(filterAttrObj) === Object.prototype) {\r\n            childAttr(idArr, filterAttrObj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to handle updating translated attributes for a single level object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs to update attributes for.\r\n     * @param {Object} filterObj - The filter object containing attributes to update.\r\n     */\r\n    const childAttr = (idArr, filterObj) => {\r\n        Object.keys(filterObj).map(key => {\r\n            let filterObjType = filterObj;\r\n            filterObjType = filterObjType[key];\r\n            const newIdArr = new Array(...idArr, key);\r\n\r\n            updateTranslatedAttr(newIdArr, filterObjType);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to handle updating translated attributes for an array of objects.\r\n     * \r\n     * @param {Array} idArr - The array of IDs to update attributes for.\r\n     * @param {Array} attrFilter - The filter array containing attributes to update.\r\n     */\r\n    const childAttrArray = (idArr, attrFilter) => {\r\n        const newIdArr = new Array(...idArr);\r\n        let dynamicBlockAttr = blockAttr;\r\n\r\n        newIdArr.forEach(key => {\r\n            dynamicBlockAttr = dynamicBlockAttr[key];\r\n        });\r\n\r\n        if (Object.getPrototypeOf(dynamicBlockAttr) === Object.prototype) {\r\n            childAttr(idArr, attrFilter[0]);\r\n            return;\r\n        }\r\n\r\n        dynamicBlockAttr.forEach((_, index) => {\r\n            const nestedId = new Array();\r\n            newIdArr.forEach(key => {\r\n                nestedId.push(key);\r\n            });\r\n\r\n            nestedId.push(index);\r\n            updateTranslatedAttr(nestedId, attrFilter[0]);\r\n        });\r\n    }\r\n\r\n    filterAttrArr.forEach(data => {\r\n        Object.keys(data).forEach(key => {\r\n            const idArr = new Array(key);\r\n            updateTranslatedAttr(idArr, data[key]);\r\n        });\r\n    });\r\n\r\n    return block;\r\n}\r\n\r\n/**\r\n * Creates a translated block based on the provided block, child block, translate handler, and block rules.\r\n * If the block name is included in the block rules, it filters and translates the attributes accordingly.\r\n * \r\n * @param {Object} block - The block to create a translated version of.\r\n * @param {Array} childBlock - The child blocks associated with the main block.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n * @returns {Object} The newly created translated block.\r\n */\r\nconst createTranslatedBlock = (block, childBlock, blockRules) => {\r\n    const { name: blockName, attributes } = block;\r\n    const blockTranslateName = Object.keys(blockRules.AtfpBlockParseRules);\r\n\r\n    let attribute = { ...attributes };\r\n    let translatedBlock = block;\r\n    let newBlock = '';\r\n\r\n    if (blockTranslateName.includes(block.name)) {\r\n        translatedBlock = filterTranslateAttr(block, blockRules['AtfpBlockParseRules'][block.name], blockRules.AtfpCoreAttrReplace);\r\n        attribute = translatedBlock.attributes;\r\n    }\r\n\r\n    newBlock = createBlock(blockName, attribute, childBlock);\r\n\r\n    return newBlock;\r\n}\r\n\r\n/**\r\n * Creates a child block recursively by translating each inner block based on the provided block, translate handler, and block rules.\r\n * \r\n * @param {Object} block - The block to create a child block for.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n * @returns {Object} The newly created translated child block.\r\n */\r\nconst cretaeChildBlock = (block, blockRules) => {\r\n    let childBlock = block.innerBlocks.map(block => {\r\n        if (block.name) {\r\n            const childBlock = cretaeChildBlock(block, blockRules);\r\n            return childBlock;\r\n        }\r\n    });\r\n\r\n    const newBlock = createTranslatedBlock(block, childBlock, blockRules)\r\n\r\n    return newBlock;\r\n}\r\n\r\n/**\r\n * Creates the main blocks based on the provided block, translate handler, and block rules.\r\n * If the block name exists, it creates the main block along with its child blocks and inserts it into the block editor.\r\n * \r\n * @param {Object} block - The main block to create.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n */\r\nconst createBlocks = (block, blockRules) => {\r\n    const { name: blockName } = block;\r\n    // Create the main block\r\n    if (blockName) {\r\n        let childBlock = block.innerBlocks.map(block => {\r\n            if (block.name) {\r\n                return cretaeChildBlock(block, blockRules);\r\n            }\r\n        })\r\n        const parentBlock = createTranslatedBlock(block, childBlock, blockRules);\r\n\r\n        dispatch('core/block-editor').insertBlock(parentBlock);\r\n\r\n    }\r\n}\r\n\r\nexport default createBlocks;\r\n","import createBlocks from './createBlock';\r\nimport { dispatch, select } from '@wordpress/data';\r\n/**\r\n * Translates the post content and updates the post title, excerpt, and content.\r\n * \r\n * @param {Object} props - The properties containing post content, translation function, and block rules.\r\n */\r\nconst translatePost = (props) => {\r\n    const { editPost } = dispatch('core/editor');\r\n    const { modalClose, postContent } = props;\r\n\r\n    /**\r\n     * Updates the post title and excerpt text based on translation.\r\n     */\r\n    const postDataUpdate = () => {\r\n        const data = {};\r\n        const editPostData = Object.keys(postContent).filter(key => key !== 'content');\r\n\r\n        editPostData.forEach(key => {\r\n            const sourceData = postContent[key];\r\n            if (sourceData.trim() !== '') {\r\n                const translateContent = select('block-atfp/translate').getTranslatedString(key, sourceData);\r\n                data[key] = translateContent;\r\n            }\r\n        });\r\n\r\n        editPost(data);\r\n    }\r\n\r\n    /**\r\n     * Updates the post content based on translation.\r\n     */\r\n    const postContentUpdate = () => {\r\n        const postContentData = postContent.content;\r\n\r\n        if (postContentData.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        Object.values(postContentData).forEach(block => {\r\n            createBlocks(block, props.blockRules);\r\n        });\r\n    }\r\n\r\n    // Update post title and excerpt text\r\n    postDataUpdate();\r\n    // Update post content\r\n    postContentUpdate();\r\n    // Close string modal box\r\n    modalClose();\r\n}\r\n\r\nexport default translatePost;","const { dispatch } = wp.data;\r\n\r\nlet contentIndex = 0;\r\n/**\r\n * Filters and translates attributes of a block.\r\n * \r\n * @param {string} blockId - The ID of the block.\r\n * @param {Object} blockAttr - The attributes of the block.\r\n * @param {Object} filterAttr - The attributes to filter.\r\n */\r\nconst filterTranslateAttr = (blockId, blockAttr, filterAttr) => {\r\n\r\n    const filterAttrArr = Object.values(filterAttr);\r\n\r\n    /**\r\n     * Saves translated attributes based on the provided ID array and filter attribute object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Object} filterAttrObj - The filter attribute object.\r\n     */\r\n    const saveTranslatedAttr = (idArr, filterAttrObj) => {\r\n\r\n        if (true === filterAttrObj) {\r\n            const newIdArr = new Array(...idArr);\r\n            const childIdArr = new Array();\r\n\r\n            let dynamicBlockAttr = blockAttr;\r\n            let uniqueId = blockId;\r\n\r\n            newIdArr.forEach(key => {\r\n                childIdArr.push(key);\r\n                uniqueId += `atfp${key}`;\r\n                dynamicBlockAttr = dynamicBlockAttr[key];\r\n            });\r\n\r\n            const blockAttrContent = dynamicBlockAttr;\r\n\r\n            if (undefined !== blockAttrContent && blockAttrContent.trim() !== '') {\r\n\r\n                let filterKey = uniqueId.replace(/[^a-zA-Z0-9]/g, '');\r\n                if (!/[a-zA-Z]/.test(blockAttrContent)) {\r\n                    return false;\r\n                }\r\n                dispatch('block-atfp/translate').contentSaveSource(filterKey, blockAttrContent, contentIndex);\r\n                contentIndex++;\r\n            }\r\n        }\r\n\r\n        if (Object.getPrototypeOf(filterAttrObj) === Array.prototype) {\r\n            childAttrArray(idArr, filterAttrObj);\r\n        } else if (Object.getPrototypeOf(filterAttrObj) === Object.prototype) {\r\n            childAttr(idArr, filterAttrObj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterates over the keys of the filter object and calls saveTranslatedAttr for each key.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Object} filterObj - The filter object to iterate over.\r\n     */\r\n    const childAttr = (idArr, filterObj) => {\r\n        Object.keys(filterObj).map(key => {\r\n            let filterObjType = filterObj;\r\n            filterObjType = filterObjType[key];\r\n            const newIdArr = new Array(...idArr, key);\r\n\r\n            saveTranslatedAttr(newIdArr, filterObjType);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the attributes that are arrays and objects by recursively calling saveTranslatedAttr.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Array} attrFilter - The filter attribute array.\r\n     */\r\n    const childAttrArray = (idArr, attrFilter) => {\r\n        const newIdArr = new Array(...idArr);\r\n        let dynamicBlockAttr = blockAttr;\r\n\r\n        newIdArr.forEach(key => {\r\n            dynamicBlockAttr = dynamicBlockAttr[key];\r\n        });\r\n\r\n        if (Object.getPrototypeOf(dynamicBlockAttr) === Object.prototype) {\r\n            childAttr(idArr, attrFilter[0]);\r\n            return;\r\n        }\r\n\r\n        dynamicBlockAttr.forEach((_, index) => {\r\n            const nestedId = new Array();\r\n            newIdArr.forEach(key => {\r\n                nestedId.push(key);\r\n            });\r\n\r\n            nestedId.push(index);\r\n            saveTranslatedAttr(nestedId, attrFilter[0]);\r\n        });\r\n    }\r\n\r\n    filterAttrArr.forEach(data => {\r\n        Object.keys(data).forEach(key => {\r\n            const idArr = new Array(key);\r\n            saveTranslatedAttr(idArr, data[key]);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Retrieves the translation string for a block based on block rules and applies translation.\r\n * \r\n * @param {Object} block - The block to translate.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst getTranslateString = (block, blockRules) => {\r\n    const blockTranslateName = Object.keys(blockRules.AtfpBlockParseRules);\r\n\r\n    if (!blockTranslateName.includes(block.name)) {\r\n        return;\r\n    }\r\n\r\n    filterTranslateAttr(block.clientId, block.attributes, blockRules['AtfpBlockParseRules'][block.name]);\r\n}\r\n\r\n/**\r\n * Recursively processes child block attributes for translation.\r\n * \r\n * @param {Array} blocks - The array of blocks to translate.\r\n * @param {Object} blockRules - The rules for translating the blocks.\r\n */\r\nconst childBlockAttributesContent = (blocks, blockRules) => {\r\n    blocks.forEach(block => {\r\n        getTranslateString(block, blockRules);\r\n        if (block.innerBlocks) {\r\n            childBlockAttributesContent(block.innerBlocks, blockRules);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Processes the attributes of a block for translation.\r\n * \r\n * @param {Object} parseBlock - The block to parse for translation.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst blockAttributeContent = (parseBlock, blockRules) => {\r\n    Object.values(parseBlock).forEach(block => {\r\n        getTranslateString(block, blockRules);\r\n        if (block.innerBlocks) {\r\n            childBlockAttributesContent(block.innerBlocks, blockRules);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Saves the translation for a block based on its attributes.\r\n * \r\n * @param {Object} block - The block to save translation for.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst saveTranslation = (block, blockRules) => {\r\n    Object.keys(block).forEach(key => {\r\n        if (key === 'content') {\r\n            blockAttributeContent(block[key], blockRules);\r\n        } else {\r\n            const action = `${key}SaveSource`;\r\n            dispatch('block-atfp/translate')[action](block[key]);\r\n        }\r\n    });\r\n}\r\n\r\nexport default saveTranslation;","import { useEffect, useState } from \"@wordpress/element\";\r\nimport saveTranslation from \"./component/storeSourceString\";\r\nimport FilterTargetContent from \"./component/FilterTargetContent\";\r\nconst { parse } = wp.blocks;\r\nconst { select } = wp.data;\r\n\r\nconst FetchPost = (props) => {\r\n    const [translateContent, setTranslateContent] = useState([]);\r\n    const blockRules = props.blockRules;\r\n    const apiUrl = atfp_ajax_object.ajax_url;\r\n\r\n    /**\r\n     * Prepare data to send in API request.\r\n     */\r\n    const apiSendData = {\r\n        postId: parseInt(props.postId),\r\n        atfp_nonce: atfp_ajax_object.ajax_nonce,\r\n        action: atfp_ajax_object.action_fetch\r\n    };\r\n\r\n    /**\r\n     * useEffect hook to fetch post data from the specified API endpoint.\r\n     * Parses the response data and updates the state accordingly.\r\n     * Handles errors in fetching post content.\r\n     */\r\n    useEffect(() => {\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            },\r\n            body: new URLSearchParams(apiSendData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                const post_data = data.data;\r\n\r\n                if (post_data.content.trim() !== '') {\r\n                    post_data.content = parse(post_data.content);\r\n                }\r\n                props.setPostData(post_data);\r\n                saveTranslation(post_data, blockRules);\r\n\r\n                const translationEntry = select(\"block-atfp/translate\").getTranslationEntry();\r\n                setTranslateContent(translationEntry);\r\n                props.translateContent(translationEntry);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching post content:', error);\r\n            });\r\n    }, [props.fetchKey]);\r\n    let sNo = 0;\r\n\r\n    return (\r\n        <>\r\n            {translateContent.map((data, index) => {\r\n                return (\r\n                    undefined !== data.source && data.source.trim() !== '' &&\r\n                    <>\r\n                        <tr key={index}>\r\n                            <td>{sNo++}</td>\r\n                            <td data-source=\"source_text\">{data.source}</td>\r\n                            <td class=\"translate\" data-key={data.id} data-string-type={data.type}>\r\n                                <FilterTargetContent service={props.service} content={data.source} />\r\n                            </td>\r\n                        </tr>\r\n                    </>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FetchPost;","import AtfpActionTypes from \"./types\";\r\n\r\nexport const titleSaveSource = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceTitle,\r\n        text: data,\r\n    }\r\n};\r\n\r\nexport const titleSaveTranslate = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedTitle,\r\n        text: data,\r\n    }\r\n};\r\n\r\nexport const excerptSaveSource = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceExcerpt,\r\n        text: data,\r\n    }\r\n};\r\n\r\nexport const excerptSaveTranslate = (data) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedExcerpt,\r\n        text: data,\r\n    }\r\n};\r\n\r\nexport const contentSaveSource = (id, data, index) => {\r\n    return {\r\n        type: AtfpActionTypes.sourceContent,\r\n        text: data,\r\n        id: id,\r\n        index: index\r\n    }\r\n};\r\n\r\nexport const contentSaveTranslate = (id, data, source) => {\r\n    return {\r\n        type: AtfpActionTypes.traslatedContent,\r\n        text: data,\r\n        id: id,\r\n        source: source\r\n    }\r\n};\r\n","import reducer from \"./reducer\";\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\n\r\nconst { createReduxStore, register } = wp.data;\r\n\r\nconst store = createReduxStore('block-atfp/translate', {\r\n    reducer,\r\n    actions,\r\n    selectors\r\n});\r\n\r\nregister(store);","import AtfpActionTypes from \"./types\";\r\n\r\nconst TranslateDefaultState = {\r\n    title: {},\r\n    excerpt: {},\r\n    content: []\r\n};\r\n\r\nconst reducer = (state = TranslateDefaultState, action) => {\r\n    switch (action.type) {\r\n        case AtfpActionTypes.sourceTitle:\r\n            return { ...state, title: { ...state.title, source: action.text } };\r\n        case AtfpActionTypes.traslatedTitle:\r\n            return { ...state, title: { ...state.title, target: action.text } };\r\n        case AtfpActionTypes.sourceExcerpt:\r\n            return { ...state, excerpt: { ...state.excerpt, target: action.text } };\r\n        case AtfpActionTypes.traslatedExcerpt:\r\n            return { ...state, excerpt: { ...state.excerpt, target: action.text } };\r\n        case AtfpActionTypes.sourceContent:\r\n            return { ...state, content: { ...state.content, [action.id]: { ...(state.content[action.id] || []), source: action.text, index: action.index } } };\r\n        case AtfpActionTypes.traslatedContent:\r\n            if (state.content[action.id].source === action.source) {\r\n                return { ...state, content: { ...state.content, [action.id]: { ...(state.content[action.id] || []), target: action.text } } };\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export const getTranslationEntry = (state) => {\r\n    const translateEntry = new Array;\r\n\r\n    translateEntry.push({ id: 'title', source: state.title.source, type: 'title', target: (state.title.target || '') });\r\n    translateEntry.push({ id: 'excerpt', source: state.excerpt.source, type: 'excerpt', target: (state.excerpt.target || '') });\r\n\r\n    Object.keys(state.content).map(key => {\r\n        const newIndex = state.content[key].index + 2;\r\n        translateEntry[newIndex] = { type: 'content', id: key, source: state.content[key].source, target: (state.content[key].target || '') };\r\n    });\r\n\r\n    return translateEntry;\r\n};\r\n\r\nexport const getTranslatedString = (state, type, source, id = null) => {\r\n    if (type !== 'content' && state[type].source === source) {\r\n        return state[type].target;\r\n    } else if (state[type] && state[type][id] && state[type][id].source === source) {\r\n        return undefined !== state[type][id].target ? state[type][id].target : state[type][id].source;\r\n    }\r\n    return source;\r\n}","const AtfpActionTypes = {\r\n    sourceTitle: 'SAVE_SOURCE_TITLE',\r\n    traslatedTitle: 'SAVE_TRANSLATE_TITLE',\r\n    sourceExcerpt: 'SAVE_SOURCE_EXCERPT',\r\n    traslatedExcerpt: 'SAVE_TRANSLATE_EXCERPT',\r\n    sourceContent: 'SAVE_SOURCE_CONTENT',\r\n    traslatedContent: 'SAVE_TRANSLATE_CONTENT',\r\n};\r\n\r\nexport default AtfpActionTypes;","import ReactDOM from \"react-dom\";\r\nimport { useEffect, useState } from \"@wordpress/element\";\r\nimport PopStringModal from \"./popupStringModal\";\r\nconst { __ } = wp.i18n;\r\n\r\nconst PopupModal = () => {\r\n    const [fetchStatus, setFetchStatus] = useState(false);\r\n    const [targetBtn, setTargetBtn] = useState({});\r\n    const [blockRules, setBlockRules] = useState({});\r\n    const [modalRender, setModalRender] = useState({});\r\n    const [settingVisibility, setSettingVisibility]=useState(false);\r\n    const apiUrl = atfp_ajax_object.ajax_url;\r\n    const imgFolder=atfp_ajax_object.atfp_url + 'assets/images/';\r\n    /**\r\n     * Prepare data to send in API request.\r\n     */\r\n    const apiSendData = {\r\n        atfp_nonce: atfp_ajax_object.ajax_nonce,\r\n        action: atfp_ajax_object.action_block_rules\r\n    };\r\n\r\n\r\n    /**\r\n     * Update the fetch status state.\r\n     * @param {boolean} state - The state to update the fetch status with.\r\n     */\r\n    const updateFetch = (state) => {\r\n        setFetchStatus(state);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const duplicateBtn=document.querySelector('input#atfp-translate-button[name=\"atfp_meta_box_translate\"]');\r\n\r\n        duplicateBtn.addEventListener('click',()=>{\r\n            setSettingVisibility(prev=>!prev);\r\n        });\r\n    },[])\r\n\r\n    /**\r\n     * useEffect hook to fetch block rules data from the server.\r\n     * Triggers the fetch only when fetchStatus is true and blockRules is empty.\r\n     */\r\n    useEffect(() => {\r\n        if (Object.keys(blockRules).length > 0 || !fetchStatus) {\r\n            return;\r\n        }\r\n\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            },\r\n            body: new URLSearchParams(apiSendData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const blockRules = JSON.parse(data.data.blockRules);\r\n\r\n                setBlockRules(blockRules);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching post content:', error);\r\n            });\r\n    }, [fetchStatus])\r\n\r\n    /**\r\n     * useEffect hook to handle displaying the modal and rendering the PopStringModal component.\r\n     * Renders the modal only when blockRules is not empty and fetchStatus is true.\r\n     */\r\n    useEffect(() => {\r\n\r\n        if (Object.keys(blockRules).length <= 0) {\r\n            return;\r\n        }\r\n\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const btn = targetBtn;\r\n        const service = btn.dataset && btn.dataset.service;\r\n        const serviceLabel = btn.dataset && btn.dataset.serviceLabel;\r\n        const sourceLang = atfp_ajax_object.source_lang;\r\n        const targetLang = urlParams.get('new_lang');\r\n        const postId = urlParams.get('from_post');\r\n\r\n        const parentWrp = document.getElementById(\"atfp_strings_model\");\r\n\r\n        if (fetchStatus && Object.keys(blockRules).length > 0) {\r\n            ReactDOM.render(<PopStringModal\r\n                blockRules={blockRules}\r\n                visibility={fetchStatus}\r\n                updateFetch={updateFetch}\r\n                postId={postId}\r\n                service={service}\r\n                serviceLabel={serviceLabel}\r\n                sourceLang={sourceLang}\r\n                targetLang={targetLang}\r\n                modalRender={modalRender}\r\n            />, parentWrp);\r\n            setSettingVisibility(prev=>!prev);\r\n        }\r\n    }, [fetchStatus, blockRules]);\r\n\r\n    /**\r\n     * Function to handle fetching content based on the target button clicked.\r\n     * Sets the target button and updates the fetch status to true.\r\n     * @param {Event} e - The event object representing the button click.\r\n     */\r\n    const fetchContent = (e) => {\r\n        let targetElement=!e.target.classList.contains('atfp-service-btn') ? e.target.closest('.atfp-service-btn') : e.target;\r\n        setModalRender(prev => prev + 1);\r\n        setTargetBtn(targetElement);\r\n        setFetchStatus(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {settingVisibility &&\r\n                <div className=\"modal-container\" style={{display: settingVisibility ? 'block' : 'none'}}>\r\n                <div className=\"atfp-settings modal-content\">\r\n                    <div className=\"modal-header\">\r\n                    <h2>{__(\"Step 1 - Select Translation Provider (Beta)\", 'automatic-translation-for-polylang')}</h2>\r\n                    <span className=\"close\" onClick={()=>setSettingVisibility(false)}>&times;</span>\r\n                    </div>\r\n                    <hr />\r\n                    <strong className=\"atfp-heading\" style={{ marginBottom: \"10px\", display: \"inline-block\" }}>{__(\"Translate Using Google Page Translate Widget\", 'automatic-translation-for-polylang')}</strong>\r\n                    <div className=\"inputGroup\">\r\n                        <button className=\"atfp-service-btn translate button button-primary\" data-service=\"google\" data-service-label=\"Google Translate\" onClick={fetchContent}>{__(\"Google Translate (Beta)\", 'automatic-translation-for-polylang')}</button>\r\n                        <span className=\"proonly-button alsofree\">✔ {__(\"Available\", 'automatic-translation-for-polylang')}</span>\r\n                        <br /><a href=\"https://translate.google.com/\" target=\"_blank\"><img style={{ marginTop: \"5px\" }} src={`${imgFolder}powered-by-google.png`} alt={__(\"powered by Google Translate Widget\", 'automatic-translation-for-polylang')}></img></a>\r\n                    </div>\r\n                    <hr />\r\n                   <ul style={{ margin: \"0\" }}>\r\n                        <li><span style={{ color: \"green\" }}>✔</span> {__(\"Unlimited Translations with Google Translate\", 'automatic-translation-for-polylang')}</li>\r\n                        <li><span style={{ color: \"green\" }}>✔</span> {__(\"No API Key Required for Google Translate\", 'automatic-translation-for-polylang')}</li>\r\n                        <li><span style={{ color: \"green\" }}>✔</span> {__(\"Supports Multiple Languages\", 'automatic-translation-for-polylang')} - <a href=\"https://en.wikipedia.org/wiki/Google_Translate#Supported_languages\" target=\"_blank\">{__(\"See Supported Languages\", 'automatic-translation-for-polylang')}</a></li>\r\n                    </ul>\r\n                    <hr/>\r\n                    <div className=\"modal-footer\">\r\n                    <button className=\"atfp-setting-close\" onClick={()=>setSettingVisibility(false)}>{__(\"Close\", 'automatic-translation-for-polylang')}</button>\r\n                    </div>\r\n                </div>\r\n                </div> \r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PopupModal;","import { useState } from \"react\";\r\nimport FetchPost from \"../fetch-post\";\r\nimport StringPopUpNotice from \"./notice\";\r\nconst { __ } = wp.i18n;\r\n\r\nconst StringPopUpBody = (props) => {\r\n\r\n    const { service: service, serviceLabel: serviceLabel } = props;\r\n    const [translateEntryCount, setTranslateEntryCount]=useState(0);\r\n\r\n    /**\r\n     * Updates the post content with the provided content.\r\n     * @param {string} content - The content to update the post with.\r\n     */\r\n    const updatePostContent = (content) => {\r\n        props.updatePostContent(content);\r\n    }\r\n\r\n    const updateTranslateContent=(entries)=>{\r\n        let content='';\r\n        entries.forEach(object=>{\r\n            if(undefined !== object.source && object.source.trim() !== ''){\r\n                content += ' '+object.source;\r\n            };\r\n        });\r\n\r\n        const wordCount = content.trim().split(/\\s+/).filter(word => /[a-zA-Z]/.test(word)).length;\r\n        setTranslateEntryCount(wordCount);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-body\">\r\n            <div className=\"atfp_translate_progress\">{__(\"Automatic translation is in progress....\", 'automatic-translation-for-polylang')}<br />{__(\"It will take few minutes, enjoy ☕ coffee in this time!\", 'automatic-translation-for-polylang')}<br /><br />{__(\"Please do not leave this window or browser tab while translation is in progress...\", 'automatic-translation-for-polylang')}</div>\r\n            <div className={`translator-widget ${service}`}>\r\n                <h3 class=\"choose-lang\">{__(\"Choose language\", 'automatic-translation-for-polylang')} <span class=\"dashicons-before dashicons-translation\"></span></h3>\r\n                <div id=\"atfp_google_translate_element\"></div>\r\n            </div>\r\n\r\n            <div className=\"atfp_string_container\">\r\n                <table className=\"scrolldown\" id=\"stringTemplate\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"notranslate\">{__(\"S.No\", 'automatic-translation-for-polylang')}</th>\r\n                            <th className=\"notranslate\">{__(\"Source Text\", 'automatic-translation-for-polylang')}</th>\r\n                            <th className=\"notranslate\">{__(\"Translation\", 'automatic-translation-for-polylang')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <FetchPost blockRules={props.blockRules} setPostData={updatePostContent} {...props} translateContent={updateTranslateContent}/>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <StringPopUpNotice className=\"atfp_string_count\">{__(\"Total Strings Translated:\", 'automatic-translation-for-polylang')} {translateEntryCount}</StringPopUpNotice>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpBody;\r\n","import translatePost from \"../component/createTranslatedPost\";\r\nconst { __ } = wp.i18n;\r\n\r\nconst StringPopUpFooter = (props) => {\r\n\r\n    /**\r\n     * Function to close the popup modal.\r\n     */\r\n    const closeModal = () => {\r\n        props.setPopupVisibility(false);\r\n    }\r\n\r\n    /**\r\n     * Function to create a translated post using the provided content, translation, block rules, and modal close function.\r\n     */\r\n    const createTranslatedPost = () => {\r\n        const postContent = props.postContent;\r\n        const blockRules = props.blockRules;\r\n        const modalClose = closeModal;\r\n\r\n        translatePost({ postContent: postContent, modalClose: modalClose, blockRules: blockRules });\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-footer\" key={props.modalRender}>\r\n            <div className=\"save_btn_cont\">\r\n                <button className=\"notranslate save_it button button-primary\" disabled={props.translateStatus} onClick={createTranslatedPost}>{__(\"Save Translation\", 'automatic-translation-for-polylang')}</button>\r\n            </div>\r\n            <div style={{ display: \"none\" }} className=\"ytstats\">\r\n                {__(\"Wahooo! You have saved your valuable time via auto translating\", 'automatic-translation-for-polylang')}\r\n                <strong className=\"totalChars\"></strong> {__(\"characters using\", 'automatic-translation-for-polylang')}\r\n                <strong>\r\n                    <a href=\"https://wordpress.org/support/plugin/automatic-translator-addon-for-loco-translate/reviews/#new-post\" target=\"_new\">\r\n                        {__(\"Loco Automatic Translate Addon\", 'automatic-translation-for-polylang')}</a>\r\n                </strong>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpFooter;","import translatePost from \"../component/createTranslatedPost\";\r\nconst { __ } = wp.i18n;\r\n\r\nconst StringPopUpHeader = (props) => {\r\n\r\n    /**\r\n     * Function to close the popup modal.\r\n     */\r\n    const closeModal = () => {\r\n        props.setPopupVisibility(false);\r\n    }\r\n\r\n    /**\r\n     * Function to create a translated post using the provided content, translation settings, block rules, and modal close function.\r\n     */\r\n    const createTranslatedPost = () => {\r\n        const postContent = props.postContent;\r\n        const blockRules = props.blockRules;\r\n        const modalClose = closeModal;\r\n\r\n        translatePost({ postContent: postContent, modalClose: modalClose, blockRules: blockRules });\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-header\" key={props.modalRender}>\r\n            <span className=\"close\" onClick={closeModal}>&times;</span>\r\n            <h2 className=\"notranslate\">{__(\"Step 2 - Start Automatic Translation Process (Beta)\", 'automatic-translation-for-polylang')}</h2>\r\n            <div className=\"save_btn_cont\">\r\n                <button className=\"notranslate save_it button button-primary\" disabled={props.translateStatus} onClick={createTranslatedPost}>{__(\"Save Translation\", 'automatic-translation-for-polylang')}</button>\r\n            </div>\r\n            <div style={{ display: \"none\" }} className=\"ytstats hidden\">\r\n                {__(\"Wahooo! You have saved your valuable time via auto translating\", 'automatic-translation-for-polylang')}\r\n                <strong className=\"totalChars\"> </strong> {__(\"characters using\", 'automatic-translation-for-polylang')}\r\n                <strong>\r\n                    <a href=\"https://wordpress.org/support/plugin/automatic-translator-addon-for-loco-translate/reviews/#new-post\" target=\"_new\">\r\n                        {__(\"Loco Automatic Translate Addon\", 'automatic-translation-for-polylang')}\r\n                    </a>\r\n                </strong>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpHeader;","import { useEffect, useState } from \"@wordpress/element\";\r\nimport StringPopUpHeader from \"./header\";\r\nimport StringPopUpBody from \"./body\";\r\nimport StringPopUpFooter from \"./footer\";\r\nimport TranslateService from \"../component/TranslateProvider\";\r\n\r\nconst popStringModal = (props) => {\r\n    const [popupVisibility, setPopupVisibility] = useState(props.visibility);\r\n    const [refPostData, setRefPostData] = useState('');\r\n    const [translatePending, setTranslatePending] = useState(true);\r\n\r\n    /**\r\n     * Updates the post content data.\r\n     * @param {string} data - The data to set as the post content.\r\n     */\r\n    const updatePostContentHandler = (data) => {\r\n        setRefPostData(data);\r\n    }\r\n\r\n    /**\r\n     * Updates the fetch state.\r\n     * @param {boolean} state - The state to update the fetch with.\r\n     */\r\n    const setPopupVisibilityHandler = (state) => {\r\n        if (props.service === 'google') {\r\n            document.querySelector('div.skiptranslate iframe.skiptranslate')?.contentDocument?.querySelector('a[title=\"Close\"] img[alt=\"Close\"]')?.click();\r\n        }\r\n\r\n        setTranslatePending(true);\r\n        setPopupVisibility(false);\r\n        props.updateFetch(state);\r\n    }\r\n\r\n    const translateStatusHandler = () => {\r\n        setTranslatePending(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        /**\r\n         * Calls the translate service provider based on the service type.\r\n         * For example, it can call services like deepL or Google Translate.\r\n        */\r\n       const service = props.service;\r\n       TranslateService[service]({ ...props, translateStatus: translateStatusHandler });\r\n    }, []);\r\n    \r\n    useEffect(()=>{\r\n        setPopupVisibility(true);\r\n    },[props.modalRender])\r\n\r\n    return (\r\n        <>\r\n            <div class=\"modal-container\" style={{display: popupVisibility ? 'block' : 'none'}}>\r\n                <div class=\"modal-content\">\r\n                    <StringPopUpHeader modalRender={props.modalRender} setPopupVisibility={setPopupVisibilityHandler} postContent={refPostData} blockRules={props.blockRules} translateStatus={translatePending} />\r\n                    <StringPopUpBody {...props} updatePostContent={updatePostContentHandler} blockRules={props.blockRules} />\r\n                    <StringPopUpFooter modalRender={props.modalRender} setPopupVisibility={setPopupVisibilityHandler} postContent={refPostData} blockRules={props.blockRules} translateStatus={translatePending} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default popStringModal;","const StringPopUpNotice = (props) => {\r\n    return (\r\n        <div className={`notice inline notice-info is-dismissible ${props.className}`}>\r\n            {props.children.join(' ')}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpNotice;","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import PopupModal from './popmodel';\r\nimport './global-store';\r\n\r\nconst init = () => {\r\n  let atfpModals = new Array();\r\n  const atfpSettingModalWrp = '<!-- The Modal --><div id=\"atfp-setting-modal\"></div>';\r\n  const atfpStringModalWrp = '<div id=\"atfp_strings_model\" class=\"modal atfp_custom_model\"></div>';\r\n\r\n  atfpModals.push(atfpSettingModalWrp, atfpStringModalWrp);\r\n\r\n  atfpModals.forEach(modal => {\r\n    document.body.insertAdjacentHTML('beforeend', modal);\r\n  });\r\n}\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <PopupModal />\r\n  );\r\n};\r\n\r\n// Append app root wrapper in body\r\ninit();\r\n// Render the main App component\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  wp.element.render(<App />, document.getElementById('atfp-setting-modal'));\r\n});\r\n"],"names":["FilterTargetContent","props","wrapFirstAndMatchingClosingTag","html","tempElement","document","createElement","innerHTML","firstElement","firstElementChild","firstElementOpeningTag","outerHTML","match","openTagName","tagName","toLowerCase","closingTagName","RegExp","closingTagMatch","wrappedFirstTag","filterContent","replace","wrappedClosingTag","splitContent","string","pattern","matches","split","filter","Boolean","output","trim","filterSourceData","replaceInnerTextWithSpan","doc","elements","querySelector","querySelectorAll","forEach","element","textNode","createTextNode","parentNode","replaceChild","parser","DOMParser","parseFromString","body","innerText","content","service","notTranslatePattern","replacePlaceholderPattern","React","Fragment","map","data","index","notTranslate","test","key","className","dispatch","wp","saveTranslation","translateData","Object","keys","type","action","translateContent","contentSaveTranslate","source","updateTranslatedContent","container","getElementById","stringContainer","translatedData","ele","translatedText","dataset","stringType","sourceText","closest","translationWaiting","translateStatus","translateComplete","scrollTop","scrollHeight","scrollSpeed","Math","min","startTime","animateScroll","currentTime","performance","now","duration","scrollTarget","progress","scrollPosition","requestAnimationFrame","undefined","style","display","setTimeout","addEventListener","isScrolledToBottom","clientHeight","onCompleteTranslation","animation","top","saveButton","removeAttribute","classList","add","remove","GoogleTranslater","bodyEle","setAttribute","sourceLang","targetLang","google","translate","TranslateElement","pageLanguage","includedLanguages","defaultLanguage","multilanguagePage","autoDisplay","createBlock","blocks","select","filterTranslateAttr","block","blockParseRules","replaceAttrRules","filterAttrArr","values","blockAttr","attributes","blockId","clientId","updateNestedAttribute","obj","path","value","attrReplaceKey","attrKeyJoin","slice","join","attrReplace","includes","filterReplaceBlockName","name","pop","newObj","current","i","length","getPrototypeOf","Array","prototype","updateTranslatedAttr","idArr","filterAttrObj","newIdArr","childIdArr","dynamicBlockAttr","uniqueId","push","blockAttrContent","filterKey","getTranslatedString","childAttrArray","childAttr","filterObj","filterObjType","attrFilter","_","nestedId","createTranslatedBlock","childBlock","blockRules","blockName","blockTranslateName","AtfpBlockParseRules","attribute","translatedBlock","newBlock","AtfpCoreAttrReplace","cretaeChildBlock","innerBlocks","createBlocks","parentBlock","insertBlock","translatePost","editPost","modalClose","postContent","postDataUpdate","editPostData","sourceData","postContentUpdate","postContentData","contentIndex","filterAttr","saveTranslatedAttr","contentSaveSource","getTranslateString","childBlockAttributesContent","blockAttributeContent","parseBlock","useEffect","useState","parse","FetchPost","setTranslateContent","apiUrl","atfp_ajax_object","ajax_url","apiSendData","postId","parseInt","atfp_nonce","ajax_nonce","action_fetch","fetch","method","headers","URLSearchParams","then","response","json","post_data","setPostData","translationEntry","getTranslationEntry","catch","error","console","fetchKey","sNo","class","id","AtfpActionTypes","titleSaveSource","sourceTitle","text","titleSaveTranslate","traslatedTitle","excerptSaveSource","sourceExcerpt","excerptSaveTranslate","traslatedExcerpt","sourceContent","traslatedContent","reducer","actions","selectors","createReduxStore","register","store","TranslateDefaultState","title","excerpt","state","target","translateEntry","newIndex","ReactDOM","PopStringModal","__","i18n","PopupModal","fetchStatus","setFetchStatus","targetBtn","setTargetBtn","setBlockRules","modalRender","setModalRender","settingVisibility","setSettingVisibility","imgFolder","atfp_url","action_block_rules","updateFetch","duplicateBtn","prev","JSON","urlParams","window","location","search","btn","serviceLabel","source_lang","get","parentWrp","render","visibility","fetchContent","e","targetElement","contains","onClick","marginBottom","href","marginTop","src","alt","margin","color","StringPopUpNotice","StringPopUpBody","translateEntryCount","setTranslateEntryCount","updatePostContent","updateTranslateContent","entries","object","wordCount","word","_extends","StringPopUpFooter","closeModal","setPopupVisibility","createTranslatedPost","disabled","StringPopUpHeader","TranslateService","popStringModal","popupVisibility","refPostData","setRefPostData","translatePending","setTranslatePending","updatePostContentHandler","setPopupVisibilityHandler","contentDocument","click","translateStatusHandler","children","init","atfpModals","atfpSettingModalWrp","atfpStringModalWrp","modal","insertAdjacentHTML","App"],"sourceRoot":""}